!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
AF_INET	include/kern/socket.h	/^#define AF_INET	/;"	d
AF_INET6	include/kern/socket.h	/^#define AF_INET6	/;"	d
AF_UNIX	include/kern/socket.h	/^#define AF_UNIX	/;"	d
AF_UNSPEC	include/kern/socket.h	/^#define AF_UNSPEC	/;"	d
ARG_MAX	include/limits.h	/^#define ARG_MAX /;"	d
ARRAYASSERT	include/array.h	/^#define ARRAYASSERT /;"	d
ARRAYASSERT	include/array.h	/^#define ARRAYASSERT(/;"	d
ARRAYCOUNT	include/cdefs.h	/^#define ARRAYCOUNT(/;"	d
ARRAYINLINE	include/array.h	/^#define ARRAYINLINE /;"	d
ARRAYINLINE	lib/array.c	/^#define ARRAYINLINE$/;"	d	file:
ARRAYS_CHECKED	include/array.h	/^#define ARRAYS_CHECKED$/;"	d
AT	arch/mips/include/kern/regdefs.h	/^#define AT /;"	d
AT	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define AT /;"	d
AT	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define AT /;"	d
AT	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define AT /;"	d
AT	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define AT /;"	d
BASE_VERSION	include/version.h	/^#define BASE_VERSION /;"	d
BITS_PER_WORD	lib/bitmap.c	/^#define BITS_PER_WORD /;"	d	file:
CCA_CODE	arch/mips/include/specialreg.h	/^#define CCA_CODE /;"	d
CCA_CODE	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define CCA_CODE /;"	d
CCA_CODE	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define CCA_CODE /;"	d
CCA_CODESHIFT	arch/mips/include/specialreg.h	/^#define CCA_CODESHIFT /;"	d
CCA_CODESHIFT	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define CCA_CODESHIFT /;"	d
CCA_CODESHIFT	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define CCA_CODESHIFT /;"	d
CCA_COPN	arch/mips/include/specialreg.h	/^#define CCA_COPN /;"	d
CCA_COPN	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define CCA_COPN /;"	d
CCA_COPN	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define CCA_COPN /;"	d
CCA_IRQS	arch/mips/include/specialreg.h	/^#define CCA_IRQS /;"	d
CCA_IRQS	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define CCA_IRQS /;"	d
CCA_IRQS	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define CCA_IRQS /;"	d
CCA_JD	arch/mips/include/specialreg.h	/^#define CCA_JD /;"	d
CCA_JD	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define CCA_JD /;"	d
CCA_JD	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define CCA_JD /;"	d
CCA_UTLB	arch/mips/include/specialreg.h	/^#define CCA_UTLB /;"	d
CCA_UTLB	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define CCA_UTLB /;"	d
CCA_UTLB	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define CCA_UTLB /;"	d
CFGREG_DID	dev/lamebus/lamebus.c	/^#define CFGREG_DID /;"	d	file:
CFGREG_DRL	dev/lamebus/lamebus.c	/^#define CFGREG_DRL /;"	d	file:
CFGREG_VID	dev/lamebus/lamebus.c	/^#define CFGREG_VID /;"	d	file:
CHAR_BIT	include/types.h	/^#define CHAR_BIT /;"	d
CIN_INDEX	arch/mips/include/specialreg.h	/^#define CIN_INDEX /;"	d
CIN_INDEX	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define CIN_INDEX /;"	d
CIN_INDEX	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define CIN_INDEX /;"	d
CIN_INDEXSHIFT	arch/mips/include/specialreg.h	/^#define CIN_INDEXSHIFT /;"	d
CIN_INDEXSHIFT	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define CIN_INDEXSHIFT /;"	d
CIN_INDEXSHIFT	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define CIN_INDEXSHIFT /;"	d
CIN_P	arch/mips/include/specialreg.h	/^#define CIN_P /;"	d
CIN_P	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define CIN_P /;"	d
CIN_P	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define CIN_P /;"	d
COMPILE_ASSERT	include/cdefs.h	/^#define COMPILE_ASSERT(/;"	d
COMPUTE_ITERS	test/tt3.c	/^#define COMPUTE_ITERS /;"	d	file:
CONFNAME	compile/DUMBVM/Makefile	/^CONFNAME=DUMBVM$/;"	m
CONSOLE_INPUT_BUFFER_SIZE	dev/generic/console.h	/^#define CONSOLE_INPUT_BUFFER_SIZE /;"	d
CPU_FREQUENCY	arch/sys161/dev/lamebus_machdep.c	/^#define CPU_FREQUENCY /;"	d	file:
CST_BEV	arch/mips/include/specialreg.h	/^#define CST_BEV /;"	d
CST_BEV	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define CST_BEV /;"	d
CST_BEV	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define CST_BEV /;"	d
CST_IEc	arch/mips/include/specialreg.h	/^#define CST_IEc /;"	d
CST_IEc	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define CST_IEc /;"	d
CST_IEc	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define CST_IEc /;"	d
CST_IEo	arch/mips/include/specialreg.h	/^#define CST_IEo /;"	d
CST_IEo	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define CST_IEo /;"	d
CST_IEo	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define CST_IEo /;"	d
CST_IEp	arch/mips/include/specialreg.h	/^#define CST_IEp /;"	d
CST_IEp	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define CST_IEp /;"	d
CST_IEp	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define CST_IEp /;"	d
CST_IRQMASK	arch/mips/include/specialreg.h	/^#define CST_IRQMASK /;"	d
CST_IRQMASK	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define CST_IRQMASK /;"	d
CST_IRQMASK	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define CST_IRQMASK /;"	d
CST_KUc	arch/mips/include/specialreg.h	/^#define CST_KUc /;"	d
CST_KUc	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define CST_KUc /;"	d
CST_KUc	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define CST_KUc /;"	d
CST_KUo	arch/mips/include/specialreg.h	/^#define CST_KUo /;"	d
CST_KUo	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define CST_KUo /;"	d
CST_KUo	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define CST_KUo /;"	d
CST_KUp	arch/mips/include/specialreg.h	/^#define CST_KUp /;"	d
CST_KUp	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define CST_KUp /;"	d
CST_KUp	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define CST_KUp /;"	d
CST_MODEMASK	arch/mips/include/specialreg.h	/^#define CST_MODEMASK /;"	d
CST_MODEMASK	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define CST_MODEMASK /;"	d
CST_MODEMASK	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define CST_MODEMASK /;"	d
CTLCPU_CIPI	dev/lamebus/lamebus.c	/^#define CTLCPU_CIPI	/;"	d	file:
CTLCPU_CIRQE	dev/lamebus/lamebus.c	/^#define CTLCPU_CIRQE	/;"	d	file:
CTLCPU_CRAM	dev/lamebus/lamebus.c	/^#define CTLCPU_CRAM	/;"	d	file:
CTLREG_CPUE	dev/lamebus/lamebus.c	/^#define CTLREG_CPUE /;"	d	file:
CTLREG_CPUS	dev/lamebus/lamebus.c	/^#define CTLREG_CPUS /;"	d	file:
CTLREG_IRQE	dev/lamebus/lamebus.c	/^#define CTLREG_IRQE /;"	d	file:
CTLREG_IRQS	dev/lamebus/lamebus.c	/^#define CTLREG_IRQS /;"	d	file:
CTLREG_PWR	dev/lamebus/lamebus.c	/^#define CTLREG_PWR /;"	d	file:
CTLREG_RAMSZ	dev/lamebus/lamebus.c	/^#define CTLREG_RAMSZ /;"	d	file:
CTLREG_SELF	dev/lamebus/lamebus.c	/^#define CTLREG_SELF /;"	d	file:
CTX_PTBASE	arch/mips/include/specialreg.h	/^#define CTX_PTBASE /;"	d
CTX_PTBASE	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define CTX_PTBASE /;"	d
CTX_PTBASE	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define CTX_PTBASE /;"	d
CTX_PTBASESHIFT	arch/mips/include/specialreg.h	/^#define CTX_PTBASESHIFT /;"	d
CTX_PTBASESHIFT	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define CTX_PTBASESHIFT /;"	d
CTX_PTBASESHIFT	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define CTX_PTBASESHIFT /;"	d
CTX_VSHIFT	arch/mips/include/specialreg.h	/^#define CTX_VSHIFT /;"	d
CTX_VSHIFT	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define CTX_VSHIFT /;"	d
CTX_VSHIFT	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define CTX_VSHIFT /;"	d
CURCPU_EXISTS	include/current.h	/^#define CURCPU_EXISTS(/;"	d
DB_DEVICE	include/lib.h	/^#define DB_DEVICE /;"	d
DB_EXEC	include/lib.h	/^#define DB_EXEC /;"	d
DB_INTERRUPT	include/lib.h	/^#define DB_INTERRUPT /;"	d
DB_KMALLOC	include/lib.h	/^#define DB_KMALLOC /;"	d
DB_LOCORE	include/lib.h	/^#define DB_LOCORE /;"	d
DB_NET	include/lib.h	/^#define DB_NET /;"	d
DB_NETFS	include/lib.h	/^#define DB_NETFS /;"	d
DB_SEMFS	include/lib.h	/^#define DB_SEMFS /;"	d
DB_SFS	include/lib.h	/^#define DB_SFS /;"	d
DB_SYSCALL	include/lib.h	/^#define DB_SYSCALL /;"	d
DB_THREADS	include/lib.h	/^#define DB_THREADS /;"	d
DB_VFS	include/lib.h	/^#define DB_VFS /;"	d
DB_VM	include/lib.h	/^#define DB_VM /;"	d
DEBUG	include/lib.h	/^#define DEBUG(/;"	d
DEBUGASSERT	include/lib.h	/^#define DEBUGASSERT(/;"	d
DECLARRAY	include/array.h	/^#define DECLARRAY(/;"	d
DECLARRAY_BYTYPE	include/array.h	/^#define DECLARRAY_BYTYPE(/;"	d
DEFARRAY	include/array.h	/^#define DEFARRAY(/;"	d
DEFARRAY_BYTYPE	include/array.h	/^#define DEFARRAY_BYTYPE(/;"	d
DEFTEST	test/fstest.c	/^#define DEFTEST(/;"	d	file:
DELAYBUFSIZE	dev/generic/console.c	/^#define DELAYBUFSIZE /;"	d	file:
DEVOP_EACHOPEN	include/device.h	/^#define DEVOP_EACHOPEN(/;"	d
DEVOP_IO	include/device.h	/^#define DEVOP_IO(/;"	d
DEVOP_IOCTL	include/device.h	/^#define DEVOP_IOCTL(/;"	d
DIM	test/tt3.c	/^#define DIM /;"	d	file:
DIVROUNDUP	include/lib.h	/^#define DIVROUNDUP(/;"	d
DUMBVM_STACKPAGES	arch/mips/vm/dumbvm.c	/^#define DUMBVM_STACKPAGES /;"	d	file:
E2BIG	include/kern/errno.h	/^#define E2BIG /;"	d
EACCES	include/kern/errno.h	/^#define EACCES /;"	d
EADDRINUSE	include/kern/errno.h	/^#define EADDRINUSE /;"	d
EADDRNOTAVAIL	include/kern/errno.h	/^#define EADDRNOTAVAIL /;"	d
EAFNOSUPPORT	include/kern/errno.h	/^#define EAFNOSUPPORT /;"	d
EAGAIN	include/kern/errno.h	/^#define EAGAIN /;"	d
EBADF	include/kern/errno.h	/^#define EBADF /;"	d
EBUSY	include/kern/errno.h	/^#define EBUSY /;"	d
ECHILD	include/kern/errno.h	/^#define ECHILD /;"	d
ECONNREFUSED	include/kern/errno.h	/^#define ECONNREFUSED /;"	d
ECONNRESET	include/kern/errno.h	/^#define ECONNRESET /;"	d
EDOM	include/kern/errno.h	/^#define EDOM /;"	d
EDQUOT	include/kern/errno.h	/^#define EDQUOT /;"	d
EEXIST	include/kern/errno.h	/^#define EEXIST /;"	d
EFAULT	include/kern/errno.h	/^#define EFAULT /;"	d
EFBIG	include/kern/errno.h	/^#define EFBIG /;"	d
EFTYPE	include/kern/errno.h	/^#define EFTYPE /;"	d
EHOSTDOWN	include/kern/errno.h	/^#define EHOSTDOWN /;"	d
EHOSTUNREACH	include/kern/errno.h	/^#define EHOSTUNREACH /;"	d
EILSEQ	include/kern/errno.h	/^#define EILSEQ /;"	d
EINTR	include/kern/errno.h	/^#define EINTR /;"	d
EINVAL	include/kern/errno.h	/^#define EINVAL /;"	d
EIO	include/kern/errno.h	/^#define EIO /;"	d
EIOCTL	include/kern/errno.h	/^#define EIOCTL /;"	d
EISCONN	include/kern/errno.h	/^#define EISCONN /;"	d
EISDIR	include/kern/errno.h	/^#define EISDIR /;"	d
EISSOCK	include/kern/errno.h	/^#define EISSOCK /;"	d
EI_ABIVERSION	include/elf.h	/^#define	EI_ABIVERSION	/;"	d
EI_CLASS	include/elf.h	/^#define	EI_CLASS	/;"	d
EI_DATA	include/elf.h	/^#define	EI_DATA	/;"	d
EI_MAG0	include/elf.h	/^#define	EI_MAG0	/;"	d
EI_MAG1	include/elf.h	/^#define	EI_MAG1	/;"	d
EI_MAG2	include/elf.h	/^#define	EI_MAG2	/;"	d
EI_MAG3	include/elf.h	/^#define	EI_MAG3	/;"	d
EI_OSABI	include/elf.h	/^#define	EI_OSABI	/;"	d
EI_PAD	include/elf.h	/^#define	EI_PAD	/;"	d
EI_VERSION	include/elf.h	/^#define	EI_VERSION	/;"	d
ELFCLASS32	include/elf.h	/^#define	ELFCLASS32	/;"	d
ELFCLASS64	include/elf.h	/^#define	ELFCLASS64	/;"	d
ELFCLASSNONE	include/elf.h	/^#define	ELFCLASSNONE	/;"	d
ELFDATA2LSB	include/elf.h	/^#define	ELFDATA2LSB	/;"	d
ELFDATA2MSB	include/elf.h	/^#define	ELFDATA2MSB	/;"	d
ELFDATANONE	include/elf.h	/^#define	ELFDATANONE	/;"	d
ELFMAG0	include/elf.h	/^#define	ELFMAG0	/;"	d
ELFMAG1	include/elf.h	/^#define	ELFMAG1	/;"	d
ELFMAG2	include/elf.h	/^#define	ELFMAG2	/;"	d
ELFMAG3	include/elf.h	/^#define	ELFMAG3	/;"	d
ELFOSABI_HPUX	include/elf.h	/^#define	ELFOSABI_HPUX	/;"	d
ELFOSABI_STANDALONE	include/elf.h	/^#define	ELFOSABI_STANDALONE	/;"	d
ELFOSABI_SYSV	include/elf.h	/^#define	ELFOSABI_SYSV	/;"	d
ELF_NIDENT	include/elf.h	/^#define	ELF_NIDENT	/;"	d
ELOOP	include/kern/errno.h	/^#define ELOOP /;"	d
EMFILE	include/kern/errno.h	/^#define EMFILE /;"	d
EMLINK	include/kern/errno.h	/^#define EMLINK /;"	d
EMPROC	include/kern/errno.h	/^#define EMPROC /;"	d
EMSGSIZE	include/kern/errno.h	/^#define EMSGSIZE /;"	d
EMU_BUFFER	dev/lamebus/emu.c	/^#define EMU_BUFFER /;"	d	file:
EMU_MAXIO	dev/lamebus/emu.h	/^#define EMU_MAXIO /;"	d
EMU_OP_CLOSE	dev/lamebus/emu.c	/^#define EMU_OP_CLOSE /;"	d	file:
EMU_OP_CREATE	dev/lamebus/emu.c	/^#define EMU_OP_CREATE /;"	d	file:
EMU_OP_EXCLCREATE	dev/lamebus/emu.c	/^#define EMU_OP_EXCLCREATE /;"	d	file:
EMU_OP_GETSIZE	dev/lamebus/emu.c	/^#define EMU_OP_GETSIZE /;"	d	file:
EMU_OP_OPEN	dev/lamebus/emu.c	/^#define EMU_OP_OPEN /;"	d	file:
EMU_OP_READ	dev/lamebus/emu.c	/^#define EMU_OP_READ /;"	d	file:
EMU_OP_READDIR	dev/lamebus/emu.c	/^#define EMU_OP_READDIR /;"	d	file:
EMU_OP_TRUNC	dev/lamebus/emu.c	/^#define EMU_OP_TRUNC /;"	d	file:
EMU_OP_WRITE	dev/lamebus/emu.c	/^#define EMU_OP_WRITE /;"	d	file:
EMU_RES_BADHANDLE	dev/lamebus/emu.c	/^#define EMU_RES_BADHANDLE /;"	d	file:
EMU_RES_BADOP	dev/lamebus/emu.c	/^#define EMU_RES_BADOP /;"	d	file:
EMU_RES_BADPATH	dev/lamebus/emu.c	/^#define EMU_RES_BADPATH /;"	d	file:
EMU_RES_BADSIZE	dev/lamebus/emu.c	/^#define EMU_RES_BADSIZE /;"	d	file:
EMU_RES_EXISTS	dev/lamebus/emu.c	/^#define EMU_RES_EXISTS /;"	d	file:
EMU_RES_ISDIR	dev/lamebus/emu.c	/^#define EMU_RES_ISDIR /;"	d	file:
EMU_RES_MEDIA	dev/lamebus/emu.c	/^#define EMU_RES_MEDIA /;"	d	file:
EMU_RES_NOHANDLES	dev/lamebus/emu.c	/^#define EMU_RES_NOHANDLES /;"	d	file:
EMU_RES_NOSPACE	dev/lamebus/emu.c	/^#define EMU_RES_NOSPACE /;"	d	file:
EMU_RES_NOTDIR	dev/lamebus/emu.c	/^#define EMU_RES_NOTDIR /;"	d	file:
EMU_RES_SUCCESS	dev/lamebus/emu.c	/^#define EMU_RES_SUCCESS /;"	d	file:
EMU_RES_UNKNOWN	dev/lamebus/emu.c	/^#define EMU_RES_UNKNOWN /;"	d	file:
EMU_RES_UNSUPP	dev/lamebus/emu.c	/^#define EMU_RES_UNSUPP /;"	d	file:
EMU_ROOTHANDLE	dev/lamebus/emu.h	/^#define EMU_ROOTHANDLE /;"	d
EM_386	include/elf.h	/^#define	EM_386	/;"	d
EM_486	include/elf.h	/^#define	EM_486	/;"	d
EM_68HC12	include/elf.h	/^#define	EM_68HC12	/;"	d
EM_68K	include/elf.h	/^#define	EM_68K	/;"	d
EM_860	include/elf.h	/^#define	EM_860	/;"	d
EM_88K	include/elf.h	/^#define	EM_88K	/;"	d
EM_960	include/elf.h	/^#define	EM_960	/;"	d
EM_ALPHA	include/elf.h	/^#define	EM_ALPHA	/;"	d
EM_ALPHA_EXP	include/elf.h	/^#define	EM_ALPHA_EXP	/;"	d
EM_ARC	include/elf.h	/^#define	EM_ARC	/;"	d
EM_ARM	include/elf.h	/^#define	EM_ARM	/;"	d
EM_COLDFIRE	include/elf.h	/^#define	EM_COLDFIRE	/;"	d
EM_FR20	include/elf.h	/^#define	EM_FR20	/;"	d
EM_H8S	include/elf.h	/^#define	EM_H8S	/;"	d
EM_H8_300	include/elf.h	/^#define	EM_H8_300	/;"	d
EM_H8_300H	include/elf.h	/^#define	EM_H8_300H	/;"	d
EM_H8_500	include/elf.h	/^#define	EM_H8_500	/;"	d
EM_IA_64	include/elf.h	/^#define	EM_IA_64	/;"	d
EM_M32	include/elf.h	/^#define	EM_M32	/;"	d
EM_MACHINE	arch/mips/include/elf.h	/^#define EM_MACHINE /;"	d
EM_MACHINE	compile/DUMBVM/includelinks/machine/elf.h	/^#define EM_MACHINE /;"	d
EM_MACHINE	compile/DUMBVM/includelinks/mips/elf.h	/^#define EM_MACHINE /;"	d
EM_MIPS	include/elf.h	/^#define	EM_MIPS	/;"	d
EM_MIPS_RS3_LE	include/elf.h	/^#define	EM_MIPS_RS3_LE	/;"	d
EM_MIPS_X	include/elf.h	/^#define	EM_MIPS_X	/;"	d
EM_NCUBE	include/elf.h	/^#define	EM_NCUBE	/;"	d
EM_NONE	include/elf.h	/^#define	EM_NONE	/;"	d
EM_NUM	include/elf.h	/^#define	EM_NUM	/;"	d
EM_PARISC	include/elf.h	/^#define	EM_PARISC	/;"	d
EM_PPC	include/elf.h	/^#define	EM_PPC	/;"	d
EM_RCE	include/elf.h	/^#define	EM_RCE	/;"	d
EM_RH32	include/elf.h	/^#define	EM_RH32	/;"	d
EM_RS6000	include/elf.h	/^#define	EM_RS6000	/;"	d
EM_S370	include/elf.h	/^#define	EM_S370	/;"	d
EM_SH	include/elf.h	/^#define	EM_SH	/;"	d
EM_SPARC	include/elf.h	/^#define	EM_SPARC	/;"	d
EM_SPARC32PLUS	include/elf.h	/^#define	EM_SPARC32PLUS	/;"	d
EM_SPARCV9	include/elf.h	/^#define	EM_SPARCV9	/;"	d
EM_TRICORE	include/elf.h	/^#define	EM_TRICORE	/;"	d
EM_V800	include/elf.h	/^#define	EM_V800	/;"	d
EM_VAX	include/elf.h	/^#define	EM_VAX	/;"	d
EM_VPP500	include/elf.h	/^#define	EM_VPP500	/;"	d
ENAMETOOLONG	include/kern/errno.h	/^#define ENAMETOOLONG /;"	d
ENETDOWN	include/kern/errno.h	/^#define ENETDOWN /;"	d
ENETUNREACH	include/kern/errno.h	/^#define ENETUNREACH /;"	d
ENFILE	include/kern/errno.h	/^#define ENFILE /;"	d
ENODEV	include/kern/errno.h	/^#define ENODEV /;"	d
ENOENT	include/kern/errno.h	/^#define ENOENT /;"	d
ENOEXEC	include/kern/errno.h	/^#define ENOEXEC /;"	d
ENOMEM	include/kern/errno.h	/^#define ENOMEM /;"	d
ENOPROTOOPT	include/kern/errno.h	/^#define ENOPROTOOPT /;"	d
ENOSPC	include/kern/errno.h	/^#define ENOSPC /;"	d
ENOSYS	include/kern/errno.h	/^#define ENOSYS /;"	d
ENOTCONN	include/kern/errno.h	/^#define ENOTCONN /;"	d
ENOTDIR	include/kern/errno.h	/^#define ENOTDIR /;"	d
ENOTEMPTY	include/kern/errno.h	/^#define ENOTEMPTY /;"	d
ENOTSOCK	include/kern/errno.h	/^#define ENOTSOCK /;"	d
ENOTSUP	include/kern/errno.h	/^#define ENOTSUP /;"	d
ENPROC	include/kern/errno.h	/^#define ENPROC /;"	d
ENXIO	include/kern/errno.h	/^#define ENXIO /;"	d
EPERM	include/kern/errno.h	/^#define EPERM /;"	d
EPFNOSUPPORT	include/kern/errno.h	/^#define EPFNOSUPPORT /;"	d
EPIPE	include/kern/errno.h	/^#define EPIPE /;"	d
EPROTONOSUPPORT	include/kern/errno.h	/^#define EPROTONOSUPPORT /;"	d
EPROTOTYPE	include/kern/errno.h	/^#define EPROTOTYPE /;"	d
ERANGE	include/kern/errno.h	/^#define ERANGE /;"	d
EROFS	include/kern/errno.h	/^#define EROFS /;"	d
ESHUTDOWN	include/kern/errno.h	/^#define ESHUTDOWN /;"	d
ESOCKTNOSUPPORT	include/kern/errno.h	/^#define ESOCKTNOSUPPORT /;"	d
ESPIPE	include/kern/errno.h	/^#define ESPIPE /;"	d
ESRCH	include/kern/errno.h	/^#define ESRCH /;"	d
ETIMEDOUT	include/kern/errno.h	/^#define ETIMEDOUT /;"	d
ET_CORE	include/elf.h	/^#define	ET_CORE	/;"	d
ET_DYN	include/elf.h	/^#define	ET_DYN	/;"	d
ET_EXEC	include/elf.h	/^#define	ET_EXEC	/;"	d
ET_NONE	include/elf.h	/^#define	ET_NONE	/;"	d
ET_NUM	include/elf.h	/^#define	ET_NUM	/;"	d
ET_REL	include/elf.h	/^#define	ET_REL	/;"	d
EV_CURRENT	include/elf.h	/^#define	EV_CURRENT	/;"	d
EV_NONE	include/elf.h	/^#define	EV_NONE	/;"	d
EXADDR_GENERAL	arch/mips/include/specialreg.h	/^#define EXADDR_GENERAL	/;"	d
EXADDR_GENERAL	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define EXADDR_GENERAL	/;"	d
EXADDR_GENERAL	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define EXADDR_GENERAL	/;"	d
EXADDR_UTLB	arch/mips/include/specialreg.h	/^#define EXADDR_UTLB	/;"	d
EXADDR_UTLB	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define EXADDR_UTLB	/;"	d
EXADDR_UTLB	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define EXADDR_UTLB	/;"	d
EXDEV	include/kern/errno.h	/^#define EXDEV /;"	d
EX_ADEL	arch/mips/include/trapframe.h	/^#define EX_ADEL /;"	d
EX_ADEL	compile/DUMBVM/includelinks/machine/trapframe.h	/^#define EX_ADEL /;"	d
EX_ADEL	compile/DUMBVM/includelinks/mips/trapframe.h	/^#define EX_ADEL /;"	d
EX_ADES	arch/mips/include/trapframe.h	/^#define EX_ADES /;"	d
EX_ADES	compile/DUMBVM/includelinks/machine/trapframe.h	/^#define EX_ADES /;"	d
EX_ADES	compile/DUMBVM/includelinks/mips/trapframe.h	/^#define EX_ADES /;"	d
EX_BP	arch/mips/include/trapframe.h	/^#define EX_BP /;"	d
EX_BP	compile/DUMBVM/includelinks/machine/trapframe.h	/^#define EX_BP /;"	d
EX_BP	compile/DUMBVM/includelinks/mips/trapframe.h	/^#define EX_BP /;"	d
EX_CPU	arch/mips/include/trapframe.h	/^#define EX_CPU /;"	d
EX_CPU	compile/DUMBVM/includelinks/machine/trapframe.h	/^#define EX_CPU /;"	d
EX_CPU	compile/DUMBVM/includelinks/mips/trapframe.h	/^#define EX_CPU /;"	d
EX_DBE	arch/mips/include/trapframe.h	/^#define EX_DBE /;"	d
EX_DBE	compile/DUMBVM/includelinks/machine/trapframe.h	/^#define EX_DBE /;"	d
EX_DBE	compile/DUMBVM/includelinks/mips/trapframe.h	/^#define EX_DBE /;"	d
EX_IBE	arch/mips/include/trapframe.h	/^#define EX_IBE /;"	d
EX_IBE	compile/DUMBVM/includelinks/machine/trapframe.h	/^#define EX_IBE /;"	d
EX_IBE	compile/DUMBVM/includelinks/mips/trapframe.h	/^#define EX_IBE /;"	d
EX_IRQ	arch/mips/include/trapframe.h	/^#define EX_IRQ /;"	d
EX_IRQ	compile/DUMBVM/includelinks/machine/trapframe.h	/^#define EX_IRQ /;"	d
EX_IRQ	compile/DUMBVM/includelinks/mips/trapframe.h	/^#define EX_IRQ /;"	d
EX_MOD	arch/mips/include/trapframe.h	/^#define EX_MOD /;"	d
EX_MOD	compile/DUMBVM/includelinks/machine/trapframe.h	/^#define EX_MOD /;"	d
EX_MOD	compile/DUMBVM/includelinks/mips/trapframe.h	/^#define EX_MOD /;"	d
EX_OVF	arch/mips/include/trapframe.h	/^#define EX_OVF /;"	d
EX_OVF	compile/DUMBVM/includelinks/machine/trapframe.h	/^#define EX_OVF /;"	d
EX_OVF	compile/DUMBVM/includelinks/mips/trapframe.h	/^#define EX_OVF /;"	d
EX_RI	arch/mips/include/trapframe.h	/^#define EX_RI /;"	d
EX_RI	compile/DUMBVM/includelinks/machine/trapframe.h	/^#define EX_RI /;"	d
EX_RI	compile/DUMBVM/includelinks/mips/trapframe.h	/^#define EX_RI /;"	d
EX_SYS	arch/mips/include/trapframe.h	/^#define EX_SYS /;"	d
EX_SYS	compile/DUMBVM/includelinks/machine/trapframe.h	/^#define EX_SYS /;"	d
EX_SYS	compile/DUMBVM/includelinks/mips/trapframe.h	/^#define EX_SYS /;"	d
EX_TLBL	arch/mips/include/trapframe.h	/^#define EX_TLBL /;"	d
EX_TLBL	compile/DUMBVM/includelinks/machine/trapframe.h	/^#define EX_TLBL /;"	d
EX_TLBL	compile/DUMBVM/includelinks/mips/trapframe.h	/^#define EX_TLBL /;"	d
EX_TLBS	arch/mips/include/trapframe.h	/^#define EX_TLBS /;"	d
EX_TLBS	compile/DUMBVM/includelinks/machine/trapframe.h	/^#define EX_TLBS /;"	d
EX_TLBS	compile/DUMBVM/includelinks/mips/trapframe.h	/^#define EX_TLBS /;"	d
Elf32_Ehdr	include/elf.h	/^} Elf32_Ehdr;$/;"	t	typeref:struct:__anona52b83e50108
Elf32_Phdr	include/elf.h	/^} Elf32_Phdr;$/;"	t	typeref:struct:__anona52b83e50208
Elf_Ehdr	include/elf.h	/^typedef Elf32_Ehdr Elf_Ehdr;$/;"	t	typeref:typename:Elf32_Ehdr
Elf_Phdr	include/elf.h	/^typedef Elf32_Phdr Elf_Phdr;$/;"	t	typeref:typename:Elf32_Phdr
FAKE_MAGIC	test/threadlisttest.c	/^#define FAKE_MAGIC /;"	d	file:
FD_CLOEXEC	include/kern/fcntl.h	/^#define FD_CLOEXEC /;"	d
FILENAME	test/fstest.c	/^#define FILENAME /;"	d	file:
FSOP_GETROOT	include/fs.h	/^#define FSOP_GETROOT(/;"	d
FSOP_GETVOLNAME	include/fs.h	/^#define FSOP_GETVOLNAME(/;"	d
FSOP_SYNC	include/fs.h	/^#define FSOP_SYNC(/;"	d
FSOP_UNMOUNT	include/fs.h	/^#define FSOP_UNMOUNT(/;"	d
F_DUPFD	include/kern/fcntl.h	/^#define F_DUPFD /;"	d
F_GETFD	include/kern/fcntl.h	/^#define F_GETFD /;"	d
F_GETFL	include/kern/fcntl.h	/^#define F_GETFL /;"	d
F_GETLK	include/kern/fcntl.h	/^#define F_GETLK /;"	d
F_GETOWN	include/kern/fcntl.h	/^#define F_GETOWN /;"	d
F_RDLCK	include/kern/fcntl.h	/^#define F_RDLCK /;"	d
F_SETFD	include/kern/fcntl.h	/^#define F_SETFD /;"	d
F_SETFL	include/kern/fcntl.h	/^#define F_SETFL /;"	d
F_SETLK	include/kern/fcntl.h	/^#define F_SETLK /;"	d
F_SETLKW	include/kern/fcntl.h	/^#define F_SETLKW /;"	d
F_SETOWN	include/kern/fcntl.h	/^#define F_SETOWN /;"	d
F_UNLCK	include/kern/fcntl.h	/^#define F_UNLCK /;"	d
F_WRLCK	include/kern/fcntl.h	/^#define F_WRLCK /;"	d
GET_STATUS	arch/mips/thread/cpu.c	/^#define GET_STATUS(/;"	d	file:
GROUP_VERSION	include/version.h	/^#define GROUP_VERSION /;"	d
GUARD_FILLBYTE	vm/kmalloc.c	/^#define GUARD_FILLBYTE /;"	d	file:
GUARD_HALFWORD	vm/kmalloc.c	/^#define GUARD_HALFWORD /;"	d	file:
GUARD_OVERHEAD	vm/kmalloc.c	/^#define GUARD_OVERHEAD /;"	d	file:
GUARD_PTROFFSET	vm/kmalloc.c	/^#define GUARD_PTROFFSET /;"	d	file:
GUARD_RETBYTE	vm/kmalloc.c	/^#define GUARD_RETBYTE /;"	d	file:
HIGH_VERSION	dev/lamebus/lnet_att.c	/^#define HIGH_VERSION /;"	d	file:
HIGH_VERSION	dev/lamebus/lscreen_att.c	/^#define HIGH_VERSION /;"	d	file:
HZ	include/clock.h	/^#define HZ /;"	d
INCLUDES	Makefile	/^INCLUDES=\\$/;"	m
INIT_CURCPU	arch/mips/include/current.h	/^#define INIT_CURCPU(/;"	d
INIT_CURCPU	compile/DUMBVM/includelinks/machine/current.h	/^#define INIT_CURCPU(/;"	d
INIT_CURCPU	compile/DUMBVM/includelinks/mips/current.h	/^#define INIT_CURCPU(/;"	d
INLINE	include/cdefs.h	/^#define INLINE /;"	d
INUSE_WORDS	vm/kmalloc.c	/^#define INUSE_WORDS /;"	d	file:
INVALID_OFFSET	vm/kmalloc.c	/^#define INVALID_OFFSET /;"	d	file:
IOV_MAX	include/limits.h	/^#define IOV_MAX /;"	d
IPI_OFFLINE	include/cpu.h	/^#define IPI_OFFLINE	/;"	d
IPI_PANIC	include/cpu.h	/^#define IPI_PANIC	/;"	d
IPI_TLBSHOOTDOWN	include/cpu.h	/^#define IPI_TLBSHOOTDOWN	/;"	d
IPI_UNIDLE	include/cpu.h	/^#define IPI_UNIDLE	/;"	d
IPL_HIGH	include/spl.h	/^#define IPL_HIGH /;"	d
IPL_NONE	include/spl.h	/^#define IPL_NONE /;"	d
ITEMSIZE	test/kmalloctest.c	/^#define ITEMSIZE /;"	d	file:
ITEMSIZE	test/malloctest.c	/^#define ITEMSIZE /;"	d	file:
ITIMER_PROF	include/kern/time.h	/^#define ITIMER_PROF	/;"	d
ITIMER_REAL	include/kern/time.h	/^#define ITIMER_REAL	/;"	d
ITIMER_VIRTUAL	include/kern/time.h	/^#define ITIMER_VIRTUAL	/;"	d
KASSERT	include/lib.h	/^#define KASSERT(/;"	d
KDEBUG	compile/DUMBVM/Makefile	/^KDEBUG=-g$/;"	m
KTOP	compile/DUMBVM/Makefile	/^KTOP=..\/..$/;"	m
LABEL_OVERHEAD	vm/kmalloc.c	/^#define LABEL_OVERHEAD /;"	d	file:
LABEL_PTROFFSET	vm/kmalloc.c	/^#define LABEL_PTROFFSET /;"	d	file:
LAMEBUS_IPI_BIT	arch/sys161/dev/lamebus_machdep.c	/^#define LAMEBUS_IPI_BIT /;"	d	file:
LAMEBUS_IRQ_BIT	arch/sys161/dev/lamebus_machdep.c	/^#define LAMEBUS_IRQ_BIT /;"	d	file:
LARGEST_SUBPAGE_SIZE	vm/kmalloc.c	/^#define LARGEST_SUBPAGE_SIZE /;"	d	file:
LBCS161_DISK	dev/lamebus/lamebus.h	/^#define LBCS161_DISK /;"	d
LBCS161_EMUFS	dev/lamebus/lamebus.h	/^#define LBCS161_EMUFS /;"	d
LBCS161_MPBUSCTL	dev/lamebus/lamebus.h	/^#define LBCS161_MPBUSCTL /;"	d
LBCS161_NET	dev/lamebus/lamebus.h	/^#define LBCS161_NET /;"	d
LBCS161_RANDOM	dev/lamebus/lamebus.h	/^#define LBCS161_RANDOM /;"	d
LBCS161_SCREEN	dev/lamebus/lamebus.h	/^#define LBCS161_SCREEN /;"	d
LBCS161_SERIAL	dev/lamebus/lamebus.h	/^#define LBCS161_SERIAL /;"	d
LBCS161_TIMER	dev/lamebus/lamebus.h	/^#define LBCS161_TIMER /;"	d
LBCS161_TRACE	dev/lamebus/lamebus.h	/^#define LBCS161_TRACE /;"	d
LBCS161_UPBUSCTL	dev/lamebus/lamebus.h	/^#define LBCS161_UPBUSCTL /;"	d
LB_BASEADDR	arch/sys161/include/bus.h	/^#define LB_BASEADDR /;"	d
LB_BASEADDR	compile/DUMBVM/includelinks/platform/bus.h	/^#define LB_BASEADDR /;"	d
LB_BASEADDR	compile/DUMBVM/includelinks/sys161/bus.h	/^#define LB_BASEADDR /;"	d
LB_CONFIG_SIZE	dev/lamebus/lamebus.h	/^#define LB_CONFIG_SIZE /;"	d
LB_CONTROLLER_SLOT	dev/lamebus/lamebus.h	/^#define LB_CONTROLLER_SLOT /;"	d
LB_CTLCPU_OFFSET	dev/lamebus/lamebus.h	/^#define LB_CTLCPU_OFFSET /;"	d
LB_CTLCPU_SIZE	dev/lamebus/lamebus.h	/^#define LB_CTLCPU_SIZE /;"	d
LB_NSLOTS	dev/lamebus/lamebus.h	/^#define LB_NSLOTS /;"	d
LB_SLOT_SIZE	dev/lamebus/lamebus.h	/^#define LB_SLOT_SIZE /;"	d
LB_VENDOR_CS161	dev/lamebus/lamebus.h	/^#define LB_VENDOR_CS161 /;"	d
LHD_BUFFER	dev/lamebus/lhd.c	/^#define LHD_BUFFER /;"	d	file:
LHD_IDLE	dev/lamebus/lhd.c	/^#define LHD_IDLE /;"	d	file:
LHD_INVSECT	dev/lamebus/lhd.c	/^#define LHD_INVSECT /;"	d	file:
LHD_ISWRITE	dev/lamebus/lhd.c	/^#define LHD_ISWRITE /;"	d	file:
LHD_MEDIA	dev/lamebus/lhd.c	/^#define LHD_MEDIA /;"	d	file:
LHD_OK	dev/lamebus/lhd.c	/^#define LHD_OK /;"	d	file:
LHD_REG_NSECT	dev/lamebus/lhd.c	/^#define LHD_REG_NSECT /;"	d	file:
LHD_REG_RPM	dev/lamebus/lhd.c	/^#define LHD_REG_RPM /;"	d	file:
LHD_REG_SECT	dev/lamebus/lhd.c	/^#define LHD_REG_SECT /;"	d	file:
LHD_REG_STAT	dev/lamebus/lhd.c	/^#define LHD_REG_STAT /;"	d	file:
LHD_SECTSIZE	dev/lamebus/lhd.h	/^#define LHD_SECTSIZE /;"	d
LHD_STATEMASK	dev/lamebus/lhd.c	/^#define LHD_STATEMASK /;"	d	file:
LHD_WORKING	dev/lamebus/lhd.c	/^#define LHD_WORKING /;"	d	file:
LOCK_EX	include/kern/fcntl.h	/^#define LOCK_EX /;"	d
LOCK_NB	include/kern/fcntl.h	/^#define LOCK_NB /;"	d
LOCK_SH	include/kern/fcntl.h	/^#define LOCK_SH /;"	d
LOCK_UN	include/kern/fcntl.h	/^#define LOCK_UN /;"	d
LOGIN_NAME_MAX	include/limits.h	/^#define LOGIN_NAME_MAX /;"	d
LOW_VERSION	dev/lamebus/emu_att.c	/^#define LOW_VERSION /;"	d	file:
LOW_VERSION	dev/lamebus/lhd_att.c	/^#define LOW_VERSION /;"	d	file:
LOW_VERSION	dev/lamebus/lnet_att.c	/^#define LOW_VERSION /;"	d	file:
LOW_VERSION	dev/lamebus/lrandom_att.c	/^#define LOW_VERSION /;"	d	file:
LOW_VERSION	dev/lamebus/lscreen_att.c	/^#define LOW_VERSION /;"	d	file:
LOW_VERSION	dev/lamebus/lser_att.c	/^#define LOW_VERSION /;"	d	file:
LOW_VERSION	dev/lamebus/ltimer_att.c	/^#define LOW_VERSION /;"	d	file:
LOW_VERSION	dev/lamebus/ltrace_att.c	/^#define LOW_VERSION /;"	d	file:
LR_RANDMAX	dev/lamebus/lrandom.c	/^#define LR_RANDMAX /;"	d	file:
LR_REG_RAND	dev/lamebus/lrandom.c	/^#define LR_REG_RAND /;"	d	file:
LSCR_IRQ_ACTIVE	dev/lamebus/lscreen.c	/^#define LSCR_IRQ_ACTIVE /;"	d	file:
LSCR_IRQ_ENABLE	dev/lamebus/lscreen.c	/^#define LSCR_IRQ_ENABLE /;"	d	file:
LSCR_REG_CHAR	dev/lamebus/lscreen.c	/^#define LSCR_REG_CHAR /;"	d	file:
LSCR_REG_POSN	dev/lamebus/lscreen.c	/^#define LSCR_REG_POSN /;"	d	file:
LSCR_REG_RIRQ	dev/lamebus/lscreen.c	/^#define LSCR_REG_RIRQ /;"	d	file:
LSCR_REG_SIZE	dev/lamebus/lscreen.c	/^#define LSCR_REG_SIZE /;"	d	file:
LSCR_SCREEN	dev/lamebus/lscreen.c	/^#define LSCR_SCREEN /;"	d	file:
LSER_IRQ_ACTIVE	dev/lamebus/lser.c	/^#define LSER_IRQ_ACTIVE /;"	d	file:
LSER_IRQ_ENABLE	dev/lamebus/lser.c	/^#define LSER_IRQ_ENABLE /;"	d	file:
LSER_IRQ_FORCE	dev/lamebus/lser.c	/^#define LSER_IRQ_FORCE /;"	d	file:
LSER_REG_CHAR	dev/lamebus/lser.c	/^#define LSER_REG_CHAR /;"	d	file:
LSER_REG_RIRQ	dev/lamebus/lser.c	/^#define LSER_REG_RIRQ /;"	d	file:
LSER_REG_WIRQ	dev/lamebus/lser.c	/^#define LSER_REG_WIRQ /;"	d	file:
LTRACE_REG_DEBUG	dev/lamebus/ltrace.c	/^#define LTRACE_REG_DEBUG /;"	d	file:
LTRACE_REG_DUMP	dev/lamebus/ltrace.c	/^#define LTRACE_REG_DUMP /;"	d	file:
LTRACE_REG_TROFF	dev/lamebus/ltrace.c	/^#define LTRACE_REG_TROFF /;"	d	file:
LTRACE_REG_TRON	dev/lamebus/ltrace.c	/^#define LTRACE_REG_TRON /;"	d	file:
LT_GRANULARITY	dev/lamebus/ltimer.c	/^#define LT_GRANULARITY /;"	d	file:
LT_REG_COUNT	dev/lamebus/ltimer.c	/^#define LT_REG_COUNT /;"	d	file:
LT_REG_IRQ	dev/lamebus/ltimer.c	/^#define LT_REG_IRQ /;"	d	file:
LT_REG_NSEC	dev/lamebus/ltimer.c	/^#define LT_REG_NSEC /;"	d	file:
LT_REG_ROE	dev/lamebus/ltimer.c	/^#define LT_REG_ROE /;"	d	file:
LT_REG_SEC	dev/lamebus/ltimer.c	/^#define LT_REG_SEC /;"	d	file:
LT_REG_SPKR	dev/lamebus/ltimer.c	/^#define LT_REG_SPKR /;"	d	file:
MAKENAME	test/fstest.c	/^#define MAKENAME(/;"	d	file:
MAXCPUS	arch/sys161/include/maxcpus.h	/^#define MAXCPUS /;"	d
MAXCPUS	compile/DUMBVM/includelinks/platform/maxcpus.h	/^#define MAXCPUS /;"	d
MAXCPUS	compile/DUMBVM/includelinks/sys161/maxcpus.h	/^#define MAXCPUS /;"	d
MAXMENUARGS	main/menu.c	/^#define MAXMENUARGS /;"	d	file:
MEMBAR_INLINE	include/membar.h	/^#define MEMBAR_INLINE /;"	d
MEMBAR_INLINE	thread/spinlock.c	/^#define MEMBAR_INLINE /;"	d	file:
MIGRATE_HARDCLOCKS	thread/clock.c	/^#define MIGRATE_HARDCLOCKS	/;"	d	file:
MIPS_KSEG0	arch/mips/include/vm.h	/^#define MIPS_KSEG0 /;"	d
MIPS_KSEG0	compile/DUMBVM/includelinks/machine/vm.h	/^#define MIPS_KSEG0 /;"	d
MIPS_KSEG0	compile/DUMBVM/includelinks/mips/vm.h	/^#define MIPS_KSEG0 /;"	d
MIPS_KSEG1	arch/mips/include/vm.h	/^#define MIPS_KSEG1 /;"	d
MIPS_KSEG1	compile/DUMBVM/includelinks/machine/vm.h	/^#define MIPS_KSEG1 /;"	d
MIPS_KSEG1	compile/DUMBVM/includelinks/mips/vm.h	/^#define MIPS_KSEG1 /;"	d
MIPS_KSEG2	arch/mips/include/vm.h	/^#define MIPS_KSEG2 /;"	d
MIPS_KSEG2	compile/DUMBVM/includelinks/machine/vm.h	/^#define MIPS_KSEG2 /;"	d
MIPS_KSEG2	compile/DUMBVM/includelinks/mips/vm.h	/^#define MIPS_KSEG2 /;"	d
MIPS_KUSEG	arch/mips/include/vm.h	/^#define MIPS_KUSEG /;"	d
MIPS_KUSEG	compile/DUMBVM/includelinks/machine/vm.h	/^#define MIPS_KUSEG /;"	d
MIPS_KUSEG	compile/DUMBVM/includelinks/mips/vm.h	/^#define MIPS_KUSEG /;"	d
MIPS_TIMER_BIT	arch/sys161/dev/lamebus_machdep.c	/^#define MIPS_TIMER_BIT /;"	d	file:
MKPAB	vm/kmalloc.c	/^#define MKPAB(/;"	d	file:
NAME_MAX	include/limits.h	/^#define NAME_MAX /;"	d
NCHUNKS	test/fstest.c	/^#define NCHUNKS /;"	d	file:
NCREATE	test/fstest.c	/^#define NCREATE /;"	d	file:
NCVLOOPS	test/synchtest.c	/^#define NCVLOOPS /;"	d	file:
NCVS	test/synchtest.c	/^#define NCVS /;"	d	file:
NGROUPS_MAX	include/limits.h	/^#define NGROUPS_MAX /;"	d
NLOCKLOOPS	test/synchtest.c	/^#define NLOCKLOOPS /;"	d	file:
NLONG	test/fstest.c	/^#define NLONG /;"	d	file:
NLOOPS	test/synchtest.c	/^#define NLOOPS /;"	d	file:
NPAGEREFS_PER_PAGE	vm/kmalloc.c	/^#define NPAGEREFS_PER_PAGE /;"	d	file:
NSEMLOOPS	test/synchtest.c	/^#define NSEMLOOPS /;"	d	file:
NSIZES	vm/kmalloc.c	/^#define NSIZES /;"	d	file:
NTHREADS	test/fstest.c	/^#define NTHREADS /;"	d	file:
NTHREADS	test/kmalloctest.c	/^#define NTHREADS /;"	d	file:
NTHREADS	test/malloctest.c	/^#define NTHREADS /;"	d	file:
NTHREADS	test/synchtest.c	/^#define NTHREADS /;"	d	file:
NTHREADS	test/threadtest.c	/^#define NTHREADS /;"	d	file:
NTRAPCODES	arch/mips/locore/trap.c	/^#define NTRAPCODES /;"	d	file:
NTRIES	test/kmalloctest.c	/^#define NTRIES /;"	d	file:
NTRIES	test/malloctest.c	/^#define NTRIES /;"	d	file:
NULL	include/types.h	/^#define NULL /;"	d
NUMNAMES	test/threadlisttest.c	/^#define NUMNAMES /;"	d	file:
NUM_KM3_SIZES	test/kmalloctest.c	/^#define NUM_KM3_SIZES /;"	d	file:
NUM_KM3_SIZES	test/malloctest.c	/^#define NUM_KM3_SIZES /;"	d	file:
NUM_KM4_SIZES	test/kmalloctest.c	/^#define NUM_KM4_SIZES /;"	d	file:
NUM_KM4_SIZES	test/malloctest.c	/^#define NUM_KM4_SIZES /;"	d	file:
NUM_PAGEREFPAGES	vm/kmalloc.c	/^#define NUM_PAGEREFPAGES /;"	d	file:
NUM_TLB	arch/mips/include/tlb.h	/^#define NUM_TLB /;"	d
NUM_TLB	compile/DUMBVM/includelinks/machine/tlb.h	/^#define NUM_TLB /;"	d
NUM_TLB	compile/DUMBVM/includelinks/mips/tlb.h	/^#define NUM_TLB /;"	d
NWAITCHANS	test/tt3.c	/^#define NWAITCHANS /;"	d	file:
OPEN_MAX	include/limits.h	/^#define OPEN_MAX /;"	d
OPT_DUMBVM	compile/DUMBVM/opt-dumbvm.h	/^#define OPT_DUMBVM /;"	d
OPT_NET	compile/DUMBVM/opt-net.h	/^#define OPT_NET /;"	d
OPT_NETFS	compile/DUMBVM/opt-netfs.h	/^#define OPT_NETFS /;"	d
OPT_NOASSERTS	compile/DUMBVM/opt-noasserts.h	/^#define OPT_NOASSERTS /;"	d
OPT_SEMFS	compile/DUMBVM/opt-semfs.h	/^#define OPT_SEMFS /;"	d
OPT_SFS	compile/DUMBVM/opt-sfs.h	/^#define OPT_SFS /;"	d
O_ACCMODE	include/kern/fcntl.h	/^#define O_ACCMODE /;"	d
O_APPEND	include/kern/fcntl.h	/^#define O_APPEND /;"	d
O_CREAT	include/kern/fcntl.h	/^#define O_CREAT /;"	d
O_EXCL	include/kern/fcntl.h	/^#define O_EXCL /;"	d
O_NOCTTY	include/kern/fcntl.h	/^#define O_NOCTTY /;"	d
O_RDONLY	include/kern/fcntl.h	/^#define O_RDONLY /;"	d
O_RDWR	include/kern/fcntl.h	/^#define O_RDWR /;"	d
O_TRUNC	include/kern/fcntl.h	/^#define O_TRUNC /;"	d
O_WRONLY	include/kern/fcntl.h	/^#define O_WRONLY /;"	d
P	thread/synch.c	/^P(struct semaphore *sem)$/;"	f	typeref:typename:void
PADDR_TO_KVADDR	arch/mips/include/vm.h	/^#define PADDR_TO_KVADDR(/;"	d
PADDR_TO_KVADDR	compile/DUMBVM/includelinks/machine/vm.h	/^#define PADDR_TO_KVADDR(/;"	d
PADDR_TO_KVADDR	compile/DUMBVM/includelinks/mips/vm.h	/^#define PADDR_TO_KVADDR(/;"	d
PAGE_FRAME	arch/mips/include/vm.h	/^#define PAGE_FRAME /;"	d
PAGE_FRAME	compile/DUMBVM/includelinks/machine/vm.h	/^#define PAGE_FRAME /;"	d
PAGE_FRAME	compile/DUMBVM/includelinks/mips/vm.h	/^#define PAGE_FRAME /;"	d
PAGE_SIZE	arch/mips/include/vm.h	/^#define PAGE_SIZE /;"	d
PAGE_SIZE	compile/DUMBVM/includelinks/machine/vm.h	/^#define PAGE_SIZE /;"	d
PAGE_SIZE	compile/DUMBVM/includelinks/mips/vm.h	/^#define PAGE_SIZE /;"	d
PATH_MAX	include/limits.h	/^#define PATH_MAX /;"	d
PF_INET	include/kern/socket.h	/^#define PF_INET	/;"	d
PF_INET6	include/kern/socket.h	/^#define PF_INET6	/;"	d
PF_R	include/elf.h	/^#define	PF_R	/;"	d
PF_UNIX	include/kern/socket.h	/^#define PF_UNIX	/;"	d
PF_UNSPEC	include/kern/socket.h	/^#define PF_UNSPEC	/;"	d
PF_W	include/elf.h	/^#define	PF_W	/;"	d
PF_X	include/elf.h	/^#define	PF_X	/;"	d
PID_MAX	include/limits.h	/^#define PID_MAX /;"	d
PID_MIN	include/limits.h	/^#define PID_MIN /;"	d
PIPE_BUF	include/limits.h	/^#define PIPE_BUF /;"	d
PRIO_MAX	include/kern/resource.h	/^#define PRIO_MAX	/;"	d
PRIO_MIN	include/kern/resource.h	/^#define PRIO_MIN	/;"	d
PRIO_PGRP	include/kern/resource.h	/^#define PRIO_PGRP	/;"	d
PRIO_PROCESS	include/kern/resource.h	/^#define PRIO_PROCESS	/;"	d
PRIO_USER	include/kern/resource.h	/^#define PRIO_USER	/;"	d
PR_BLOCKTYPE	vm/kmalloc.c	/^#define PR_BLOCKTYPE(/;"	d	file:
PR_PAGEADDR	vm/kmalloc.c	/^#define PR_PAGEADDR(/;"	d	file:
PT_DYNAMIC	include/elf.h	/^#define	PT_DYNAMIC	/;"	d
PT_INTERP	include/elf.h	/^#define	PT_INTERP	/;"	d
PT_LOAD	include/elf.h	/^#define	PT_LOAD	/;"	d
PT_MIPS_REGINFO	include/elf.h	/^#define	PT_MIPS_REGINFO	/;"	d
PT_NOTE	include/elf.h	/^#define	PT_NOTE	/;"	d
PT_NULL	include/elf.h	/^#define	PT_NULL	/;"	d
PT_NUM	include/elf.h	/^#define	PT_NUM	/;"	d
PT_PHDR	include/elf.h	/^#define	PT_PHDR	/;"	d
PT_SHLIB	include/elf.h	/^#define	PT_SHLIB	/;"	d
RANDOM_MAX	include/lib.h	/^#define RANDOM_MAX /;"	d
RB_HALT	include/kern/reboot.h	/^#define RB_HALT /;"	d
RB_POWEROFF	include/kern/reboot.h	/^#define RB_POWEROFF /;"	d
RB_REBOOT	include/kern/reboot.h	/^#define RB_REBOOT /;"	d
REG_HANDLE	dev/lamebus/emu.c	/^#define REG_HANDLE /;"	d	file:
REG_IOLEN	dev/lamebus/emu.c	/^#define REG_IOLEN /;"	d	file:
REG_OFFSET	dev/lamebus/emu.c	/^#define REG_OFFSET /;"	d	file:
REG_OPER	dev/lamebus/emu.c	/^#define REG_OPER /;"	d	file:
REG_RESULT	dev/lamebus/emu.c	/^#define REG_RESULT /;"	d	file:
RLIMIT_CORE	include/kern/resource.h	/^#define RLIMIT_CORE	/;"	d
RLIMIT_CPU	include/kern/resource.h	/^#define RLIMIT_CPU	/;"	d
RLIMIT_DATA	include/kern/resource.h	/^#define RLIMIT_DATA	/;"	d
RLIMIT_FSIZE	include/kern/resource.h	/^#define RLIMIT_FSIZE	/;"	d
RLIMIT_MEMLOCK	include/kern/resource.h	/^#define RLIMIT_MEMLOCK	/;"	d
RLIMIT_NOFILE	include/kern/resource.h	/^#define RLIMIT_NOFILE	/;"	d
RLIMIT_NPROC	include/kern/resource.h	/^#define RLIMIT_NPROC	/;"	d
RLIMIT_RSS	include/kern/resource.h	/^#define RLIMIT_RSS	/;"	d
RLIMIT_STACK	include/kern/resource.h	/^#define RLIMIT_STACK	/;"	d
RLIM_INFINITY	include/kern/resource.h	/^#define RLIM_INFINITY	/;"	d
ROUNDUP	include/lib.h	/^#define ROUNDUP(/;"	d
RUSAGE_CHILDREN	include/kern/resource.h	/^#define RUSAGE_CHILDREN	/;"	d
RUSAGE_SELF	include/kern/resource.h	/^#define RUSAGE_SELF	/;"	d
R_MIPS_16	arch/mips/include/elf.h	/^#define R_MIPS_16	/;"	d
R_MIPS_16	compile/DUMBVM/includelinks/machine/elf.h	/^#define R_MIPS_16	/;"	d
R_MIPS_16	compile/DUMBVM/includelinks/mips/elf.h	/^#define R_MIPS_16	/;"	d
R_MIPS_26	arch/mips/include/elf.h	/^#define R_MIPS_26	/;"	d
R_MIPS_26	compile/DUMBVM/includelinks/machine/elf.h	/^#define R_MIPS_26	/;"	d
R_MIPS_26	compile/DUMBVM/includelinks/mips/elf.h	/^#define R_MIPS_26	/;"	d
R_MIPS_32	arch/mips/include/elf.h	/^#define R_MIPS_32	/;"	d
R_MIPS_32	compile/DUMBVM/includelinks/machine/elf.h	/^#define R_MIPS_32	/;"	d
R_MIPS_32	compile/DUMBVM/includelinks/mips/elf.h	/^#define R_MIPS_32	/;"	d
R_MIPS_CALL16	arch/mips/include/elf.h	/^#define R_MIPS_CALL16	/;"	d
R_MIPS_CALL16	compile/DUMBVM/includelinks/machine/elf.h	/^#define R_MIPS_CALL16	/;"	d
R_MIPS_CALL16	compile/DUMBVM/includelinks/mips/elf.h	/^#define R_MIPS_CALL16	/;"	d
R_MIPS_GOT16	arch/mips/include/elf.h	/^#define R_MIPS_GOT16	/;"	d
R_MIPS_GOT16	compile/DUMBVM/includelinks/machine/elf.h	/^#define R_MIPS_GOT16	/;"	d
R_MIPS_GOT16	compile/DUMBVM/includelinks/mips/elf.h	/^#define R_MIPS_GOT16	/;"	d
R_MIPS_GPREL16	arch/mips/include/elf.h	/^#define R_MIPS_GPREL16	/;"	d
R_MIPS_GPREL16	compile/DUMBVM/includelinks/machine/elf.h	/^#define R_MIPS_GPREL16	/;"	d
R_MIPS_GPREL16	compile/DUMBVM/includelinks/mips/elf.h	/^#define R_MIPS_GPREL16	/;"	d
R_MIPS_GPREL32	arch/mips/include/elf.h	/^#define R_MIPS_GPREL32	/;"	d
R_MIPS_GPREL32	compile/DUMBVM/includelinks/machine/elf.h	/^#define R_MIPS_GPREL32	/;"	d
R_MIPS_GPREL32	compile/DUMBVM/includelinks/mips/elf.h	/^#define R_MIPS_GPREL32	/;"	d
R_MIPS_HI16	arch/mips/include/elf.h	/^#define R_MIPS_HI16	/;"	d
R_MIPS_HI16	compile/DUMBVM/includelinks/machine/elf.h	/^#define R_MIPS_HI16	/;"	d
R_MIPS_HI16	compile/DUMBVM/includelinks/mips/elf.h	/^#define R_MIPS_HI16	/;"	d
R_MIPS_LITERAL	arch/mips/include/elf.h	/^#define R_MIPS_LITERAL	/;"	d
R_MIPS_LITERAL	compile/DUMBVM/includelinks/machine/elf.h	/^#define R_MIPS_LITERAL	/;"	d
R_MIPS_LITERAL	compile/DUMBVM/includelinks/mips/elf.h	/^#define R_MIPS_LITERAL	/;"	d
R_MIPS_LO16	arch/mips/include/elf.h	/^#define R_MIPS_LO16	/;"	d
R_MIPS_LO16	compile/DUMBVM/includelinks/machine/elf.h	/^#define R_MIPS_LO16	/;"	d
R_MIPS_LO16	compile/DUMBVM/includelinks/mips/elf.h	/^#define R_MIPS_LO16	/;"	d
R_MIPS_NONE	arch/mips/include/elf.h	/^#define R_MIPS_NONE	/;"	d
R_MIPS_NONE	compile/DUMBVM/includelinks/machine/elf.h	/^#define R_MIPS_NONE	/;"	d
R_MIPS_NONE	compile/DUMBVM/includelinks/mips/elf.h	/^#define R_MIPS_NONE	/;"	d
R_MIPS_PC16	arch/mips/include/elf.h	/^#define R_MIPS_PC16	/;"	d
R_MIPS_PC16	compile/DUMBVM/includelinks/machine/elf.h	/^#define R_MIPS_PC16	/;"	d
R_MIPS_PC16	compile/DUMBVM/includelinks/mips/elf.h	/^#define R_MIPS_PC16	/;"	d
R_MIPS_REL32	arch/mips/include/elf.h	/^#define R_MIPS_REL32	/;"	d
R_MIPS_REL32	compile/DUMBVM/includelinks/machine/elf.h	/^#define R_MIPS_REL32	/;"	d
R_MIPS_REL32	compile/DUMBVM/includelinks/mips/elf.h	/^#define R_MIPS_REL32	/;"	d
SAME_STACK	include/thread.h	/^#define SAME_STACK(/;"	d
SA_ONSTACK	include/kern/signal.h	/^#define SA_ONSTACK	/;"	d
SA_RESETHAND	include/kern/signal.h	/^#define SA_RESETHAND	/;"	d
SA_RESTART	include/kern/signal.h	/^#define SA_RESTART	/;"	d
SCHEDULE_HARDCLOCKS	thread/clock.c	/^#define SCHEDULE_HARDCLOCKS	/;"	d	file:
SEEK_CUR	include/kern/seek.h	/^#define SEEK_CUR /;"	d
SEEK_END	include/kern/seek.h	/^#define SEEK_END /;"	d
SEEK_SET	include/kern/seek.h	/^#define SEEK_SET /;"	d
SEMFS_H	fs/semfs/semfs.h	/^#define SEMFS_H$/;"	d
SEMFS_INLINE	fs/semfs/semfs.h	/^#define SEMFS_INLINE /;"	d
SEMFS_INLINE	fs/semfs/semfs_obj.c	/^#define SEMFS_INLINE$/;"	d	file:
SEMFS_ROOTDIR	fs/semfs/semfs.h	/^#define SEMFS_ROOTDIR	/;"	d
SET_STATUS	arch/mips/thread/cpu.c	/^#define SET_STATUS(/;"	d	file:
SFSUIO	fs/sfs/sfsprivate.h	/^#define SFSUIO(/;"	d
SFS_BITSPERBLOCK	include/kern/sfs.h	/^#define SFS_BITSPERBLOCK /;"	d
SFS_BLOCKSIZE	include/kern/sfs.h	/^#define SFS_BLOCKSIZE /;"	d
SFS_DBPERIDB	include/kern/sfs.h	/^#define SFS_DBPERIDB /;"	d
SFS_FREEMAPBITS	include/kern/sfs.h	/^#define SFS_FREEMAPBITS(/;"	d
SFS_FREEMAPBLOCKS	include/kern/sfs.h	/^#define SFS_FREEMAPBLOCKS(/;"	d
SFS_FREEMAP_START	include/kern/sfs.h	/^#define SFS_FREEMAP_START /;"	d
SFS_FS_FREEMAPBITS	fs/sfs/sfs_fsops.c	/^#define SFS_FS_FREEMAPBITS(/;"	d	file:
SFS_FS_FREEMAPBLOCKS	fs/sfs/sfs_fsops.c	/^#define SFS_FS_FREEMAPBLOCKS(/;"	d	file:
SFS_FS_NBLOCKS	fs/sfs/sfs_fsops.c	/^#define SFS_FS_NBLOCKS(/;"	d	file:
SFS_MAGIC	include/kern/sfs.h	/^#define SFS_MAGIC /;"	d
SFS_NAMELEN	include/kern/sfs.h	/^#define SFS_NAMELEN /;"	d
SFS_NDINDIRECT	include/kern/sfs.h	/^#define SFS_NDINDIRECT /;"	d
SFS_NDIRECT	include/kern/sfs.h	/^#define SFS_NDIRECT /;"	d
SFS_NINDIRECT	include/kern/sfs.h	/^#define SFS_NINDIRECT /;"	d
SFS_NOINO	include/kern/sfs.h	/^#define SFS_NOINO /;"	d
SFS_NTINDIRECT	include/kern/sfs.h	/^#define SFS_NTINDIRECT /;"	d
SFS_ROOTDIR_INO	include/kern/sfs.h	/^#define SFS_ROOTDIR_INO /;"	d
SFS_ROUNDUP	include/kern/sfs.h	/^#define SFS_ROUNDUP(/;"	d
SFS_SUPER_BLOCK	include/kern/sfs.h	/^#define SFS_SUPER_BLOCK /;"	d
SFS_TYPE_DIR	include/kern/sfs.h	/^#define SFS_TYPE_DIR /;"	d
SFS_TYPE_FILE	include/kern/sfs.h	/^#define SFS_TYPE_FILE /;"	d
SFS_TYPE_INVAL	include/kern/sfs.h	/^#define SFS_TYPE_INVAL /;"	d
SFS_VOLNAME_SIZE	include/kern/sfs.h	/^#define SFS_VOLNAME_SIZE /;"	d
SIGABRT	include/kern/signal.h	/^#define SIGABRT	/;"	d
SIGALRM	include/kern/signal.h	/^#define SIGALRM	/;"	d
SIGBUS	include/kern/signal.h	/^#define SIGBUS	/;"	d
SIGCHLD	include/kern/signal.h	/^#define SIGCHLD	/;"	d
SIGCONT	include/kern/signal.h	/^#define SIGCONT	/;"	d
SIGEMT	include/kern/signal.h	/^#define SIGEMT	/;"	d
SIGFPE	include/kern/signal.h	/^#define SIGFPE	/;"	d
SIGHUP	include/kern/signal.h	/^#define SIGHUP	/;"	d
SIGILL	include/kern/signal.h	/^#define SIGILL	/;"	d
SIGINFO	include/kern/signal.h	/^#define SIGINFO	/;"	d
SIGINT	include/kern/signal.h	/^#define SIGINT	/;"	d
SIGIO	include/kern/signal.h	/^#define SIGIO	/;"	d
SIGKILL	include/kern/signal.h	/^#define SIGKILL	/;"	d
SIGPIPE	include/kern/signal.h	/^#define SIGPIPE	/;"	d
SIGPROF	include/kern/signal.h	/^#define SIGPROF	/;"	d
SIGPWR	include/kern/signal.h	/^#define SIGPWR	/;"	d
SIGQUIT	include/kern/signal.h	/^#define SIGQUIT	/;"	d
SIGSEGV	include/kern/signal.h	/^#define SIGSEGV	/;"	d
SIGSTOP	include/kern/signal.h	/^#define SIGSTOP	/;"	d
SIGSYS	include/kern/signal.h	/^#define SIGSYS	/;"	d
SIGTERM	include/kern/signal.h	/^#define SIGTERM	/;"	d
SIGTRAP	include/kern/signal.h	/^#define SIGTRAP	/;"	d
SIGTSTP	include/kern/signal.h	/^#define SIGTSTP	/;"	d
SIGTTIN	include/kern/signal.h	/^#define SIGTTIN	/;"	d
SIGTTOU	include/kern/signal.h	/^#define SIGTTOU	/;"	d
SIGURG	include/kern/signal.h	/^#define SIGURG	/;"	d
SIGUSR1	include/kern/signal.h	/^#define SIGUSR1	/;"	d
SIGUSR2	include/kern/signal.h	/^#define SIGUSR2	/;"	d
SIGVTALRM	include/kern/signal.h	/^#define SIGVTALRM	/;"	d
SIGWINCH	include/kern/signal.h	/^#define SIGWINCH	/;"	d
SIGXCPU	include/kern/signal.h	/^#define SIGXCPU	/;"	d
SIGXFSZ	include/kern/signal.h	/^#define SIGXFSZ	/;"	d
SIG_BLOCK	include/kern/signal.h	/^#define SIG_BLOCK	/;"	d
SIG_DFL	include/kern/signal.h	/^#define SIG_DFL	/;"	d
SIG_IGN	include/kern/signal.h	/^#define SIG_IGN	/;"	d
SIG_SETMASK	include/kern/signal.h	/^#define SIG_SETMASK	/;"	d
SIG_UNBLOCK	include/kern/signal.h	/^#define SIG_UNBLOCK	/;"	d
SLEEPALOT_ITERS	test/tt3.c	/^#define SLEEPALOT_ITERS /;"	d	file:
SLEEPALOT_PRINTS	test/tt3.c	/^#define SLEEPALOT_PRINTS /;"	d	file:
SLOGAN	test/fstest.c	/^#define SLOGAN /;"	d	file:
SLOW	vm/kmalloc.c	/^#define SLOW$/;"	d	file:
SMALLEST_SUBPAGE_SIZE	vm/kmalloc.c	/^#define SMALLEST_SUBPAGE_SIZE /;"	d	file:
SOCK_DGRAM	include/kern/socket.h	/^#define SOCK_DGRAM	/;"	d
SOCK_RAW	include/kern/socket.h	/^#define SOCK_RAW	/;"	d
SOCK_STREAM	include/kern/socket.h	/^#define SOCK_STREAM	/;"	d
SPINLOCK_DATA_INITIALIZER	arch/mips/include/spinlock.h	/^#define SPINLOCK_DATA_INITIALIZER	/;"	d
SPINLOCK_DATA_INITIALIZER	compile/DUMBVM/includelinks/machine/spinlock.h	/^#define SPINLOCK_DATA_INITIALIZER	/;"	d
SPINLOCK_DATA_INITIALIZER	compile/DUMBVM/includelinks/mips/spinlock.h	/^#define SPINLOCK_DATA_INITIALIZER	/;"	d
SPINLOCK_INITIALIZER	include/spinlock.h	/^#define SPINLOCK_INITIALIZER	/;"	d
SPINLOCK_INLINE	include/spinlock.h	/^#define SPINLOCK_INLINE /;"	d
SPINLOCK_INLINE	thread/spinlock.c	/^#define SPINLOCK_INLINE /;"	d	file:
SPL_INLINE	include/spl.h	/^#define SPL_INLINE /;"	d
SPL_INLINE	thread/spl.c	/^#define SPL_INLINE	/;"	d	file:
STACK_MASK	include/thread.h	/^#define STACK_MASK /;"	d
STACK_SIZE	include/thread.h	/^#define STACK_SIZE /;"	d
STDERR_FILENO	include/kern/unistd.h	/^#define STDERR_FILENO /;"	d
STDIN_FILENO	include/kern/unistd.h	/^#define STDIN_FILENO /;"	d
STDOUT_FILENO	include/kern/unistd.h	/^#define STDOUT_FILENO /;"	d
SYS161_PRID_2X	arch/mips/thread/cpu.c	/^#define SYS161_PRID_2X	/;"	d	file:
SYS161_PRID_ORIG	arch/mips/thread/cpu.c	/^#define SYS161_PRID_ORIG	/;"	d	file:
SYS___getcwd	include/kern/syscall.h	/^#define SYS___getcwd /;"	d
SYS___getlogin	include/kern/syscall.h	/^#define SYS___getlogin /;"	d
SYS___setlogin	include/kern/syscall.h	/^#define SYS___setlogin /;"	d
SYS___settime	include/kern/syscall.h	/^#define SYS___settime /;"	d
SYS___time	include/kern/syscall.h	/^#define SYS___time /;"	d
SYS__exit	include/kern/syscall.h	/^#define SYS__exit /;"	d
SYS_accept	include/kern/syscall.h	/^#define SYS_accept /;"	d
SYS_access	include/kern/syscall.h	/^#define SYS_access /;"	d
SYS_bind	include/kern/syscall.h	/^#define SYS_bind /;"	d
SYS_chdir	include/kern/syscall.h	/^#define SYS_chdir /;"	d
SYS_chmod	include/kern/syscall.h	/^#define SYS_chmod /;"	d
SYS_chown	include/kern/syscall.h	/^#define SYS_chown /;"	d
SYS_close	include/kern/syscall.h	/^#define SYS_close /;"	d
SYS_connect	include/kern/syscall.h	/^#define SYS_connect /;"	d
SYS_dup	include/kern/syscall.h	/^#define SYS_dup /;"	d
SYS_dup2	include/kern/syscall.h	/^#define SYS_dup2 /;"	d
SYS_execv	include/kern/syscall.h	/^#define SYS_execv /;"	d
SYS_fchdir	include/kern/syscall.h	/^#define SYS_fchdir /;"	d
SYS_fchmod	include/kern/syscall.h	/^#define SYS_fchmod /;"	d
SYS_fchown	include/kern/syscall.h	/^#define SYS_fchown /;"	d
SYS_fcntl	include/kern/syscall.h	/^#define SYS_fcntl /;"	d
SYS_flock	include/kern/syscall.h	/^#define SYS_flock /;"	d
SYS_fork	include/kern/syscall.h	/^#define SYS_fork /;"	d
SYS_fstat	include/kern/syscall.h	/^#define SYS_fstat /;"	d
SYS_fsync	include/kern/syscall.h	/^#define SYS_fsync /;"	d
SYS_ftruncate	include/kern/syscall.h	/^#define SYS_ftruncate /;"	d
SYS_futimes	include/kern/syscall.h	/^#define SYS_futimes /;"	d
SYS_getdirentry	include/kern/syscall.h	/^#define SYS_getdirentry /;"	d
SYS_getgroups	include/kern/syscall.h	/^#define SYS_getgroups /;"	d
SYS_getpeername	include/kern/syscall.h	/^#define SYS_getpeername /;"	d
SYS_getpid	include/kern/syscall.h	/^#define SYS_getpid /;"	d
SYS_getppid	include/kern/syscall.h	/^#define SYS_getppid /;"	d
SYS_getresgid	include/kern/syscall.h	/^#define SYS_getresgid /;"	d
SYS_getresuid	include/kern/syscall.h	/^#define SYS_getresuid /;"	d
SYS_getsockname	include/kern/syscall.h	/^#define SYS_getsockname /;"	d
SYS_getsockopt	include/kern/syscall.h	/^#define SYS_getsockopt /;"	d
SYS_ioctl	include/kern/syscall.h	/^#define SYS_ioctl /;"	d
SYS_issetugid	include/kern/syscall.h	/^#define SYS_issetugid /;"	d
SYS_kill	include/kern/syscall.h	/^#define SYS_kill /;"	d
SYS_lchmod	include/kern/syscall.h	/^#define SYS_lchmod /;"	d
SYS_lchown	include/kern/syscall.h	/^#define SYS_lchown /;"	d
SYS_link	include/kern/syscall.h	/^#define SYS_link /;"	d
SYS_listen	include/kern/syscall.h	/^#define SYS_listen /;"	d
SYS_lseek	include/kern/syscall.h	/^#define SYS_lseek /;"	d
SYS_lstat	include/kern/syscall.h	/^#define SYS_lstat /;"	d
SYS_lutimes	include/kern/syscall.h	/^#define SYS_lutimes /;"	d
SYS_mkdir	include/kern/syscall.h	/^#define SYS_mkdir /;"	d
SYS_mkfifo	include/kern/syscall.h	/^#define SYS_mkfifo /;"	d
SYS_mmap	include/kern/syscall.h	/^#define SYS_mmap /;"	d
SYS_mount	include/kern/syscall.h	/^#define SYS_mount /;"	d
SYS_mprotect	include/kern/syscall.h	/^#define SYS_mprotect /;"	d
SYS_munmap	include/kern/syscall.h	/^#define SYS_munmap /;"	d
SYS_nanosleep	include/kern/syscall.h	/^#define SYS_nanosleep /;"	d
SYS_open	include/kern/syscall.h	/^#define SYS_open /;"	d
SYS_pipe	include/kern/syscall.h	/^#define SYS_pipe /;"	d
SYS_poll	include/kern/syscall.h	/^#define SYS_poll /;"	d
SYS_pread	include/kern/syscall.h	/^#define SYS_pread /;"	d
SYS_pwrite	include/kern/syscall.h	/^#define SYS_pwrite /;"	d
SYS_read	include/kern/syscall.h	/^#define SYS_read /;"	d
SYS_readlink	include/kern/syscall.h	/^#define SYS_readlink /;"	d
SYS_reboot	include/kern/syscall.h	/^#define SYS_reboot /;"	d
SYS_remove	include/kern/syscall.h	/^#define SYS_remove /;"	d
SYS_rename	include/kern/syscall.h	/^#define SYS_rename /;"	d
SYS_rmdir	include/kern/syscall.h	/^#define SYS_rmdir /;"	d
SYS_sbrk	include/kern/syscall.h	/^#define SYS_sbrk /;"	d
SYS_select	include/kern/syscall.h	/^#define SYS_select /;"	d
SYS_setgroups	include/kern/syscall.h	/^#define SYS_setgroups /;"	d
SYS_setresgid	include/kern/syscall.h	/^#define SYS_setresgid /;"	d
SYS_setresuid	include/kern/syscall.h	/^#define SYS_setresuid /;"	d
SYS_setsockopt	include/kern/syscall.h	/^#define SYS_setsockopt /;"	d
SYS_shutdown	include/kern/syscall.h	/^#define SYS_shutdown /;"	d
SYS_sigaction	include/kern/syscall.h	/^#define SYS_sigaction /;"	d
SYS_sigpending	include/kern/syscall.h	/^#define SYS_sigpending /;"	d
SYS_sigprocmask	include/kern/syscall.h	/^#define SYS_sigprocmask /;"	d
SYS_sigreturn	include/kern/syscall.h	/^#define SYS_sigreturn /;"	d
SYS_sigsuspend	include/kern/syscall.h	/^#define SYS_sigsuspend /;"	d
SYS_socket	include/kern/syscall.h	/^#define SYS_socket /;"	d
SYS_stat	include/kern/syscall.h	/^#define SYS_stat /;"	d
SYS_symlink	include/kern/syscall.h	/^#define SYS_symlink /;"	d
SYS_sync	include/kern/syscall.h	/^#define SYS_sync /;"	d
SYS_umask	include/kern/syscall.h	/^#define SYS_umask /;"	d
SYS_unmount	include/kern/syscall.h	/^#define SYS_unmount /;"	d
SYS_utimes	include/kern/syscall.h	/^#define SYS_utimes /;"	d
SYS_vfork	include/kern/syscall.h	/^#define SYS_vfork /;"	d
SYS_waitpid	include/kern/syscall.h	/^#define SYS_waitpid /;"	d
SYS_write	include/kern/syscall.h	/^#define SYS_write /;"	d
S_IFBLK	include/stat.h	/^#define S_IFBLK /;"	d
S_IFCHR	include/stat.h	/^#define S_IFCHR /;"	d
S_IFDIR	include/stat.h	/^#define S_IFDIR /;"	d
S_IFIFO	include/stat.h	/^#define S_IFIFO /;"	d
S_IFLNK	include/stat.h	/^#define S_IFLNK /;"	d
S_IFMT	include/stat.h	/^#define S_IFMT /;"	d
S_IFREG	include/stat.h	/^#define S_IFREG /;"	d
S_IFSOCK	include/stat.h	/^#define S_IFSOCK /;"	d
S_READY	include/thread.h	/^	S_READY,	\/* ready to run *\/$/;"	e	enum:__anon256fc0460103
S_RUN	include/thread.h	/^	S_RUN,		\/* running *\/$/;"	e	enum:__anon256fc0460103
S_SLEEP	include/thread.h	/^	S_SLEEP,	\/* sleeping *\/$/;"	e	enum:__anon256fc0460103
S_ZOMBIE	include/thread.h	/^	S_ZOMBIE,	\/* zombie; exited but not yet deleted *\/$/;"	e	enum:__anon256fc0460103
TESTSIZE	test/arraytest.c	/^#define TESTSIZE /;"	d	file:
TESTSIZE	test/bitmaptest.c	/^#define TESTSIZE /;"	d	file:
THREADINLINE	include/thread.h	/^#define THREADINLINE /;"	d
THREADINLINE	thread/thread.c	/^#define THREADINLINE$/;"	d	file:
THREADLIST_FORALL	include/threadlist.h	/^#define THREADLIST_FORALL(/;"	d
THREADLIST_FORALL_REV	include/threadlist.h	/^#define THREADLIST_FORALL_REV(/;"	d
THREAD_STACK_MAGIC	thread/thread.c	/^#define THREAD_STACK_MAGIC /;"	d	file:
TLBHI_INVALID	arch/mips/include/tlb.h	/^#define TLBHI_INVALID(/;"	d
TLBHI_INVALID	compile/DUMBVM/includelinks/machine/tlb.h	/^#define TLBHI_INVALID(/;"	d
TLBHI_INVALID	compile/DUMBVM/includelinks/mips/tlb.h	/^#define TLBHI_INVALID(/;"	d
TLBHI_VPAGE	arch/mips/include/tlb.h	/^#define TLBHI_VPAGE /;"	d
TLBHI_VPAGE	compile/DUMBVM/includelinks/machine/tlb.h	/^#define TLBHI_VPAGE /;"	d
TLBHI_VPAGE	compile/DUMBVM/includelinks/mips/tlb.h	/^#define TLBHI_VPAGE /;"	d
TLBLO_DIRTY	arch/mips/include/tlb.h	/^#define TLBLO_DIRTY /;"	d
TLBLO_DIRTY	compile/DUMBVM/includelinks/machine/tlb.h	/^#define TLBLO_DIRTY /;"	d
TLBLO_DIRTY	compile/DUMBVM/includelinks/mips/tlb.h	/^#define TLBLO_DIRTY /;"	d
TLBLO_INVALID	arch/mips/include/tlb.h	/^#define TLBLO_INVALID(/;"	d
TLBLO_INVALID	compile/DUMBVM/includelinks/machine/tlb.h	/^#define TLBLO_INVALID(/;"	d
TLBLO_INVALID	compile/DUMBVM/includelinks/mips/tlb.h	/^#define TLBLO_INVALID(/;"	d
TLBLO_NOCACHE	arch/mips/include/tlb.h	/^#define TLBLO_NOCACHE /;"	d
TLBLO_NOCACHE	compile/DUMBVM/includelinks/machine/tlb.h	/^#define TLBLO_NOCACHE /;"	d
TLBLO_NOCACHE	compile/DUMBVM/includelinks/mips/tlb.h	/^#define TLBLO_NOCACHE /;"	d
TLBLO_PPAGE	arch/mips/include/tlb.h	/^#define TLBLO_PPAGE /;"	d
TLBLO_PPAGE	compile/DUMBVM/includelinks/machine/tlb.h	/^#define TLBLO_PPAGE /;"	d
TLBLO_PPAGE	compile/DUMBVM/includelinks/mips/tlb.h	/^#define TLBLO_PPAGE /;"	d
TLBLO_VALID	arch/mips/include/tlb.h	/^#define TLBLO_VALID /;"	d
TLBLO_VALID	compile/DUMBVM/includelinks/machine/tlb.h	/^#define TLBLO_VALID /;"	d
TLBLO_VALID	compile/DUMBVM/includelinks/mips/tlb.h	/^#define TLBLO_VALID /;"	d
TLBSHOOTDOWN_ALL	include/cpu.h	/^#define TLBSHOOTDOWN_ALL /;"	d
TLBSHOOTDOWN_MAX	arch/mips/include/vm.h	/^#define TLBSHOOTDOWN_MAX /;"	d
TLBSHOOTDOWN_MAX	compile/DUMBVM/includelinks/machine/vm.h	/^#define TLBSHOOTDOWN_MAX /;"	d
TLBSHOOTDOWN_MAX	compile/DUMBVM/includelinks/mips/vm.h	/^#define TLBSHOOTDOWN_MAX /;"	d
TO	lib/bswap.c	/^#define TO(/;"	d	file:
TOP	Makefile	/^TOP=..$/;"	m
TOP	compile/DUMBVM/Makefile	/^TOP=$(KTOP)\/..$/;"	m
TOTAL_PAGEREFS	vm/kmalloc.c	/^#define TOTAL_PAGEREFS /;"	d	file:
UIO_READ	include/uio.h	/^        UIO_READ,			\/* From kernel to uio_seg *\/$/;"	e	enum:uio_rw
UIO_SYSSPACE	include/uio.h	/^        UIO_SYSSPACE,			\/* Kernel. *\/$/;"	e	enum:uio_seg
UIO_USERISPACE	include/uio.h	/^        UIO_USERISPACE,			\/* User process code. *\/$/;"	e	enum:uio_seg
UIO_USERSPACE	include/uio.h	/^        UIO_USERSPACE,			\/* User process data. *\/$/;"	e	enum:uio_seg
UIO_WRITE	include/uio.h	/^        UIO_WRITE,			\/* From uio_seg to kernel *\/$/;"	e	enum:uio_rw
USERSPACETOP	arch/mips/include/vm.h	/^#define USERSPACETOP /;"	d
USERSPACETOP	compile/DUMBVM/includelinks/machine/vm.h	/^#define USERSPACETOP /;"	d
USERSPACETOP	compile/DUMBVM/includelinks/mips/vm.h	/^#define USERSPACETOP /;"	d
USERSTACK	arch/mips/include/vm.h	/^#define USERSTACK /;"	d
USERSTACK	compile/DUMBVM/includelinks/machine/vm.h	/^#define USERSTACK /;"	d
USERSTACK	compile/DUMBVM/includelinks/mips/vm.h	/^#define USERSTACK /;"	d
V	thread/synch.c	/^V(struct semaphore *sem)$/;"	f	typeref:typename:void
VFSINLINE	include/vfs.h	/^#define VFSINLINE /;"	d
VFSINLINE	vfs/vfslist.c	/^#define VFSINLINE$/;"	d	file:
VM_FAULT_READ	include/vm.h	/^#define VM_FAULT_READ /;"	d
VM_FAULT_READONLY	include/vm.h	/^#define VM_FAULT_READONLY /;"	d
VM_FAULT_WRITE	include/vm.h	/^#define VM_FAULT_WRITE /;"	d
VOP_CREAT	include/vnode.h	/^#define VOP_CREAT(/;"	d
VOP_DECREF	include/vnode.h	/^#define VOP_DECREF(/;"	d
VOP_EACHOPEN	include/vnode.h	/^#define VOP_EACHOPEN(/;"	d
VOP_FSYNC	include/vnode.h	/^#define VOP_FSYNC(/;"	d
VOP_GETDIRENTRY	include/vnode.h	/^#define VOP_GETDIRENTRY(/;"	d
VOP_GETTYPE	include/vnode.h	/^#define VOP_GETTYPE(/;"	d
VOP_INCREF	include/vnode.h	/^#define VOP_INCREF(/;"	d
VOP_IOCTL	include/vnode.h	/^#define VOP_IOCTL(/;"	d
VOP_ISSEEKABLE	include/vnode.h	/^#define VOP_ISSEEKABLE(/;"	d
VOP_LINK	include/vnode.h	/^#define VOP_LINK(/;"	d
VOP_LOOKPARENT	include/vnode.h	/^#define VOP_LOOKPARENT(/;"	d
VOP_LOOKUP	include/vnode.h	/^#define VOP_LOOKUP(/;"	d
VOP_MAGIC	include/vnode.h	/^#define VOP_MAGIC	/;"	d
VOP_MKDIR	include/vnode.h	/^#define VOP_MKDIR(/;"	d
VOP_MMAP	include/vnode.h	/^#define VOP_MMAP(/;"	d
VOP_NAMEFILE	include/vnode.h	/^#define VOP_NAMEFILE(/;"	d
VOP_READ	include/vnode.h	/^#define VOP_READ(/;"	d
VOP_READLINK	include/vnode.h	/^#define VOP_READLINK(/;"	d
VOP_RECLAIM	include/vnode.h	/^#define VOP_RECLAIM(/;"	d
VOP_REMOVE	include/vnode.h	/^#define VOP_REMOVE(/;"	d
VOP_RENAME	include/vnode.h	/^#define VOP_RENAME(/;"	d
VOP_RMDIR	include/vnode.h	/^#define VOP_RMDIR(/;"	d
VOP_STAT	include/vnode.h	/^#define VOP_STAT(/;"	d
VOP_SYMLINK	include/vnode.h	/^#define VOP_SYMLINK(/;"	d
VOP_TRUNCATE	include/vnode.h	/^#define VOP_TRUNCATE(/;"	d
VOP_WRITE	include/vnode.h	/^#define VOP_WRITE(/;"	d
WAIT_ANY	include/kern/wait.h	/^#define WAIT_ANY /;"	d
WAIT_MYPGRP	include/kern/wait.h	/^#define WAIT_MYPGRP /;"	d
WAKER_WAKES	test/tt3.c	/^#define WAKER_WAKES /;"	d	file:
WCOREDUMP	include/kern/wait.h	/^#define WCOREDUMP(/;"	d
WEXITSTATUS	include/kern/wait.h	/^#define WEXITSTATUS(/;"	d
WIFEXITED	include/kern/wait.h	/^#define WIFEXITED(/;"	d
WIFSIGNALED	include/kern/wait.h	/^#define WIFSIGNALED(/;"	d
WIFSTOPPED	include/kern/wait.h	/^#define WIFSTOPPED(/;"	d
WNOHANG	include/kern/wait.h	/^#define WNOHANG /;"	d
WORD_ALLBITS	lib/bitmap.c	/^#define WORD_ALLBITS /;"	d	file:
WORD_TYPE	lib/bitmap.c	/^#define WORD_TYPE /;"	d	file:
WSTOPSIG	include/kern/wait.h	/^#define WSTOPSIG(/;"	d
WTERMSIG	include/kern/wait.h	/^#define WTERMSIG(/;"	d
WUNTRACED	include/kern/wait.h	/^#define WUNTRACED /;"	d
_ADDRSPACE_H_	include/addrspace.h	/^#define _ADDRSPACE_H_$/;"	d
_ARRAY_H_	include/array.h	/^#define _ARRAY_H_$/;"	d
_AUTOCONF_H_	compile/DUMBVM/autoconf.h	/^#define _AUTOCONF_H_$/;"	d
_BIG_ENDIAN	include/kern/endian.h	/^#define _BIG_ENDIAN /;"	d
_BITMAP_H_	include/bitmap.h	/^#define _BITMAP_H_$/;"	d
_BYTE_ORDER	arch/mips/include/kern/endian.h	/^#define _BYTE_ORDER /;"	d
_BYTE_ORDER	compile/DUMBVM/includelinks/kern/machine/endian.h	/^#define _BYTE_ORDER /;"	d
_BYTE_ORDER	compile/DUMBVM/includelinks/kern/mips/endian.h	/^#define _BYTE_ORDER /;"	d
_BYTE_ORDER	compile/DUMBVM/includelinks/machine/kern/endian.h	/^#define _BYTE_ORDER /;"	d
_BYTE_ORDER	compile/DUMBVM/includelinks/mips/kern/endian.h	/^#define _BYTE_ORDER /;"	d
_Bool	include/types.h	/^typedef _Bool bool;$/;"	t	typeref:typename:bool
_CDEFS_H_	include/cdefs.h	/^#define _CDEFS_H_$/;"	d
_CLOCK_H_	include/clock.h	/^#define _CLOCK_H_$/;"	d
_COPYINOUT_H_	include/copyinout.h	/^#define _COPYINOUT_H_$/;"	d
_CPU_H_	include/cpu.h	/^#define _CPU_H_$/;"	d
_CURRENT_H_	include/current.h	/^#define _CURRENT_H_$/;"	d
_DEVICE_H_	include/device.h	/^#define _DEVICE_H_$/;"	d
_ELF_H_	include/elf.h	/^#define _ELF_H_$/;"	d
_EMUFS_H_	include/emufs.h	/^#define _EMUFS_H_$/;"	d
_ENDIAN_H_	include/endian.h	/^#define _ENDIAN_H_$/;"	d
_FS_H_	include/fs.h	/^#define _FS_H_$/;"	d
_GENERIC_BEEP_H_	dev/generic/beep.h	/^#define _GENERIC_BEEP_H_$/;"	d
_GENERIC_CONSOLE_H_	dev/generic/console.h	/^#define _GENERIC_CONSOLE_H_$/;"	d
_GENERIC_RANDOM_H_	dev/generic/random.h	/^#define _GENERIC_RANDOM_H_$/;"	d
_GENERIC_RTCLOCK_H_	dev/generic/rtclock.h	/^#define _GENERIC_RTCLOCK_H_$/;"	d
_KERN_ENDIAN_H_	include/kern/endian.h	/^#define _KERN_ENDIAN_H_$/;"	d
_KERN_ERRMSG_H_	include/kern/errmsg.h	/^#define _KERN_ERRMSG_H_$/;"	d
_KERN_ERRNO_H_	include/kern/errno.h	/^#define _KERN_ERRNO_H_$/;"	d
_KERN_FCNTL_H_	include/kern/fcntl.h	/^#define _KERN_FCNTL_H_$/;"	d
_KERN_IOCTL_H_	include/kern/ioctl.h	/^#define _KERN_IOCTL_H_$/;"	d
_KERN_IOVEC_H_	include/kern/iovec.h	/^#define _KERN_IOVEC_H_$/;"	d
_KERN_LIMITS_H_	include/kern/limits.h	/^#define _KERN_LIMITS_H_$/;"	d
_KERN_MIPS_ENDIAN_H_	arch/mips/include/kern/endian.h	/^#define _KERN_MIPS_ENDIAN_H_$/;"	d
_KERN_MIPS_ENDIAN_H_	compile/DUMBVM/includelinks/kern/machine/endian.h	/^#define _KERN_MIPS_ENDIAN_H_$/;"	d
_KERN_MIPS_ENDIAN_H_	compile/DUMBVM/includelinks/kern/mips/endian.h	/^#define _KERN_MIPS_ENDIAN_H_$/;"	d
_KERN_MIPS_ENDIAN_H_	compile/DUMBVM/includelinks/machine/kern/endian.h	/^#define _KERN_MIPS_ENDIAN_H_$/;"	d
_KERN_MIPS_ENDIAN_H_	compile/DUMBVM/includelinks/mips/kern/endian.h	/^#define _KERN_MIPS_ENDIAN_H_$/;"	d
_KERN_MIPS_REGDEFS_H_	arch/mips/include/kern/regdefs.h	/^#define _KERN_MIPS_REGDEFS_H_$/;"	d
_KERN_MIPS_REGDEFS_H_	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define _KERN_MIPS_REGDEFS_H_$/;"	d
_KERN_MIPS_REGDEFS_H_	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define _KERN_MIPS_REGDEFS_H_$/;"	d
_KERN_MIPS_REGDEFS_H_	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define _KERN_MIPS_REGDEFS_H_$/;"	d
_KERN_MIPS_REGDEFS_H_	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define _KERN_MIPS_REGDEFS_H_$/;"	d
_KERN_MIPS_SIGNAL_H_	arch/mips/include/kern/signal.h	/^#define _KERN_MIPS_SIGNAL_H_$/;"	d
_KERN_MIPS_SIGNAL_H_	compile/DUMBVM/includelinks/kern/machine/signal.h	/^#define _KERN_MIPS_SIGNAL_H_$/;"	d
_KERN_MIPS_SIGNAL_H_	compile/DUMBVM/includelinks/kern/mips/signal.h	/^#define _KERN_MIPS_SIGNAL_H_$/;"	d
_KERN_MIPS_SIGNAL_H_	compile/DUMBVM/includelinks/machine/kern/signal.h	/^#define _KERN_MIPS_SIGNAL_H_$/;"	d
_KERN_MIPS_SIGNAL_H_	compile/DUMBVM/includelinks/mips/kern/signal.h	/^#define _KERN_MIPS_SIGNAL_H_$/;"	d
_KERN_MIPS_TYPES_H_	arch/mips/include/kern/types.h	/^#define _KERN_MIPS_TYPES_H_$/;"	d
_KERN_MIPS_TYPES_H_	compile/DUMBVM/includelinks/kern/machine/types.h	/^#define _KERN_MIPS_TYPES_H_$/;"	d
_KERN_MIPS_TYPES_H_	compile/DUMBVM/includelinks/kern/mips/types.h	/^#define _KERN_MIPS_TYPES_H_$/;"	d
_KERN_MIPS_TYPES_H_	compile/DUMBVM/includelinks/machine/kern/types.h	/^#define _KERN_MIPS_TYPES_H_$/;"	d
_KERN_MIPS_TYPES_H_	compile/DUMBVM/includelinks/mips/kern/types.h	/^#define _KERN_MIPS_TYPES_H_$/;"	d
_KERN_REBOOT_H_	include/kern/reboot.h	/^#define _KERN_REBOOT_H_$/;"	d
_KERN_RESOURCE_H_	include/kern/resource.h	/^#define _KERN_RESOURCE_H_$/;"	d
_KERN_SEEK_H_	include/kern/seek.h	/^#define _KERN_SEEK_H_$/;"	d
_KERN_SFS_H_	include/kern/sfs.h	/^#define _KERN_SFS_H_$/;"	d
_KERN_SIGNAL_H_	include/kern/signal.h	/^#define _KERN_SIGNAL_H_$/;"	d
_KERN_SOCKET_H_	include/kern/socket.h	/^#define _KERN_SOCKET_H_$/;"	d
_KERN_STATTYPES_H_	include/kern/stattypes.h	/^#define _KERN_STATTYPES_H_$/;"	d
_KERN_STAT_H_	include/kern/stat.h	/^#define _KERN_STAT_H_$/;"	d
_KERN_SYSCALL_H_	include/kern/syscall.h	/^#define _KERN_SYSCALL_H_$/;"	d
_KERN_TIME_H_	include/kern/time.h	/^#define _KERN_TIME_H_$/;"	d
_KERN_TYPES_H_	include/kern/types.h	/^#define _KERN_TYPES_H_$/;"	d
_KERN_UNISTD_H_	include/kern/unistd.h	/^#define _KERN_UNISTD_H_$/;"	d
_KERN_WAIT_H_	include/kern/wait.h	/^#define _KERN_WAIT_H_$/;"	d
_LAMEBUS_EMU_H_	dev/lamebus/emu.h	/^#define _LAMEBUS_EMU_H_$/;"	d
_LAMEBUS_H_	dev/lamebus/lamebus.h	/^#define _LAMEBUS_H_$/;"	d
_LAMEBUS_LHD_H_	dev/lamebus/lhd.h	/^#define _LAMEBUS_LHD_H_$/;"	d
_LAMEBUS_LRANDOM_H_	dev/lamebus/lrandom.h	/^#define _LAMEBUS_LRANDOM_H_$/;"	d
_LAMEBUS_LSCREEN_H_	dev/lamebus/lscreen.h	/^#define _LAMEBUS_LSCREEN_H_$/;"	d
_LAMEBUS_LSER_H_	dev/lamebus/lser.h	/^#define _LAMEBUS_LSER_H_$/;"	d
_LAMEBUS_LTIMER_H_	dev/lamebus/ltimer.h	/^#define _LAMEBUS_LTIMER_H_$/;"	d
_LAMEBUS_LTRACE_H_	dev/lamebus/ltrace.h	/^#define _LAMEBUS_LTRACE_H_$/;"	d
_LIB_H_	include/lib.h	/^#define _LIB_H_$/;"	d
_LIMITS_H_	include/limits.h	/^#define _LIMITS_H_$/;"	d
_LITTLE_ENDIAN	include/kern/endian.h	/^#define _LITTLE_ENDIAN /;"	d
_MAINBUS_H_	include/mainbus.h	/^#define _MAINBUS_H_$/;"	d
_MEMBAR_H_	include/membar.h	/^#define _MEMBAR_H_$/;"	d
_MIPS_CURRENT_H_	arch/mips/include/current.h	/^#define _MIPS_CURRENT_H_$/;"	d
_MIPS_CURRENT_H_	compile/DUMBVM/includelinks/machine/current.h	/^#define _MIPS_CURRENT_H_$/;"	d
_MIPS_CURRENT_H_	compile/DUMBVM/includelinks/mips/current.h	/^#define _MIPS_CURRENT_H_$/;"	d
_MIPS_ELF_H_	arch/mips/include/elf.h	/^#define _MIPS_ELF_H_$/;"	d
_MIPS_ELF_H_	compile/DUMBVM/includelinks/machine/elf.h	/^#define _MIPS_ELF_H_$/;"	d
_MIPS_ELF_H_	compile/DUMBVM/includelinks/mips/elf.h	/^#define _MIPS_ELF_H_$/;"	d
_MIPS_MEMBAR_H_	arch/mips/include/membar.h	/^#define _MIPS_MEMBAR_H_$/;"	d
_MIPS_MEMBAR_H_	compile/DUMBVM/includelinks/machine/membar.h	/^#define _MIPS_MEMBAR_H_$/;"	d
_MIPS_MEMBAR_H_	compile/DUMBVM/includelinks/mips/membar.h	/^#define _MIPS_MEMBAR_H_$/;"	d
_MIPS_SETJMP_H_	arch/mips/include/kern/setjmp.h	/^#define _MIPS_SETJMP_H_$/;"	d
_MIPS_SETJMP_H_	compile/DUMBVM/includelinks/kern/machine/setjmp.h	/^#define _MIPS_SETJMP_H_$/;"	d
_MIPS_SETJMP_H_	compile/DUMBVM/includelinks/kern/mips/setjmp.h	/^#define _MIPS_SETJMP_H_$/;"	d
_MIPS_SETJMP_H_	compile/DUMBVM/includelinks/machine/kern/setjmp.h	/^#define _MIPS_SETJMP_H_$/;"	d
_MIPS_SETJMP_H_	compile/DUMBVM/includelinks/mips/kern/setjmp.h	/^#define _MIPS_SETJMP_H_$/;"	d
_MIPS_SPECIALREG_H_	arch/mips/include/specialreg.h	/^#define _MIPS_SPECIALREG_H_$/;"	d
_MIPS_SPECIALREG_H_	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define _MIPS_SPECIALREG_H_$/;"	d
_MIPS_SPECIALREG_H_	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define _MIPS_SPECIALREG_H_$/;"	d
_MIPS_SPINLOCK_H_	arch/mips/include/spinlock.h	/^#define _MIPS_SPINLOCK_H_$/;"	d
_MIPS_SPINLOCK_H_	compile/DUMBVM/includelinks/machine/spinlock.h	/^#define _MIPS_SPINLOCK_H_$/;"	d
_MIPS_SPINLOCK_H_	compile/DUMBVM/includelinks/mips/spinlock.h	/^#define _MIPS_SPINLOCK_H_$/;"	d
_MIPS_SWITCHFRAME_H_	arch/mips/thread/switchframe.h	/^#define _MIPS_SWITCHFRAME_H_$/;"	d
_MIPS_THREAD_H_	arch/mips/include/thread.h	/^#define _MIPS_THREAD_H_$/;"	d
_MIPS_THREAD_H_	compile/DUMBVM/includelinks/machine/thread.h	/^#define _MIPS_THREAD_H_$/;"	d
_MIPS_THREAD_H_	compile/DUMBVM/includelinks/mips/thread.h	/^#define _MIPS_THREAD_H_$/;"	d
_MIPS_TLB_H_	arch/mips/include/tlb.h	/^#define _MIPS_TLB_H_$/;"	d
_MIPS_TLB_H_	compile/DUMBVM/includelinks/machine/tlb.h	/^#define _MIPS_TLB_H_$/;"	d
_MIPS_TLB_H_	compile/DUMBVM/includelinks/mips/tlb.h	/^#define _MIPS_TLB_H_$/;"	d
_MIPS_TRAPFRAME_H_	arch/mips/include/trapframe.h	/^#define _MIPS_TRAPFRAME_H_$/;"	d
_MIPS_TRAPFRAME_H_	compile/DUMBVM/includelinks/machine/trapframe.h	/^#define _MIPS_TRAPFRAME_H_$/;"	d
_MIPS_TRAPFRAME_H_	compile/DUMBVM/includelinks/mips/trapframe.h	/^#define _MIPS_TRAPFRAME_H_$/;"	d
_MIPS_TYPES_H_	arch/mips/include/types.h	/^#define _MIPS_TYPES_H_$/;"	d
_MIPS_TYPES_H_	compile/DUMBVM/includelinks/machine/types.h	/^#define _MIPS_TYPES_H_$/;"	d
_MIPS_TYPES_H_	compile/DUMBVM/includelinks/mips/types.h	/^#define _MIPS_TYPES_H_$/;"	d
_MIPS_VM_H_	arch/mips/include/vm.h	/^#define _MIPS_VM_H_$/;"	d
_MIPS_VM_H_	compile/DUMBVM/includelinks/machine/vm.h	/^#define _MIPS_VM_H_$/;"	d
_MIPS_VM_H_	compile/DUMBVM/includelinks/mips/vm.h	/^#define _MIPS_VM_H_$/;"	d
_MKWAIT_CORE	include/kern/wait.h	/^#define _MKWAIT_CORE(/;"	d
_MKWAIT_EXIT	include/kern/wait.h	/^#define _MKWAIT_EXIT(/;"	d
_MKWAIT_SIG	include/kern/wait.h	/^#define _MKWAIT_SIG(/;"	d
_MKWAIT_STOP	include/kern/wait.h	/^#define _MKWAIT_STOP(/;"	d
_MKWVAL	include/kern/wait.h	/^#define _MKWVAL(/;"	d
_NSIG	include/kern/signal.h	/^#define _NSIG	/;"	d
_OPT_DUMBVM_H_	compile/DUMBVM/opt-dumbvm.h	/^#define _OPT_DUMBVM_H_$/;"	d
_OPT_NETFS_H_	compile/DUMBVM/opt-netfs.h	/^#define _OPT_NETFS_H_$/;"	d
_OPT_NET_H_	compile/DUMBVM/opt-net.h	/^#define _OPT_NET_H_$/;"	d
_OPT_NOASSERTS_H_	compile/DUMBVM/opt-noasserts.h	/^#define _OPT_NOASSERTS_H_$/;"	d
_OPT_SEMFS_H_	compile/DUMBVM/opt-semfs.h	/^#define _OPT_SEMFS_H_$/;"	d
_OPT_SFS_H_	compile/DUMBVM/opt-sfs.h	/^#define _OPT_SFS_H_$/;"	d
_PATH_SHELL	main/menu.c	/^#define _PATH_SHELL /;"	d	file:
_PDP_ENDIAN	include/kern/endian.h	/^#define _PDP_ENDIAN /;"	d
_PROC_H_	include/proc.h	/^#define _PROC_H_$/;"	d
_SETJMP_H_	include/setjmp.h	/^#define _SETJMP_H_$/;"	d
_SFSPRIVATE_H_	fs/sfs/sfsprivate.h	/^#define _SFSPRIVATE_H_$/;"	d
_SFS_H_	include/sfs.h	/^#define _SFS_H_$/;"	d
_SIGNAL_H_	include/signal.h	/^#define _SIGNAL_H_$/;"	d
_SPINLOCK_H_	include/spinlock.h	/^#define _SPINLOCK_H_$/;"	d
_SPL_H_	include/spl.h	/^#define _SPL_H_$/;"	d
_SS_SIZE	include/kern/socket.h	/^#define _SS_SIZE	/;"	d
_STAT_H_	include/stat.h	/^#define _STAT_H_$/;"	d
_STDARG_H_	include/stdarg.h	/^#define _STDARG_H_$/;"	d
_SYNCH_H_	include/synch.h	/^#define _SYNCH_H_$/;"	d
_SYS161_BUS_H_	arch/sys161/include/bus.h	/^#define _SYS161_BUS_H_$/;"	d
_SYS161_BUS_H_	compile/DUMBVM/includelinks/platform/bus.h	/^#define _SYS161_BUS_H_$/;"	d
_SYS161_BUS_H_	compile/DUMBVM/includelinks/sys161/bus.h	/^#define _SYS161_BUS_H_$/;"	d
_SYS161_MAXCPUS_H_	arch/sys161/include/maxcpus.h	/^#define _SYS161_MAXCPUS_H_$/;"	d
_SYS161_MAXCPUS_H_	compile/DUMBVM/includelinks/platform/maxcpus.h	/^#define _SYS161_MAXCPUS_H_$/;"	d
_SYS161_MAXCPUS_H_	compile/DUMBVM/includelinks/sys161/maxcpus.h	/^#define _SYS161_MAXCPUS_H_$/;"	d
_SYSCALL_H_	include/syscall.h	/^#define _SYSCALL_H_$/;"	d
_S_IFBLK	include/kern/stattypes.h	/^#define _S_IFBLK /;"	d
_S_IFCHR	include/kern/stattypes.h	/^#define _S_IFCHR /;"	d
_S_IFDIR	include/kern/stattypes.h	/^#define _S_IFDIR /;"	d
_S_IFIFO	include/kern/stattypes.h	/^#define _S_IFIFO /;"	d
_S_IFLNK	include/kern/stattypes.h	/^#define _S_IFLNK /;"	d
_S_IFMT	include/kern/stattypes.h	/^#define _S_IFMT /;"	d
_S_IFREG	include/kern/stattypes.h	/^#define _S_IFREG /;"	d
_S_IFSOCK	include/kern/stattypes.h	/^#define _S_IFSOCK /;"	d
_TEST_H_	include/test.h	/^#define _TEST_H_$/;"	d
_THREADLIST_H_	include/threadlist.h	/^#define _THREADLIST_H_$/;"	d
_THREADPRIVATE_H_	include/threadprivate.h	/^#define _THREADPRIVATE_H_$/;"	d
_THREAD_H_	include/thread.h	/^#define _THREAD_H_$/;"	d
_TYPES_H_	include/types.h	/^#define _TYPES_H_$/;"	d
_UIO_H_	include/uio.h	/^#define _UIO_H_$/;"	d
_VERSION_H_	include/version.h	/^#define _VERSION_H_$/;"	d
_VFS_H_	include/vfs.h	/^#define _VFS_H_$/;"	d
_VM_H_	include/vm.h	/^#define _VM_H_$/;"	d
_VNODE_H_	include/vnode.h	/^#define _VNODE_H_$/;"	d
_WCHAN_H_	include/wchan.h	/^#define _WCHAN_H_$/;"	d
_WVAL	include/kern/wait.h	/^#define _WVAL(/;"	d
_WWHAT	include/kern/wait.h	/^#define _WWHAT(/;"	d
__ARG_MAX	include/kern/limits.h	/^#define __ARG_MAX /;"	d
__CHAR_BIT	arch/mips/include/kern/types.h	/^#define __CHAR_BIT /;"	d
__CHAR_BIT	compile/DUMBVM/includelinks/kern/machine/types.h	/^#define __CHAR_BIT /;"	d
__CHAR_BIT	compile/DUMBVM/includelinks/kern/mips/types.h	/^#define __CHAR_BIT /;"	d
__CHAR_BIT	compile/DUMBVM/includelinks/machine/kern/types.h	/^#define __CHAR_BIT /;"	d
__CHAR_BIT	compile/DUMBVM/includelinks/mips/kern/types.h	/^#define __CHAR_BIT /;"	d
__DEAD	include/cdefs.h	/^#define __DEAD /;"	d
__DEAD	include/cdefs.h	/^#define __DEAD$/;"	d
__IOV_MAX	include/kern/limits.h	/^#define __IOV_MAX /;"	d
__JB_REGS	arch/mips/include/kern/setjmp.h	/^#define __JB_REGS /;"	d
__JB_REGS	compile/DUMBVM/includelinks/kern/machine/setjmp.h	/^#define __JB_REGS /;"	d
__JB_REGS	compile/DUMBVM/includelinks/kern/mips/setjmp.h	/^#define __JB_REGS /;"	d
__JB_REGS	compile/DUMBVM/includelinks/machine/kern/setjmp.h	/^#define __JB_REGS /;"	d
__JB_REGS	compile/DUMBVM/includelinks/mips/kern/setjmp.h	/^#define __JB_REGS /;"	d
__LOGIN_NAME_MAX	include/kern/limits.h	/^#define __LOGIN_NAME_MAX /;"	d
__NAME_MAX	include/kern/limits.h	/^#define __NAME_MAX /;"	d
__NEED_CURCPU	arch/mips/include/current.h	/^#define __NEED_CURCPU$/;"	d
__NEED_CURCPU	compile/DUMBVM/includelinks/machine/current.h	/^#define __NEED_CURCPU$/;"	d
__NEED_CURCPU	compile/DUMBVM/includelinks/mips/current.h	/^#define __NEED_CURCPU$/;"	d
__NGROUPS_MAX	include/kern/limits.h	/^#define __NGROUPS_MAX /;"	d
__OPEN_MAX	include/kern/limits.h	/^#define __OPEN_MAX /;"	d
__PATH_MAX	include/kern/limits.h	/^#define __PATH_MAX /;"	d
__PF	include/cdefs.h	/^#define __PF(/;"	d
__PID_MAX	include/kern/limits.h	/^#define __PID_MAX /;"	d
__PID_MIN	include/kern/limits.h	/^#define __PID_MIN /;"	d
__PIPE_BUF	include/kern/limits.h	/^#define __PIPE_BUF /;"	d
__RLIMIT_NUM	include/kern/resource.h	/^#define __RLIMIT_NUM	/;"	d
__UNUSED	include/cdefs.h	/^#define __UNUSED /;"	d
__UNUSED	include/cdefs.h	/^#define __UNUSED$/;"	d
__VOP	include/vnode.h	/^#define __VOP(/;"	d
__WCORED	include/kern/wait.h	/^#define __WCORED /;"	d
__WEXITED	include/kern/wait.h	/^#define __WEXITED /;"	d
__WSIGNALED	include/kern/wait.h	/^#define __WSIGNALED /;"	d
__WSTOPPED	include/kern/wait.h	/^#define __WSTOPPED /;"	d
__anon256fc0460103	include/thread.h	/^typedef enum {$/;"	g
__anona0db55a3010a	include/kern/iovec.h	/^        union {$/;"	u	struct:iovec
__anona52b83e50108	include/elf.h	/^typedef struct {$/;"	s
__anona52b83e50208	include/elf.h	/^typedef struct {$/;"	s
__anonaecd2cbf0108	main/menu.c	/^static const struct {$/;"	s	file:
__anonaecd2cbf0208	main/menu.c	/^static struct {$/;"	s	file:
__asm	arch/mips/include/current.h	/^register struct thread *curthread __asm("$23");	\/* s7 register *\/$/;"	v	typeref:struct:thread * curthread
__asm	compile/DUMBVM/includelinks/machine/current.h	/^register struct thread *curthread __asm("$23");	\/* s7 register *\/$/;"	v	typeref:struct:thread * curthread
__asm	compile/DUMBVM/includelinks/mips/current.h	/^register struct thread *curthread __asm("$23");	\/* s7 register *\/$/;"	v	typeref:struct:thread * curthread
__blkcnt_t	include/kern/types.h	/^typedef __u32 __blkcnt_t;  \/* Count of blocks *\/$/;"	t	typeref:typename:__u32
__blksize_t	include/kern/types.h	/^typedef __u32 __blksize_t; \/* Size of an I\/O block *\/$/;"	t	typeref:typename:__u32
__counter_t	include/kern/types.h	/^typedef __u64 __counter_t; \/* Event counter *\/$/;"	t	typeref:typename:__u64
__daddr_t	include/kern/types.h	/^typedef __u32 __daddr_t;   \/* Disk block number *\/$/;"	t	typeref:typename:__u32
__dev_t	include/kern/types.h	/^typedef __u32 __dev_t;     \/* Hardware device ID *\/$/;"	t	typeref:typename:__u32
__fsid_t	include/kern/types.h	/^typedef __u32 __fsid_t;    \/* Filesystem ID *\/$/;"	t	typeref:typename:__u32
__gid_t	include/kern/types.h	/^typedef __i32 __gid_t;     \/* Group ID *\/$/;"	t	typeref:typename:__i32
__i16	arch/mips/include/kern/types.h	/^typedef short     __i16;                \/* 16-bit signed integer *\/$/;"	t	typeref:typename:short
__i16	compile/DUMBVM/includelinks/kern/machine/types.h	/^typedef short     __i16;                \/* 16-bit signed integer *\/$/;"	t	typeref:typename:short
__i16	compile/DUMBVM/includelinks/kern/mips/types.h	/^typedef short     __i16;                \/* 16-bit signed integer *\/$/;"	t	typeref:typename:short
__i16	compile/DUMBVM/includelinks/machine/kern/types.h	/^typedef short     __i16;                \/* 16-bit signed integer *\/$/;"	t	typeref:typename:short
__i16	compile/DUMBVM/includelinks/mips/kern/types.h	/^typedef short     __i16;                \/* 16-bit signed integer *\/$/;"	t	typeref:typename:short
__i32	arch/mips/include/kern/types.h	/^typedef int       __i32;                \/* 32-bit signed integer *\/$/;"	t	typeref:typename:int
__i32	compile/DUMBVM/includelinks/kern/machine/types.h	/^typedef int       __i32;                \/* 32-bit signed integer *\/$/;"	t	typeref:typename:int
__i32	compile/DUMBVM/includelinks/kern/mips/types.h	/^typedef int       __i32;                \/* 32-bit signed integer *\/$/;"	t	typeref:typename:int
__i32	compile/DUMBVM/includelinks/machine/kern/types.h	/^typedef int       __i32;                \/* 32-bit signed integer *\/$/;"	t	typeref:typename:int
__i32	compile/DUMBVM/includelinks/mips/kern/types.h	/^typedef int       __i32;                \/* 32-bit signed integer *\/$/;"	t	typeref:typename:int
__i64	arch/mips/include/kern/types.h	/^typedef long long __i64;                \/* 64-bit signed integer *\/$/;"	t	typeref:typename:long long
__i64	compile/DUMBVM/includelinks/kern/machine/types.h	/^typedef long long __i64;                \/* 64-bit signed integer *\/$/;"	t	typeref:typename:long long
__i64	compile/DUMBVM/includelinks/kern/mips/types.h	/^typedef long long __i64;                \/* 64-bit signed integer *\/$/;"	t	typeref:typename:long long
__i64	compile/DUMBVM/includelinks/machine/kern/types.h	/^typedef long long __i64;                \/* 64-bit signed integer *\/$/;"	t	typeref:typename:long long
__i64	compile/DUMBVM/includelinks/mips/kern/types.h	/^typedef long long __i64;                \/* 64-bit signed integer *\/$/;"	t	typeref:typename:long long
__i8	arch/mips/include/kern/types.h	/^typedef char      __i8;                 \/* 8-bit signed integer *\/$/;"	t	typeref:typename:char
__i8	compile/DUMBVM/includelinks/kern/machine/types.h	/^typedef char      __i8;                 \/* 8-bit signed integer *\/$/;"	t	typeref:typename:char
__i8	compile/DUMBVM/includelinks/kern/mips/types.h	/^typedef char      __i8;                 \/* 8-bit signed integer *\/$/;"	t	typeref:typename:char
__i8	compile/DUMBVM/includelinks/machine/kern/types.h	/^typedef char      __i8;                 \/* 8-bit signed integer *\/$/;"	t	typeref:typename:char
__i8	compile/DUMBVM/includelinks/mips/kern/types.h	/^typedef char      __i8;                 \/* 8-bit signed integer *\/$/;"	t	typeref:typename:char
__in_addr_t	include/kern/types.h	/^typedef __u32 __in_addr_t; \/* Internet address *\/$/;"	t	typeref:typename:__u32
__in_port_t	include/kern/types.h	/^typedef __u32 __in_port_t; \/* Internet port number *\/$/;"	t	typeref:typename:__u32
__ino_t	include/kern/types.h	/^typedef __u32 __ino_t;     \/* Inode number *\/$/;"	t	typeref:typename:__u32
__intptr_t	arch/mips/include/kern/types.h	/^typedef long __intptr_t;                \/* Signed pointer-sized integer *\/$/;"	t	typeref:typename:long
__intptr_t	compile/DUMBVM/includelinks/kern/machine/types.h	/^typedef long __intptr_t;                \/* Signed pointer-sized integer *\/$/;"	t	typeref:typename:long
__intptr_t	compile/DUMBVM/includelinks/kern/mips/types.h	/^typedef long __intptr_t;                \/* Signed pointer-sized integer *\/$/;"	t	typeref:typename:long
__intptr_t	compile/DUMBVM/includelinks/machine/kern/types.h	/^typedef long __intptr_t;                \/* Signed pointer-sized integer *\/$/;"	t	typeref:typename:long
__intptr_t	compile/DUMBVM/includelinks/mips/kern/types.h	/^typedef long __intptr_t;                \/* Signed pointer-sized integer *\/$/;"	t	typeref:typename:long
__mode_t	include/kern/types.h	/^typedef __u32 __mode_t;    \/* File access mode *\/$/;"	t	typeref:typename:__u32
__nfds_t	include/kern/types.h	/^typedef int __nfds_t;    \/* Number of file handles *\/$/;"	t	typeref:typename:int
__nlink_t	include/kern/types.h	/^typedef __u16 __nlink_t;   \/* Number of links (intentionally only 16 bits) *\/$/;"	t	typeref:typename:__u16
__off_t	include/kern/types.h	/^typedef __i64 __off_t;     \/* Offset within file *\/$/;"	t	typeref:typename:__i64
__pid_t	include/kern/types.h	/^typedef __i32 __pid_t;     \/* Process ID *\/$/;"	t	typeref:typename:__i32
__ptrdiff_t	arch/mips/include/kern/types.h	/^typedef int __ptrdiff_t;                \/* Difference of two pointers *\/$/;"	t	typeref:typename:int
__ptrdiff_t	arch/mips/include/kern/types.h	/^typedef long __ptrdiff_t;               \/* Difference of two pointers *\/$/;"	t	typeref:typename:long
__ptrdiff_t	compile/DUMBVM/includelinks/kern/machine/types.h	/^typedef int __ptrdiff_t;                \/* Difference of two pointers *\/$/;"	t	typeref:typename:int
__ptrdiff_t	compile/DUMBVM/includelinks/kern/machine/types.h	/^typedef long __ptrdiff_t;               \/* Difference of two pointers *\/$/;"	t	typeref:typename:long
__ptrdiff_t	compile/DUMBVM/includelinks/kern/mips/types.h	/^typedef int __ptrdiff_t;                \/* Difference of two pointers *\/$/;"	t	typeref:typename:int
__ptrdiff_t	compile/DUMBVM/includelinks/kern/mips/types.h	/^typedef long __ptrdiff_t;               \/* Difference of two pointers *\/$/;"	t	typeref:typename:long
__ptrdiff_t	compile/DUMBVM/includelinks/machine/kern/types.h	/^typedef int __ptrdiff_t;                \/* Difference of two pointers *\/$/;"	t	typeref:typename:int
__ptrdiff_t	compile/DUMBVM/includelinks/machine/kern/types.h	/^typedef long __ptrdiff_t;               \/* Difference of two pointers *\/$/;"	t	typeref:typename:long
__ptrdiff_t	compile/DUMBVM/includelinks/mips/kern/types.h	/^typedef int __ptrdiff_t;                \/* Difference of two pointers *\/$/;"	t	typeref:typename:int
__ptrdiff_t	compile/DUMBVM/includelinks/mips/kern/types.h	/^typedef long __ptrdiff_t;               \/* Difference of two pointers *\/$/;"	t	typeref:typename:long
__rlim_t	include/kern/types.h	/^typedef __u64 __rlim_t;    \/* Resource limit quantity *\/$/;"	t	typeref:typename:__u64
__sa_family_t	include/kern/types.h	/^typedef __u8 __sa_family_t;\/* Socket address family *\/$/;"	t	typeref:typename:__u8
__sigfunc	include/kern/signal.h	/^typedef void (*__sigfunc)(int);$/;"	t	typeref:typename:void (*)(int)
__size_t	arch/mips/include/kern/types.h	/^typedef unsigned __size_t;              \/* Size of a memory region *\/$/;"	t	typeref:typename:unsigned
__size_t	arch/mips/include/kern/types.h	/^typedef unsigned long __size_t;         \/* Size of a memory region *\/$/;"	t	typeref:typename:unsigned long
__size_t	compile/DUMBVM/includelinks/kern/machine/types.h	/^typedef unsigned __size_t;              \/* Size of a memory region *\/$/;"	t	typeref:typename:unsigned
__size_t	compile/DUMBVM/includelinks/kern/machine/types.h	/^typedef unsigned long __size_t;         \/* Size of a memory region *\/$/;"	t	typeref:typename:unsigned long
__size_t	compile/DUMBVM/includelinks/kern/mips/types.h	/^typedef unsigned __size_t;              \/* Size of a memory region *\/$/;"	t	typeref:typename:unsigned
__size_t	compile/DUMBVM/includelinks/kern/mips/types.h	/^typedef unsigned long __size_t;         \/* Size of a memory region *\/$/;"	t	typeref:typename:unsigned long
__size_t	compile/DUMBVM/includelinks/machine/kern/types.h	/^typedef unsigned __size_t;              \/* Size of a memory region *\/$/;"	t	typeref:typename:unsigned
__size_t	compile/DUMBVM/includelinks/machine/kern/types.h	/^typedef unsigned long __size_t;         \/* Size of a memory region *\/$/;"	t	typeref:typename:unsigned long
__size_t	compile/DUMBVM/includelinks/mips/kern/types.h	/^typedef unsigned __size_t;              \/* Size of a memory region *\/$/;"	t	typeref:typename:unsigned
__size_t	compile/DUMBVM/includelinks/mips/kern/types.h	/^typedef unsigned long __size_t;         \/* Size of a memory region *\/$/;"	t	typeref:typename:unsigned long
__socklen_t	include/kern/types.h	/^typedef int __socklen_t;   \/* Socket-related length *\/$/;"	t	typeref:typename:int
__ss_pad1	include/kern/socket.h	/^   __u8 __ss_pad1;$/;"	m	struct:sockaddr_storage	typeref:typename:__u8
__ss_pad2	include/kern/socket.h	/^   __u8 __ss_pad2;$/;"	m	struct:sockaddr_storage	typeref:typename:__u8
__ss_pad3	include/kern/socket.h	/^   __u32 __ss_pad3;$/;"	m	struct:sockaddr_storage	typeref:typename:__u32
__ss_pad4	include/kern/socket.h	/^   __u64 __ss_pad4;$/;"	m	struct:sockaddr_storage	typeref:typename:__u64
__ss_pad5	include/kern/socket.h	/^   char __ss_pad5[_SS_SIZE - sizeof(__u64) - sizeof(__u32) - 4*sizeof(__u8)];$/;"	m	struct:sockaddr_storage	typeref:typename:char[]
__ssize_t	arch/mips/include/kern/types.h	/^typedef int __ssize_t;                  \/* Signed type of same size *\/$/;"	t	typeref:typename:int
__ssize_t	arch/mips/include/kern/types.h	/^typedef long __ssize_t;                 \/* Signed type of same size *\/$/;"	t	typeref:typename:long
__ssize_t	compile/DUMBVM/includelinks/kern/machine/types.h	/^typedef int __ssize_t;                  \/* Signed type of same size *\/$/;"	t	typeref:typename:int
__ssize_t	compile/DUMBVM/includelinks/kern/machine/types.h	/^typedef long __ssize_t;                 \/* Signed type of same size *\/$/;"	t	typeref:typename:long
__ssize_t	compile/DUMBVM/includelinks/kern/mips/types.h	/^typedef int __ssize_t;                  \/* Signed type of same size *\/$/;"	t	typeref:typename:int
__ssize_t	compile/DUMBVM/includelinks/kern/mips/types.h	/^typedef long __ssize_t;                 \/* Signed type of same size *\/$/;"	t	typeref:typename:long
__ssize_t	compile/DUMBVM/includelinks/machine/kern/types.h	/^typedef int __ssize_t;                  \/* Signed type of same size *\/$/;"	t	typeref:typename:int
__ssize_t	compile/DUMBVM/includelinks/machine/kern/types.h	/^typedef long __ssize_t;                 \/* Signed type of same size *\/$/;"	t	typeref:typename:long
__ssize_t	compile/DUMBVM/includelinks/mips/kern/types.h	/^typedef int __ssize_t;                  \/* Signed type of same size *\/$/;"	t	typeref:typename:int
__ssize_t	compile/DUMBVM/includelinks/mips/kern/types.h	/^typedef long __ssize_t;                 \/* Signed type of same size *\/$/;"	t	typeref:typename:long
__start	arch/sys161/main/start.S	/^__start:$/;"	l
__time_t	include/kern/types.h	/^typedef __i64 __time_t;    \/* Time in seconds *\/$/;"	t	typeref:typename:__i64
__u16	arch/mips/include/kern/types.h	/^typedef unsigned short     __u16;       \/* 16-bit unsigned integer *\/$/;"	t	typeref:typename:unsigned short
__u16	compile/DUMBVM/includelinks/kern/machine/types.h	/^typedef unsigned short     __u16;       \/* 16-bit unsigned integer *\/$/;"	t	typeref:typename:unsigned short
__u16	compile/DUMBVM/includelinks/kern/mips/types.h	/^typedef unsigned short     __u16;       \/* 16-bit unsigned integer *\/$/;"	t	typeref:typename:unsigned short
__u16	compile/DUMBVM/includelinks/machine/kern/types.h	/^typedef unsigned short     __u16;       \/* 16-bit unsigned integer *\/$/;"	t	typeref:typename:unsigned short
__u16	compile/DUMBVM/includelinks/mips/kern/types.h	/^typedef unsigned short     __u16;       \/* 16-bit unsigned integer *\/$/;"	t	typeref:typename:unsigned short
__u32	arch/mips/include/kern/types.h	/^typedef unsigned int       __u32;       \/* 32-bit unsigned integer *\/$/;"	t	typeref:typename:unsigned int
__u32	compile/DUMBVM/includelinks/kern/machine/types.h	/^typedef unsigned int       __u32;       \/* 32-bit unsigned integer *\/$/;"	t	typeref:typename:unsigned int
__u32	compile/DUMBVM/includelinks/kern/mips/types.h	/^typedef unsigned int       __u32;       \/* 32-bit unsigned integer *\/$/;"	t	typeref:typename:unsigned int
__u32	compile/DUMBVM/includelinks/machine/kern/types.h	/^typedef unsigned int       __u32;       \/* 32-bit unsigned integer *\/$/;"	t	typeref:typename:unsigned int
__u32	compile/DUMBVM/includelinks/mips/kern/types.h	/^typedef unsigned int       __u32;       \/* 32-bit unsigned integer *\/$/;"	t	typeref:typename:unsigned int
__u64	arch/mips/include/kern/types.h	/^typedef unsigned long long __u64;       \/* 64-bit unsigned integer *\/$/;"	t	typeref:typename:unsigned long long
__u64	compile/DUMBVM/includelinks/kern/machine/types.h	/^typedef unsigned long long __u64;       \/* 64-bit unsigned integer *\/$/;"	t	typeref:typename:unsigned long long
__u64	compile/DUMBVM/includelinks/kern/mips/types.h	/^typedef unsigned long long __u64;       \/* 64-bit unsigned integer *\/$/;"	t	typeref:typename:unsigned long long
__u64	compile/DUMBVM/includelinks/machine/kern/types.h	/^typedef unsigned long long __u64;       \/* 64-bit unsigned integer *\/$/;"	t	typeref:typename:unsigned long long
__u64	compile/DUMBVM/includelinks/mips/kern/types.h	/^typedef unsigned long long __u64;       \/* 64-bit unsigned integer *\/$/;"	t	typeref:typename:unsigned long long
__u8	arch/mips/include/kern/types.h	/^typedef unsigned char      __u8;        \/* 8-bit unsigned integer *\/$/;"	t	typeref:typename:unsigned char
__u8	compile/DUMBVM/includelinks/kern/machine/types.h	/^typedef unsigned char      __u8;        \/* 8-bit unsigned integer *\/$/;"	t	typeref:typename:unsigned char
__u8	compile/DUMBVM/includelinks/kern/mips/types.h	/^typedef unsigned char      __u8;        \/* 8-bit unsigned integer *\/$/;"	t	typeref:typename:unsigned char
__u8	compile/DUMBVM/includelinks/machine/kern/types.h	/^typedef unsigned char      __u8;        \/* 8-bit unsigned integer *\/$/;"	t	typeref:typename:unsigned char
__u8	compile/DUMBVM/includelinks/mips/kern/types.h	/^typedef unsigned char      __u8;        \/* 8-bit unsigned integer *\/$/;"	t	typeref:typename:unsigned char
__uid_t	include/kern/types.h	/^typedef __i32 __uid_t;     \/* User ID *\/$/;"	t	typeref:typename:__i32
__uintptr_t	arch/mips/include/kern/types.h	/^typedef unsigned long __uintptr_t;      \/* Unsigned pointer-sized integer *\/$/;"	t	typeref:typename:unsigned long
__uintptr_t	compile/DUMBVM/includelinks/kern/machine/types.h	/^typedef unsigned long __uintptr_t;      \/* Unsigned pointer-sized integer *\/$/;"	t	typeref:typename:unsigned long
__uintptr_t	compile/DUMBVM/includelinks/kern/mips/types.h	/^typedef unsigned long __uintptr_t;      \/* Unsigned pointer-sized integer *\/$/;"	t	typeref:typename:unsigned long
__uintptr_t	compile/DUMBVM/includelinks/machine/kern/types.h	/^typedef unsigned long __uintptr_t;      \/* Unsigned pointer-sized integer *\/$/;"	t	typeref:typename:unsigned long
__uintptr_t	compile/DUMBVM/includelinks/mips/kern/types.h	/^typedef unsigned long __uintptr_t;      \/* Unsigned pointer-sized integer *\/$/;"	t	typeref:typename:unsigned long
__userptr	include/types.h	/^struct __userptr { char _dummy; };$/;"	s
__va_list	include/kern/types.h	/^typedef __builtin_va_list __va_list;$/;"	t	typeref:typename:__builtin_va_list
_dummy	include/types.h	/^struct __userptr { char _dummy; };$/;"	m	struct:__userptr	typeref:typename:char
a0	arch/mips/include/kern/regdefs.h	/^#define a0 /;"	d
a0	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define a0 /;"	d
a0	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define a0 /;"	d
a0	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define a0 /;"	d
a0	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define a0 /;"	d
a1	arch/mips/include/kern/regdefs.h	/^#define a1 /;"	d
a1	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define a1 /;"	d
a1	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define a1 /;"	d
a1	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define a1 /;"	d
a1	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define a1 /;"	d
a2	arch/mips/include/kern/regdefs.h	/^#define a2 /;"	d
a2	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define a2 /;"	d
a2	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define a2 /;"	d
a2	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define a2 /;"	d
a2	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define a2 /;"	d
a3	arch/mips/include/kern/regdefs.h	/^#define a3 /;"	d
a3	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define a3 /;"	d
a3	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define a3 /;"	d
a3	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define a3 /;"	d
a3	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define a3 /;"	d
addrspace	include/addrspace.h	/^struct addrspace {$/;"	s
allbase	vm/kmalloc.c	/^static struct pageref *allbase;$/;"	v	typeref:struct:pageref *	file:
allcpus	thread/thread.c	/^static struct cpuarray allcpus;$/;"	v	typeref:struct:cpuarray	file:
alloc_kpages	arch/mips/vm/dumbvm.c	/^alloc_kpages(unsigned npages)$/;"	f	typeref:typename:vaddr_t
allocpageref	vm/kmalloc.c	/^allocpageref(void)$/;"	f	typeref:struct:pageref *	file:
allocpagerefpage	vm/kmalloc.c	/^allocpagerefpage(struct kheap_root *root)$/;"	f	typeref:typename:void	file:
allwchans	thread/thread.c	/^static struct wchanarray allwchans;$/;"	v	typeref:struct:wchanarray	file:
allwchans_lock	thread/thread.c	/^static struct spinlock allwchans_lock;$/;"	v	typeref:struct:spinlock	file:
array	include/array.h	/^struct array {$/;"	s
array_add	include/array.h	/^array_add(struct array *a, void *val, unsigned *index_ret)$/;"	f	typeref:typename:ARRAYINLINE int
array_cleanup	lib/array.c	/^array_cleanup(struct array *a)$/;"	f	typeref:typename:void
array_create	lib/array.c	/^array_create(void)$/;"	f	typeref:struct:array *
array_destroy	lib/array.c	/^array_destroy(struct array *a)$/;"	f	typeref:typename:void
array_get	include/array.h	/^array_get(const struct array *a, unsigned index)$/;"	f	typeref:typename:ARRAYINLINE void *
array_init	lib/array.c	/^array_init(struct array *a)$/;"	f	typeref:typename:void
array_num	include/array.h	/^array_num(const struct array *a)$/;"	f	typeref:typename:ARRAYINLINE unsigned
array_preallocate	lib/array.c	/^array_preallocate(struct array *a, unsigned num)$/;"	f	typeref:typename:int
array_remove	lib/array.c	/^array_remove(struct array *a, unsigned index)$/;"	f	typeref:typename:void
array_set	include/array.h	/^array_set(const struct array *a, unsigned index, void *val)$/;"	f	typeref:typename:ARRAYINLINE void
array_setsize	lib/array.c	/^array_setsize(struct array *a, unsigned num)$/;"	f	typeref:typename:int
arraytest	test/arraytest.c	/^arraytest(int nargs, char **args)$/;"	f	typeref:typename:int
as_activate	arch/mips/vm/dumbvm.c	/^as_activate(void)$/;"	f	typeref:typename:void
as_activate	vm/addrspace.c	/^as_activate(void)$/;"	f	typeref:typename:void
as_complete_load	arch/mips/vm/dumbvm.c	/^as_complete_load(struct addrspace *as)$/;"	f	typeref:typename:int
as_complete_load	vm/addrspace.c	/^as_complete_load(struct addrspace *as)$/;"	f	typeref:typename:int
as_copy	arch/mips/vm/dumbvm.c	/^as_copy(struct addrspace *old, struct addrspace **ret)$/;"	f	typeref:typename:int
as_copy	vm/addrspace.c	/^as_copy(struct addrspace *old, struct addrspace **ret)$/;"	f	typeref:typename:int
as_create	arch/mips/vm/dumbvm.c	/^as_create(void)$/;"	f	typeref:struct:addrspace *
as_create	vm/addrspace.c	/^as_create(void)$/;"	f	typeref:struct:addrspace *
as_deactivate	arch/mips/vm/dumbvm.c	/^as_deactivate(void)$/;"	f	typeref:typename:void
as_deactivate	vm/addrspace.c	/^as_deactivate(void)$/;"	f	typeref:typename:void
as_define_region	arch/mips/vm/dumbvm.c	/^as_define_region(struct addrspace *as, vaddr_t vaddr, size_t sz,$/;"	f	typeref:typename:int
as_define_region	vm/addrspace.c	/^as_define_region(struct addrspace *as, vaddr_t vaddr, size_t sz,$/;"	f	typeref:typename:int
as_define_stack	arch/mips/vm/dumbvm.c	/^as_define_stack(struct addrspace *as, vaddr_t *stackptr)$/;"	f	typeref:typename:int
as_define_stack	vm/addrspace.c	/^as_define_stack(struct addrspace *as, vaddr_t *stackptr)$/;"	f	typeref:typename:int
as_destroy	arch/mips/vm/dumbvm.c	/^as_destroy(struct addrspace *as)$/;"	f	typeref:typename:void
as_destroy	vm/addrspace.c	/^as_destroy(struct addrspace *as)$/;"	f	typeref:typename:void
as_npages1	include/addrspace.h	/^        size_t as_npages1;$/;"	m	struct:addrspace	typeref:typename:size_t
as_npages2	include/addrspace.h	/^        size_t as_npages2;$/;"	m	struct:addrspace	typeref:typename:size_t
as_pbase1	include/addrspace.h	/^        paddr_t as_pbase1;$/;"	m	struct:addrspace	typeref:typename:paddr_t
as_pbase2	include/addrspace.h	/^        paddr_t as_pbase2;$/;"	m	struct:addrspace	typeref:typename:paddr_t
as_prepare_load	arch/mips/vm/dumbvm.c	/^as_prepare_load(struct addrspace *as)$/;"	f	typeref:typename:int
as_prepare_load	vm/addrspace.c	/^as_prepare_load(struct addrspace *as)$/;"	f	typeref:typename:int
as_stackpbase	include/addrspace.h	/^        paddr_t as_stackpbase;$/;"	m	struct:addrspace	typeref:typename:paddr_t
as_vbase1	include/addrspace.h	/^        vaddr_t as_vbase1;$/;"	m	struct:addrspace	typeref:typename:vaddr_t
as_vbase2	include/addrspace.h	/^        vaddr_t as_vbase2;$/;"	m	struct:addrspace	typeref:typename:vaddr_t
as_zero_region	arch/mips/vm/dumbvm.c	/^as_zero_region(paddr_t paddr, unsigned npages)$/;"	f	typeref:typename:void	file:
asm_usermode	arch/mips/locore/exception-mips1.S	/^asm_usermode:$/;"	l
attach_beep_to_ltimer	dev/lamebus/beep_ltimer.c	/^attach_beep_to_ltimer(int beepno, struct ltimer_softc *ls)$/;"	f	typeref:struct:beep_softc *
attach_con_to_lscreen	dev/lamebus/con_lscreen.c	/^attach_con_to_lscreen(int consno, struct lscreen_softc *ls)$/;"	f	typeref:struct:con_softc *
attach_con_to_lser	dev/lamebus/con_lser.c	/^attach_con_to_lser(int consno, struct lser_softc *ls)$/;"	f	typeref:struct:con_softc *
attach_console_to_vfs	dev/generic/console.c	/^attach_console_to_vfs(struct con_softc *cs)$/;"	f	typeref:typename:int	file:
attach_emu_to_lamebus	dev/lamebus/emu_att.c	/^attach_emu_to_lamebus(int emuno, struct lamebus_softc *sc)$/;"	f	typeref:struct:emu_softc *
attach_lhd_to_lamebus	dev/lamebus/lhd_att.c	/^attach_lhd_to_lamebus(int lhdno, struct lamebus_softc *sc)$/;"	f	typeref:struct:lhd_softc *
attach_lnet_to_lamebus	dev/lamebus/lnet_att.c	/^attach_lnet_to_lamebus(int lnetno, struct lamebus_softc *sc)$/;"	f	typeref:struct:lnet_softc *
attach_lrandom_to_lamebus	dev/lamebus/lrandom_att.c	/^attach_lrandom_to_lamebus(int lrandomno, struct lamebus_softc *sc)$/;"	f	typeref:struct:lrandom_softc *
attach_lscreen_to_lamebus	dev/lamebus/lscreen_att.c	/^attach_lscreen_to_lamebus(int lscreenno, struct lamebus_softc *sc)$/;"	f	typeref:struct:lscreen_softc *
attach_lser_to_lamebus	dev/lamebus/lser_att.c	/^attach_lser_to_lamebus(int lserno, struct lamebus_softc *sc)$/;"	f	typeref:struct:lser_softc *
attach_ltimer_to_lamebus	dev/lamebus/ltimer_att.c	/^attach_ltimer_to_lamebus(int ltimerno, struct lamebus_softc *sc)$/;"	f	typeref:struct:ltimer_softc *
attach_ltrace_to_lamebus	dev/lamebus/ltrace_att.c	/^attach_ltrace_to_lamebus(int ltraceno, struct lamebus_softc *sc)$/;"	f	typeref:struct:ltrace_softc *
attach_random_to_lrandom	dev/lamebus/random_lrandom.c	/^attach_random_to_lrandom(int randomno, struct lrandom_softc *ls)$/;"	f	typeref:struct:random_softc *
attach_rtclock_to_ltimer	dev/lamebus/rtclock_ltimer.c	/^attach_rtclock_to_ltimer(int rtclockno, struct ltimer_softc *ls)$/;"	f	typeref:struct:rtclock_softc *
autoconf_beep	compile/DUMBVM/autoconf.c	/^autoconf_beep(struct beep_softc *bus, int busunit)$/;"	f	typeref:typename:void	file:
autoconf_con	compile/DUMBVM/autoconf.c	/^autoconf_con(struct con_softc *bus, int busunit)$/;"	f	typeref:typename:void	file:
autoconf_emu	compile/DUMBVM/autoconf.c	/^autoconf_emu(struct emu_softc *bus, int busunit)$/;"	f	typeref:typename:void	file:
autoconf_lamebus	compile/DUMBVM/autoconf.c	/^autoconf_lamebus(struct lamebus_softc *bus, int busunit)$/;"	f	typeref:typename:void
autoconf_lhd	compile/DUMBVM/autoconf.c	/^autoconf_lhd(struct lhd_softc *bus, int busunit)$/;"	f	typeref:typename:void	file:
autoconf_lrandom	compile/DUMBVM/autoconf.c	/^autoconf_lrandom(struct lrandom_softc *bus, int busunit)$/;"	f	typeref:typename:void	file:
autoconf_lser	compile/DUMBVM/autoconf.c	/^autoconf_lser(struct lser_softc *bus, int busunit)$/;"	f	typeref:typename:void	file:
autoconf_ltimer	compile/DUMBVM/autoconf.c	/^autoconf_ltimer(struct ltimer_softc *bus, int busunit)$/;"	f	typeref:typename:void	file:
autoconf_ltrace	compile/DUMBVM/autoconf.c	/^autoconf_ltrace(struct ltrace_softc *bus, int busunit)$/;"	f	typeref:typename:void	file:
autoconf_random	compile/DUMBVM/autoconf.c	/^autoconf_random(struct random_softc *bus, int busunit)$/;"	f	typeref:typename:void	file:
autoconf_rtclock	compile/DUMBVM/autoconf.c	/^autoconf_rtclock(struct rtclock_softc *bus, int busunit)$/;"	f	typeref:typename:void	file:
backsp	lib/kgets.c	/^backsp(void)$/;"	f	typeref:typename:void	file:
badassert	lib/kprintf.c	/^badassert(const char *expr, const char *file, int line, const char *func)$/;"	f	typeref:typename:void
badfaultfunc_t	arch/mips/include/thread.h	/^typedef void (*badfaultfunc_t)(void);$/;"	t	typeref:typename:void (*)(void)
badfaultfunc_t	compile/DUMBVM/includelinks/machine/thread.h	/^typedef void (*badfaultfunc_t)(void);$/;"	t	typeref:typename:void (*)(void)
badfaultfunc_t	compile/DUMBVM/includelinks/mips/thread.h	/^typedef void (*badfaultfunc_t)(void);$/;"	t	typeref:typename:void (*)(void)
badnames	vfs/vfslist.c	/^badnames(const char *n1, const char *n2, const char *n3)$/;"	f	typeref:typename:int	file:
beep	dev/generic/beep.c	/^beep(void)$/;"	f	typeref:typename:void
beep_softc	dev/generic/beep.h	/^struct beep_softc {$/;"	s
bitmap	lib/bitmap.c	/^struct bitmap {$/;"	s	file:
bitmap_alloc	lib/bitmap.c	/^bitmap_alloc(struct bitmap *b, unsigned *index)$/;"	f	typeref:typename:int
bitmap_create	lib/bitmap.c	/^bitmap_create(unsigned nbits)$/;"	f	typeref:struct:bitmap *
bitmap_destroy	lib/bitmap.c	/^bitmap_destroy(struct bitmap *b)$/;"	f	typeref:typename:void
bitmap_getdata	lib/bitmap.c	/^bitmap_getdata(struct bitmap *b)$/;"	f	typeref:typename:void *
bitmap_isset	lib/bitmap.c	/^bitmap_isset(struct bitmap *b, unsigned index)$/;"	f	typeref:typename:int
bitmap_mark	lib/bitmap.c	/^bitmap_mark(struct bitmap *b, unsigned index)$/;"	f	typeref:typename:void
bitmap_translate	lib/bitmap.c	/^bitmap_translate(unsigned bitno, unsigned *ix, WORD_TYPE *mask)$/;"	f	typeref:typename:void	file:
bitmap_unmark	lib/bitmap.c	/^bitmap_unmark(struct bitmap *b, unsigned index)$/;"	f	typeref:typename:void
bitmaptest	test/bitmaptest.c	/^bitmaptest(int nargs, char **args)$/;"	f	typeref:typename:int
blkcnt_t	include/types.h	/^typedef __blkcnt_t blkcnt_t;$/;"	t	typeref:typename:__blkcnt_t
blksize_t	include/types.h	/^typedef __blksize_t blksize_t;$/;"	t	typeref:typename:__blksize_t
blocktype	vm/kmalloc.c	/^int blocktype(size_t clientsz)$/;"	f	typeref:typename:int	file:
boot	main/main.c	/^boot(void)$/;"	f	typeref:typename:void	file:
bootfs_vnode	vfs/vfslookup.c	/^static struct vnode *bootfs_vnode = NULL;$/;"	v	typeref:struct:vnode *	file:
bs_beep	dev/generic/beep.h	/^	void (*bs_beep)(void *devdata);$/;"	m	struct:beep_softc	typeref:typename:void (*)(void * devdata)
bs_devdata	dev/generic/beep.h	/^	void *bs_devdata;$/;"	m	struct:beep_softc	typeref:typename:void *
bswap16	lib/bswap.c	/^bswap16(uint16_t val)$/;"	f	typeref:typename:uint16_t
bswap32	lib/bswap.c	/^bswap32(uint32_t val)$/;"	f	typeref:typename:uint32_t
bswap64	lib/bswap.c	/^bswap64(uint64_t val)$/;"	f	typeref:typename:uint64_t
buildconfig	compile/DUMBVM/vers.c	/^const char buildconfig[] = "DUMBVM";$/;"	v	typeref:typename:const char[]
buildversion	compile/DUMBVM/vers.c	/^const int buildversion = 2;$/;"	v	typeref:typename:const int
bus_map_area	arch/sys161/include/bus.h	/^#define bus_map_area(/;"	d
bus_map_area	compile/DUMBVM/includelinks/platform/bus.h	/^#define bus_map_area(/;"	d
bus_map_area	compile/DUMBVM/includelinks/sys161/bus.h	/^#define bus_map_area(/;"	d
bus_read_register	arch/sys161/include/bus.h	/^#define bus_read_register(/;"	d
bus_read_register	compile/DUMBVM/includelinks/platform/bus.h	/^#define bus_read_register(/;"	d
bus_read_register	compile/DUMBVM/includelinks/sys161/bus.h	/^#define bus_read_register(/;"	d
bus_write_register	arch/sys161/include/bus.h	/^#define bus_write_register(/;"	d
bus_write_register	compile/DUMBVM/includelinks/platform/bus.h	/^#define bus_write_register(/;"	d
bus_write_register	compile/DUMBVM/includelinks/sys161/bus.h	/^#define bus_write_register(/;"	d
c0_cause	arch/mips/include/specialreg.h	/^#define c0_cause /;"	d
c0_cause	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define c0_cause /;"	d
c0_cause	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define c0_cause /;"	d
c0_compare	arch/mips/include/specialreg.h	/^#define c0_compare /;"	d
c0_compare	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define c0_compare /;"	d
c0_compare	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define c0_compare /;"	d
c0_context	arch/mips/include/specialreg.h	/^#define c0_context /;"	d
c0_context	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define c0_context /;"	d
c0_context	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define c0_context /;"	d
c0_count	arch/mips/include/specialreg.h	/^#define c0_count /;"	d
c0_count	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define c0_count /;"	d
c0_count	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define c0_count /;"	d
c0_entryhi	arch/mips/include/specialreg.h	/^#define c0_entryhi /;"	d
c0_entryhi	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define c0_entryhi /;"	d
c0_entryhi	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define c0_entryhi /;"	d
c0_entrylo	arch/mips/include/specialreg.h	/^#define c0_entrylo /;"	d
c0_entrylo	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define c0_entrylo /;"	d
c0_entrylo	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define c0_entrylo /;"	d
c0_epc	arch/mips/include/specialreg.h	/^#define c0_epc /;"	d
c0_epc	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define c0_epc /;"	d
c0_epc	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define c0_epc /;"	d
c0_index	arch/mips/include/specialreg.h	/^#define c0_index /;"	d
c0_index	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define c0_index /;"	d
c0_index	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define c0_index /;"	d
c0_prid	arch/mips/include/specialreg.h	/^#define c0_prid /;"	d
c0_prid	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define c0_prid /;"	d
c0_prid	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define c0_prid /;"	d
c0_random	arch/mips/include/specialreg.h	/^#define c0_random /;"	d
c0_random	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define c0_random /;"	d
c0_random	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define c0_random /;"	d
c0_status	arch/mips/include/specialreg.h	/^#define c0_status /;"	d
c0_status	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define c0_status /;"	d
c0_status	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define c0_status /;"	d
c0_vaddr	arch/mips/include/specialreg.h	/^#define c0_vaddr /;"	d
c0_vaddr	compile/DUMBVM/includelinks/machine/specialreg.h	/^#define c0_vaddr /;"	d
c0_vaddr	compile/DUMBVM/includelinks/mips/specialreg.h	/^#define c0_vaddr /;"	d
c_curthread	include/cpu.h	/^	struct thread *c_curthread;	\/* Current thread on cpu *\/$/;"	m	struct:cpu	typeref:struct:thread *
c_hardclocks	include/cpu.h	/^	unsigned c_hardclocks;		\/* Counter of hardclock() calls *\/$/;"	m	struct:cpu	typeref:typename:unsigned
c_hardware_number	include/cpu.h	/^	unsigned c_hardware_number;	\/* Hardware-defined cpu number *\/$/;"	m	struct:cpu	typeref:typename:unsigned
c_ipi_lock	include/cpu.h	/^	struct spinlock c_ipi_lock;$/;"	m	struct:cpu	typeref:struct:spinlock
c_ipi_pending	include/cpu.h	/^	uint32_t c_ipi_pending;		\/* One bit for each IPI number *\/$/;"	m	struct:cpu	typeref:typename:uint32_t
c_isidle	include/cpu.h	/^	bool c_isidle;			\/* True if this cpu is idle *\/$/;"	m	struct:cpu	typeref:typename:bool
c_number	include/cpu.h	/^	unsigned c_number;		\/* This cpu's cpu number *\/$/;"	m	struct:cpu	typeref:typename:unsigned
c_numshootdown	include/cpu.h	/^	int c_numshootdown;$/;"	m	struct:cpu	typeref:typename:int
c_runqueue	include/cpu.h	/^	struct threadlist c_runqueue;	\/* Run queue for this cpu *\/$/;"	m	struct:cpu	typeref:struct:threadlist
c_runqueue_lock	include/cpu.h	/^	struct spinlock c_runqueue_lock;$/;"	m	struct:cpu	typeref:struct:spinlock
c_self	include/cpu.h	/^	struct cpu *c_self;		\/* Canonical address of this struct *\/$/;"	m	struct:cpu	typeref:struct:cpu *
c_shootdown	include/cpu.h	/^	struct tlbshootdown c_shootdown[TLBSHOOTDOWN_MAX];$/;"	m	struct:cpu	typeref:struct:tlbshootdown[]
c_spinlocks	include/cpu.h	/^	unsigned c_spinlocks;		\/* Counter of spinlocks held *\/$/;"	m	struct:cpu	typeref:typename:unsigned
c_zombies	include/cpu.h	/^	struct threadlist c_zombies;	\/* List of exited threads *\/$/;"	m	struct:cpu	typeref:struct:threadlist
change_bootfs	vfs/vfslookup.c	/^change_bootfs(struct vnode *newvn)$/;"	f	typeref:typename:void	file:
check_order	test/threadlisttest.c	/^check_order(struct threadlist *tl, bool rev)$/;"	f	typeref:typename:void	file:
checkdeadbeef	vm/kmalloc.c	/^checkdeadbeef(void *block, size_t blocksize)$/;"	f	typeref:typename:void	file:
checkfilesystem	test/fstest.c	/^checkfilesystem(int nargs, char **args)$/;"	f	typeref:typename:int	file:
checkguardband	vm/kmalloc.c	/^checkguardband(vaddr_t blockaddr, size_t smallerblocksize, size_t blocksize)$/;"	f	typeref:typename:void	file:
checksubpage	vm/kmalloc.c	/^#define checksubpage(/;"	d	file:
checksubpage	vm/kmalloc.c	/^checksubpage(struct pageref *pr)$/;"	f	typeref:typename:void	file:
checksubpages	vm/kmalloc.c	/^#define checksubpages(/;"	d	file:
checksubpages	vm/kmalloc.c	/^checksubpages(void)$/;"	f	typeref:typename:void	file:
clocksleep	thread/clock.c	/^clocksleep(int num_secs)$/;"	f	typeref:typename:void
cmd_bootfs	main/menu.c	/^cmd_bootfs(int nargs, char **args)$/;"	f	typeref:typename:int	file:
cmd_chdir	main/menu.c	/^cmd_chdir(int nargs, char **args)$/;"	f	typeref:typename:int	file:
cmd_dispatch	main/menu.c	/^cmd_dispatch(char *cmd)$/;"	f	typeref:typename:int	file:
cmd_kheapdump	main/menu.c	/^cmd_kheapdump(int nargs, char **args)$/;"	f	typeref:typename:int	file:
cmd_kheapgeneration	main/menu.c	/^cmd_kheapgeneration(int nargs, char **args)$/;"	f	typeref:typename:int	file:
cmd_kheapstats	main/menu.c	/^cmd_kheapstats(int nargs, char **args)$/;"	f	typeref:typename:int	file:
cmd_mainmenu	main/menu.c	/^cmd_mainmenu(int n, char **a)$/;"	f	typeref:typename:int	file:
cmd_mount	main/menu.c	/^cmd_mount(int nargs, char **args)$/;"	f	typeref:typename:int	file:
cmd_opsmenu	main/menu.c	/^cmd_opsmenu(int n, char **a)$/;"	f	typeref:typename:int	file:
cmd_panic	main/menu.c	/^cmd_panic(int nargs, char **args)$/;"	f	typeref:typename:int	file:
cmd_prog	main/menu.c	/^cmd_prog(int nargs, char **args)$/;"	f	typeref:typename:int	file:
cmd_progthread	main/menu.c	/^cmd_progthread(void *ptr, unsigned long nargs)$/;"	f	typeref:typename:void	file:
cmd_pwd	main/menu.c	/^cmd_pwd(int nargs, char **args)$/;"	f	typeref:typename:int	file:
cmd_quit	main/menu.c	/^cmd_quit(int nargs, char **args)$/;"	f	typeref:typename:int	file:
cmd_shell	main/menu.c	/^cmd_shell(int nargs, char **args)$/;"	f	typeref:typename:int	file:
cmd_sync	main/menu.c	/^cmd_sync(int nargs, char **args)$/;"	f	typeref:typename:int	file:
cmd_testmenu	main/menu.c	/^cmd_testmenu(int n, char **a)$/;"	f	typeref:typename:int	file:
cmd_unmount	main/menu.c	/^cmd_unmount(int nargs, char **args)$/;"	f	typeref:typename:int	file:
cmdtable	main/menu.c	/^} cmdtable[] = {$/;"	v	typeref:struct:__anonaecd2cbf0208[]
cmsg_len	include/kern/socket.h	/^	socklen_t cmsg_len;	\/* length of control data, including header *\/$/;"	m	struct:cmsghdr	typeref:typename:socklen_t
cmsg_level	include/kern/socket.h	/^	int cmsg_level;		\/* protocol layer item originates from *\/$/;"	m	struct:cmsghdr	typeref:typename:int
cmsg_type	include/kern/socket.h	/^	int cmsg_type;		\/* protocol-specific message type *\/$/;"	m	struct:cmsghdr	typeref:typename:int
cmsghdr	include/kern/socket.h	/^struct cmsghdr {$/;"	s
common_exception	arch/mips/locore/exception-mips1.S	/^common_exception:$/;"	l
common_prog	main/menu.c	/^common_prog(int nargs, char **args)$/;"	f	typeref:typename:int	file:
compute_thread	test/tt3.c	/^compute_thread(void *junk1, unsigned long num)$/;"	f	typeref:typename:void	file:
con_eachopen	dev/generic/console.c	/^con_eachopen(struct device *dev, int openflags)$/;"	f	typeref:typename:int	file:
con_input	dev/generic/console.c	/^con_input(void *vcs, int ch)$/;"	f	typeref:typename:void
con_io	dev/generic/console.c	/^con_io(struct device *dev, struct uio *uio)$/;"	f	typeref:typename:int	file:
con_ioctl	dev/generic/console.c	/^con_ioctl(struct device *dev, int op, userptr_t data)$/;"	f	typeref:typename:int	file:
con_softc	dev/generic/console.h	/^struct con_softc {$/;"	s
con_start	dev/generic/console.c	/^con_start(void *vcs)$/;"	f	typeref:typename:void
con_userlock_read	dev/generic/console.c	/^static struct lock *con_userlock_read = NULL;$/;"	v	typeref:struct:lock *	file:
con_userlock_write	dev/generic/console.c	/^static struct lock *con_userlock_write = NULL;$/;"	v	typeref:struct:lock *	file:
config_beep	dev/generic/beep.c	/^config_beep(struct beep_softc *bs, int unit)$/;"	f	typeref:typename:int
config_con	dev/generic/console.c	/^config_con(struct con_softc *cs, int unit)$/;"	f	typeref:typename:int
config_emu	dev/lamebus/emu.c	/^config_emu(struct emu_softc *sc, int emuno)$/;"	f	typeref:typename:int
config_lhd	dev/lamebus/lhd.c	/^config_lhd(struct lhd_softc *lh, int lhdno)$/;"	f	typeref:typename:int
config_lnet	dev/lamebus/lnet.c	/^config_lnet(struct lnet_softc *sc, int lnetno)$/;"	f	typeref:typename:int
config_lrandom	dev/lamebus/lrandom.c	/^config_lrandom(struct lrandom_softc *lr, int lrandomno)$/;"	f	typeref:typename:int
config_lscreen	dev/lamebus/lscreen.c	/^config_lscreen(struct lscreen_softc *sc, int lscreenno)$/;"	f	typeref:typename:int
config_lser	dev/lamebus/lser.c	/^config_lser(struct lser_softc *sc, int lserno)$/;"	f	typeref:typename:int
config_ltimer	dev/lamebus/ltimer.c	/^config_ltimer(struct ltimer_softc *lt, int ltimerno)$/;"	f	typeref:typename:int
config_ltrace	dev/lamebus/ltrace.c	/^config_ltrace(struct ltrace_softc *sc, int ltraceno)$/;"	f	typeref:typename:int
config_random	dev/generic/random.c	/^config_random(struct random_softc *rs, int unit)$/;"	f	typeref:typename:int
config_rtclock	dev/generic/rtclock.c	/^config_rtclock(struct rtclock_softc *rtc, int unit)$/;"	f	typeref:typename:int
console_devops	dev/generic/console.c	/^static const struct device_ops console_devops = {$/;"	v	typeref:typename:const struct device_ops	file:
console_send	lib/kprintf.c	/^console_send(void *junk, const char *data, size_t len)$/;"	f	typeref:typename:void	file:
const_userptr_t	include/types.h	/^typedef const struct __userptr *const_userptr_t;$/;"	t	typeref:typename:const struct __userptr *
copycheck	vm/copyinout.c	/^copycheck(const_userptr_t userptr, size_t len, size_t *stoplen)$/;"	f	typeref:typename:int	file:
copyfail	vm/copyinout.c	/^copyfail(void)$/;"	f	typeref:typename:void	file:
copyin	vm/copyinout.c	/^copyin(const_userptr_t usersrc, void *dest, size_t len)$/;"	f	typeref:typename:int
copyinstr	vm/copyinout.c	/^copyinstr(const_userptr_t usersrc, char *dest, size_t len, size_t *actual)$/;"	f	typeref:typename:int
copyout	vm/copyinout.c	/^copyout(const void *src, userptr_t userdest, size_t len)$/;"	f	typeref:typename:int
copyoutstr	vm/copyinout.c	/^copyoutstr(const char *src, userptr_t userdest, size_t len, size_t *actual)$/;"	f	typeref:typename:int
copystr	vm/copyinout.c	/^copystr(char *dest, const char *src, size_t maxlen, size_t stoplen,$/;"	f	typeref:typename:int	file:
cpu	include/cpu.h	/^struct cpu {$/;"	s
cpu_create	thread/thread.c	/^cpu_create(unsigned hardware_number)$/;"	f	typeref:struct:cpu *
cpu_getfeatures	arch/mips/thread/cpu.c	/^cpu_getfeatures(void)$/;"	f	typeref:typename:uint32_t	file:
cpu_getifeatures	arch/mips/thread/cpu.c	/^cpu_getifeatures(void)$/;"	f	typeref:typename:uint32_t	file:
cpu_getprid	arch/mips/thread/cpu.c	/^cpu_getprid(void)$/;"	f	typeref:typename:uint32_t	file:
cpu_halt	arch/mips/thread/cpu.c	/^cpu_halt(void)$/;"	f	typeref:typename:void
cpu_hatch	thread/thread.c	/^cpu_hatch(unsigned software_number)$/;"	f	typeref:typename:void
cpu_identify	arch/mips/thread/cpu.c	/^cpu_identify(char *buf, size_t max)$/;"	f	typeref:typename:void
cpu_idle	arch/mips/thread/cpu.c	/^cpu_idle(void)$/;"	f	typeref:typename:void
cpu_irqoff	arch/mips/thread/cpu.c	/^cpu_irqoff(void)$/;"	f	typeref:typename:void
cpu_irqon	arch/mips/thread/cpu.c	/^cpu_irqon(void)$/;"	f	typeref:typename:void
cpu_irqonoff	arch/mips/thread/cpu.c	/^cpu_irqonoff(void)$/;"	f	typeref:typename:void	file:
cpu_machdep_init	arch/mips/thread/cpu.c	/^cpu_machdep_init(struct cpu *c)$/;"	f	typeref:typename:void
cpu_start_secondary	arch/sys161/main/start.S	/^cpu_start_secondary:$/;"	l
cpu_startup_sem	thread/thread.c	/^static struct semaphore *cpu_startup_sem;$/;"	v	typeref:struct:semaphore *	file:
cpustacks	arch/mips/thread/cpu.c	/^vaddr_t cpustacks[MAXCPUS];$/;"	v	typeref:typename:vaddr_t[]
cputhreads	arch/mips/thread/cpu.c	/^vaddr_t cputhreads[MAXCPUS];$/;"	v	typeref:typename:vaddr_t[]
createstress_thread	test/fstest.c	/^createstress_thread(void *fs, unsigned long num)$/;"	f	typeref:typename:void	file:
cs_devdata	dev/generic/console.h	/^	void *cs_devdata;$/;"	m	struct:con_softc	typeref:typename:void *
cs_gotchars	dev/generic/console.h	/^	unsigned char cs_gotchars[CONSOLE_INPUT_BUFFER_SIZE];$/;"	m	struct:con_softc	typeref:typename:unsigned char[]
cs_gotchars_head	dev/generic/console.h	/^	unsigned cs_gotchars_head;	\/* next slot to put a char in *\/$/;"	m	struct:con_softc	typeref:typename:unsigned
cs_gotchars_tail	dev/generic/console.h	/^	unsigned cs_gotchars_tail;	\/* next slot to take a char out *\/$/;"	m	struct:con_softc	typeref:typename:unsigned
cs_rsem	dev/generic/console.h	/^	struct semaphore *cs_rsem;$/;"	m	struct:con_softc	typeref:struct:semaphore *
cs_send	dev/generic/console.h	/^	void (*cs_send)(void *devdata, int ch);$/;"	m	struct:con_softc	typeref:typename:void (*)(void * devdata,int ch)
cs_sendpolled	dev/generic/console.h	/^	void (*cs_sendpolled)(void *devdata, int ch);$/;"	m	struct:con_softc	typeref:typename:void (*)(void * devdata,int ch)
cs_wsem	dev/generic/console.h	/^	struct semaphore *cs_wsem;$/;"	m	struct:con_softc	typeref:struct:semaphore *
curcpu	include/current.h	/^#define curcpu /;"	d
curproc	include/current.h	/^#define curproc /;"	d
curthread	include/current.h	/^#define curthread /;"	d
cv	include/synch.h	/^struct cv {$/;"	s
cv_broadcast	thread/synch.c	/^cv_broadcast(struct cv *cv, struct lock *lock)$/;"	f	typeref:typename:void
cv_create	thread/synch.c	/^cv_create(const char *name)$/;"	f	typeref:struct:cv *
cv_destroy	thread/synch.c	/^cv_destroy(struct cv *cv)$/;"	f	typeref:typename:void
cv_name	include/synch.h	/^        char *cv_name;$/;"	m	struct:cv	typeref:typename:char *
cv_signal	thread/synch.c	/^cv_signal(struct cv *cv, struct lock *lock)$/;"	f	typeref:typename:void
cv_wait	thread/synch.c	/^cv_wait(struct cv *cv, struct lock *lock)$/;"	f	typeref:typename:void
cvtest	test/synchtest.c	/^cvtest(int nargs, char **args)$/;"	f	typeref:typename:int
cvtest2	test/synchtest.c	/^cvtest2(int nargs, char **args)$/;"	f	typeref:typename:int
cvtestthread	test/synchtest.c	/^cvtestthread(void *junk, unsigned long num)$/;"	f	typeref:typename:void	file:
d_blocks	include/device.h	/^	blkcnt_t d_blocks;$/;"	m	struct:device	typeref:typename:blkcnt_t
d_blocksize	include/device.h	/^	blksize_t d_blocksize;$/;"	m	struct:device	typeref:typename:blksize_t
d_data	include/device.h	/^	void *d_data;		\/* device-specific data *\/$/;"	m	struct:device	typeref:typename:void *
d_devnumber	include/device.h	/^	dev_t d_devnumber;	\/* serial number for this device *\/$/;"	m	struct:device	typeref:typename:dev_t
d_ops	include/device.h	/^	const struct device_ops *d_ops;$/;"	m	struct:device	typeref:typename:const struct device_ops *
daddr_t	include/types.h	/^typedef __daddr_t daddr_t;$/;"	t	typeref:typename:__daddr_t
dbflags	lib/kprintf.c	/^uint32_t dbflags = 0;$/;"	v	typeref:typename:uint32_t
delayed_outbuf	dev/generic/console.c	/^static char delayed_outbuf[DELAYBUFSIZE];$/;"	v	typeref:typename:char[]	file:
delayed_outbuf_pos	dev/generic/console.c	/^static size_t delayed_outbuf_pos=0;$/;"	v	typeref:typename:size_t	file:
dev_create_vnode	vfs/device.c	/^dev_create_vnode(struct device *dev)$/;"	f	typeref:struct:vnode *
dev_eachopen	vfs/device.c	/^dev_eachopen(struct vnode *v, int flags)$/;"	f	typeref:typename:int	file:
dev_gettype	vfs/device.c	/^dev_gettype(struct vnode *v, mode_t *ret)$/;"	f	typeref:typename:int	file:
dev_ioctl	vfs/device.c	/^dev_ioctl(struct vnode *v, int op, userptr_t data)$/;"	f	typeref:typename:int	file:
dev_isseekable	vfs/device.c	/^dev_isseekable(struct vnode *v)$/;"	f	typeref:typename:bool	file:
dev_lookup	vfs/device.c	/^dev_lookup(struct vnode *dir,$/;"	f	typeref:typename:int	file:
dev_mmap	vfs/device.c	/^dev_mmap(struct vnode *v  \/* add stuff as needed *\/)$/;"	f	typeref:typename:int	file:
dev_namefile	vfs/device.c	/^dev_namefile(struct vnode *v, struct uio *uio)$/;"	f	typeref:typename:int	file:
dev_read	vfs/device.c	/^dev_read(struct vnode *v, struct uio *uio)$/;"	f	typeref:typename:int	file:
dev_reclaim	vfs/device.c	/^dev_reclaim(struct vnode *v)$/;"	f	typeref:typename:int	file:
dev_stat	vfs/device.c	/^dev_stat(struct vnode *v, struct stat *statbuf)$/;"	f	typeref:typename:int	file:
dev_t	include/types.h	/^typedef __dev_t dev_t;$/;"	t	typeref:typename:__dev_t
dev_truncate	vfs/device.c	/^dev_truncate(struct vnode *v, off_t len)$/;"	f	typeref:typename:int	file:
dev_tryseek	vfs/device.c	/^dev_tryseek(struct device *d, off_t pos)$/;"	f	typeref:typename:int	file:
dev_vnode_ops	vfs/device.c	/^static const struct vnode_ops dev_vnode_ops = {$/;"	v	typeref:typename:const struct vnode_ops	file:
dev_write	vfs/device.c	/^dev_write(struct vnode *v, struct uio *uio)$/;"	f	typeref:typename:int	file:
device	include/device.h	/^struct device {$/;"	s
device_ops	include/device.h	/^struct device_ops {$/;"	s
devnull_create	vfs/devnull.c	/^devnull_create(void)$/;"	f	typeref:typename:void
devop_eachopen	include/device.h	/^	int (*devop_eachopen)(struct device *, int flags_from_open);$/;"	m	struct:device_ops	typeref:typename:int (*)(struct device *,int flags_from_open)
devop_io	include/device.h	/^	int (*devop_io)(struct device *, struct uio *);$/;"	m	struct:device_ops	typeref:typename:int (*)(struct device *,struct uio *)
devop_ioctl	include/device.h	/^	int (*devop_ioctl)(struct device *, int op, userptr_t data);$/;"	m	struct:device_ops	typeref:typename:int (*)(struct device *,int op,userptr_t data)
docreatestress	test/fstest.c	/^docreatestress(const char *filesys)$/;"	f	typeref:typename:void	file:
dofstest	test/fstest.c	/^dofstest(const char *filesys)$/;"	f	typeref:typename:void	file:
doinclude	conf/config	/^    function doinclude(file,     lineno) {$/;"	f
dolongstress	test/fstest.c	/^dolongstress(const char *filesys)$/;"	f	typeref:typename:void	file:
donesem	test/synchtest.c	/^static struct semaphore *donesem;$/;"	v	typeref:struct:semaphore *	file:
donesem	test/tt3.c	/^static struct semaphore *donesem;$/;"	v	typeref:struct:semaphore *	file:
doreadstress	test/fstest.c	/^doreadstress(const char *filesys)$/;"	f	typeref:typename:void	file:
dowritestress	test/fstest.c	/^dowritestress(const char *filesys)$/;"	f	typeref:typename:void	file:
dowritestress2	test/fstest.c	/^dowritestress2(const char *filesys)$/;"	f	typeref:typename:void	file:
dump_subpage	vm/kmalloc.c	/^dump_subpage(struct pageref *pr, unsigned generation)$/;"	f	typeref:typename:void	file:
dump_subpages	vm/kmalloc.c	/^dump_subpages(unsigned generation)$/;"	f	typeref:typename:void	file:
e_busdata	dev/lamebus/emu.h	/^	void *e_busdata;$/;"	m	struct:emu_softc	typeref:typename:void *
e_buspos	dev/lamebus/emu.h	/^	uint32_t e_buspos;$/;"	m	struct:emu_softc	typeref:typename:uint32_t
e_ehsize	include/elf.h	/^	uint16_t	e_ehsize;          \/* actual size of file header *\/$/;"	m	struct:__anona52b83e50108	typeref:typename:uint16_t
e_entry	include/elf.h	/^	uint32_t	e_entry;           \/* address of program entry point *\/$/;"	m	struct:__anona52b83e50108	typeref:typename:uint32_t
e_flags	include/elf.h	/^	uint32_t	e_flags;	   \/* ignore *\/$/;"	m	struct:__anona52b83e50108	typeref:typename:uint32_t
e_ident	include/elf.h	/^	unsigned char	e_ident[ELF_NIDENT];   \/* magic number et al. *\/$/;"	m	struct:__anona52b83e50108	typeref:typename:unsigned char[]
e_iobuf	dev/lamebus/emu.h	/^	void *e_iobuf;$/;"	m	struct:emu_softc	typeref:typename:void *
e_lock	dev/lamebus/emu.h	/^	struct lock *e_lock;$/;"	m	struct:emu_softc	typeref:struct:lock *
e_machine	include/elf.h	/^	uint16_t	e_machine;             \/* processor type file is for *\/$/;"	m	struct:__anona52b83e50108	typeref:typename:uint16_t
e_phentsize	include/elf.h	/^	uint16_t	e_phentsize;       \/* actual size of phdr *\/$/;"	m	struct:__anona52b83e50108	typeref:typename:uint16_t
e_phnum	include/elf.h	/^	uint16_t	e_phnum;           \/* number of phdrs *\/$/;"	m	struct:__anona52b83e50108	typeref:typename:uint16_t
e_phoff	include/elf.h	/^	uint32_t	e_phoff;           \/* location in file of phdrs *\/$/;"	m	struct:__anona52b83e50108	typeref:typename:uint32_t
e_result	dev/lamebus/emu.h	/^	uint32_t e_result;$/;"	m	struct:emu_softc	typeref:typename:uint32_t
e_sem	dev/lamebus/emu.h	/^	struct semaphore *e_sem;$/;"	m	struct:emu_softc	typeref:struct:semaphore *
e_shentsize	include/elf.h	/^	uint16_t	e_shentsize;       \/* ignore *\/$/;"	m	struct:__anona52b83e50108	typeref:typename:uint16_t
e_shnum	include/elf.h	/^	uint16_t	e_shnum;           \/* ignore *\/$/;"	m	struct:__anona52b83e50108	typeref:typename:uint16_t
e_shoff	include/elf.h	/^	uint32_t	e_shoff;           \/* ignore *\/$/;"	m	struct:__anona52b83e50108	typeref:typename:uint32_t
e_shstrndx	include/elf.h	/^	uint16_t	e_shstrndx;        \/* ignore *\/$/;"	m	struct:__anona52b83e50108	typeref:typename:uint16_t
e_type	include/elf.h	/^	uint16_t	e_type;                \/* type of file this is *\/$/;"	m	struct:__anona52b83e50108	typeref:typename:uint16_t
e_unit	dev/lamebus/emu.h	/^	int e_unit;$/;"	m	struct:emu_softc	typeref:typename:int
e_version	include/elf.h	/^	uint32_t	e_version;             \/* ELF version *\/$/;"	m	struct:__anona52b83e50108	typeref:typename:uint32_t
ef_emu	include/emufs.h	/^	struct emu_softc *ef_emu;	\/* device *\/$/;"	m	struct:emufs_fs	typeref:struct:emu_softc *
ef_fs	include/emufs.h	/^	struct fs ef_fs;		\/* abstract filesystem structure *\/$/;"	m	struct:emufs_fs	typeref:struct:fs
ef_root	include/emufs.h	/^	struct emufs_vnode *ef_root;	\/* root vnode *\/$/;"	m	struct:emufs_fs	typeref:struct:emufs_vnode *
ef_vnodes	include/emufs.h	/^	struct vnodearray *ef_vnodes;	\/* table of loaded vnodes *\/$/;"	m	struct:emufs_fs	typeref:struct:vnodearray *
emu_close	dev/lamebus/emu.c	/^emu_close(struct emu_softc *sc, uint32_t handle)$/;"	f	typeref:typename:int	file:
emu_doread	dev/lamebus/emu.c	/^emu_doread(struct emu_softc *sc, uint32_t handle, uint32_t len,$/;"	f	typeref:typename:int	file:
emu_getsize	dev/lamebus/emu.c	/^emu_getsize(struct emu_softc *sc, uint32_t handle, off_t *retval)$/;"	f	typeref:typename:int	file:
emu_irq	dev/lamebus/emu.c	/^emu_irq(void *dev)$/;"	f	typeref:typename:void
emu_open	dev/lamebus/emu.c	/^emu_open(struct emu_softc *sc, uint32_t handle, const char *name,$/;"	f	typeref:typename:int	file:
emu_read	dev/lamebus/emu.c	/^emu_read(struct emu_softc *sc, uint32_t handle, uint32_t len,$/;"	f	typeref:typename:int	file:
emu_readdir	dev/lamebus/emu.c	/^emu_readdir(struct emu_softc *sc, uint32_t handle, uint32_t len,$/;"	f	typeref:typename:int	file:
emu_rreg	dev/lamebus/emu.c	/^emu_rreg(struct emu_softc *sc, uint32_t reg)$/;"	f	typeref:typename:uint32_t	file:
emu_softc	dev/lamebus/emu.h	/^struct emu_softc {$/;"	s
emu_trunc	dev/lamebus/emu.c	/^emu_trunc(struct emu_softc *sc, uint32_t handle, off_t len)$/;"	f	typeref:typename:int	file:
emu_waitdone	dev/lamebus/emu.c	/^emu_waitdone(struct emu_softc *sc)$/;"	f	typeref:typename:int	file:
emu_wreg	dev/lamebus/emu.c	/^emu_wreg(struct emu_softc *sc, uint32_t reg, uint32_t val)$/;"	f	typeref:typename:void	file:
emu_write	dev/lamebus/emu.c	/^emu_write(struct emu_softc *sc, uint32_t handle, uint32_t len,$/;"	f	typeref:typename:int	file:
emufs_addtovfs	dev/lamebus/emu.c	/^emufs_addtovfs(struct emu_softc *sc, const char *devname)$/;"	f	typeref:typename:int	file:
emufs_creat	dev/lamebus/emu.c	/^emufs_creat(struct vnode *dir, const char *name, bool excl, mode_t mode,$/;"	f	typeref:typename:int	file:
emufs_creat_notdir	dev/lamebus/emu.c	/^emufs_creat_notdir(struct vnode *v, const char *name, bool excl, mode_t mode,$/;"	f	typeref:typename:int	file:
emufs_dir_gettype	dev/lamebus/emu.c	/^emufs_dir_gettype(struct vnode *v, uint32_t *result)$/;"	f	typeref:typename:int	file:
emufs_dirops	dev/lamebus/emu.c	/^static const struct vnode_ops emufs_dirops = {$/;"	v	typeref:typename:const struct vnode_ops	file:
emufs_eachopen	dev/lamebus/emu.c	/^emufs_eachopen(struct vnode *v, int openflags)$/;"	f	typeref:typename:int	file:
emufs_eachopendir	dev/lamebus/emu.c	/^emufs_eachopendir(struct vnode *v, int openflags)$/;"	f	typeref:typename:int	file:
emufs_file_gettype	dev/lamebus/emu.c	/^emufs_file_gettype(struct vnode *v, uint32_t *result)$/;"	f	typeref:typename:int	file:
emufs_fileops	dev/lamebus/emu.c	/^static const struct vnode_ops emufs_fileops = {$/;"	v	typeref:typename:const struct vnode_ops	file:
emufs_fs	include/emufs.h	/^struct emufs_fs {$/;"	s
emufs_fsops	dev/lamebus/emu.c	/^static const struct fs_ops emufs_fsops = {$/;"	v	typeref:typename:const struct fs_ops	file:
emufs_fsync	dev/lamebus/emu.c	/^emufs_fsync(struct vnode *v)$/;"	f	typeref:typename:int	file:
emufs_getdirentry	dev/lamebus/emu.c	/^emufs_getdirentry(struct vnode *v, struct uio *uio)$/;"	f	typeref:typename:int	file:
emufs_getroot	dev/lamebus/emu.c	/^emufs_getroot(struct fs *fs)$/;"	f	typeref:struct:vnode *	file:
emufs_getvolname	dev/lamebus/emu.c	/^emufs_getvolname(struct fs *fs)$/;"	f	typeref:typename:const char *	file:
emufs_ioctl	dev/lamebus/emu.c	/^emufs_ioctl(struct vnode *v, int op, userptr_t data)$/;"	f	typeref:typename:int	file:
emufs_isseekable	dev/lamebus/emu.c	/^emufs_isseekable(struct vnode *v)$/;"	f	typeref:typename:bool	file:
emufs_link	dev/lamebus/emu.c	/^emufs_link(struct vnode *v, const char *name, struct vnode *target)$/;"	f	typeref:typename:int	file:
emufs_link_notdir	dev/lamebus/emu.c	/^emufs_link_notdir(struct vnode *v, const char *name, struct vnode *target)$/;"	f	typeref:typename:int	file:
emufs_loadvnode	dev/lamebus/emu.c	/^emufs_loadvnode(struct emufs_fs *ef, uint32_t handle, int isdir,$/;"	f	typeref:typename:int	file:
emufs_lookparent	dev/lamebus/emu.c	/^emufs_lookparent(struct vnode *dir, char *pathname, struct vnode **ret,$/;"	f	typeref:typename:int	file:
emufs_lookparent_notdir	dev/lamebus/emu.c	/^emufs_lookparent_notdir(struct vnode *v, char *pathname, struct vnode **result,$/;"	f	typeref:typename:int	file:
emufs_lookup	dev/lamebus/emu.c	/^emufs_lookup(struct vnode *dir, char *pathname, struct vnode **ret)$/;"	f	typeref:typename:int	file:
emufs_lookup_notdir	dev/lamebus/emu.c	/^emufs_lookup_notdir(struct vnode *v, char *pathname, struct vnode **result)$/;"	f	typeref:typename:int	file:
emufs_mkdir	dev/lamebus/emu.c	/^emufs_mkdir(struct vnode *v, const char *name, mode_t mode)$/;"	f	typeref:typename:int	file:
emufs_mkdir_notdir	dev/lamebus/emu.c	/^emufs_mkdir_notdir(struct vnode *v, const char *name, mode_t mode)$/;"	f	typeref:typename:int	file:
emufs_mmap	dev/lamebus/emu.c	/^emufs_mmap(struct vnode *v)$/;"	f	typeref:typename:int	file:
emufs_name_op_notdir	dev/lamebus/emu.c	/^emufs_name_op_notdir(struct vnode *v, const char *name)$/;"	f	typeref:typename:int	file:
emufs_namefile	dev/lamebus/emu.c	/^emufs_namefile(struct vnode *v, struct uio *uio)$/;"	f	typeref:typename:int	file:
emufs_read	dev/lamebus/emu.c	/^emufs_read(struct vnode *v, struct uio *uio)$/;"	f	typeref:typename:int	file:
emufs_readlink_notlink	dev/lamebus/emu.c	/^emufs_readlink_notlink(struct vnode *v, struct uio *uio)$/;"	f	typeref:typename:int	file:
emufs_reclaim	dev/lamebus/emu.c	/^emufs_reclaim(struct vnode *v)$/;"	f	typeref:typename:int	file:
emufs_remove	dev/lamebus/emu.c	/^emufs_remove(struct vnode *v, const char *name)$/;"	f	typeref:typename:int	file:
emufs_rename	dev/lamebus/emu.c	/^emufs_rename(struct vnode *v1, const char *n1,$/;"	f	typeref:typename:int	file:
emufs_rename_notdir	dev/lamebus/emu.c	/^emufs_rename_notdir(struct vnode *v1, const char *n1,$/;"	f	typeref:typename:int	file:
emufs_rmdir	dev/lamebus/emu.c	/^emufs_rmdir(struct vnode *v, const char *name)$/;"	f	typeref:typename:int	file:
emufs_stat	dev/lamebus/emu.c	/^emufs_stat(struct vnode *v, struct stat *statbuf)$/;"	f	typeref:typename:int	file:
emufs_symlink	dev/lamebus/emu.c	/^emufs_symlink(struct vnode *v, const char *contents, const char *name)$/;"	f	typeref:typename:int	file:
emufs_symlink_notdir	dev/lamebus/emu.c	/^emufs_symlink_notdir(struct vnode *v, const char *contents, const char *name)$/;"	f	typeref:typename:int	file:
emufs_sync	dev/lamebus/emu.c	/^emufs_sync(struct fs *fs)$/;"	f	typeref:typename:int	file:
emufs_truncate	dev/lamebus/emu.c	/^emufs_truncate(struct vnode *v, off_t len)$/;"	f	typeref:typename:int	file:
emufs_truncate_isdir	dev/lamebus/emu.c	/^emufs_truncate_isdir(struct vnode *v, off_t len)$/;"	f	typeref:typename:int	file:
emufs_uio_op_isdir	dev/lamebus/emu.c	/^emufs_uio_op_isdir(struct vnode *v, struct uio *uio)$/;"	f	typeref:typename:int	file:
emufs_uio_op_notdir	dev/lamebus/emu.c	/^emufs_uio_op_notdir(struct vnode *v, struct uio *uio)$/;"	f	typeref:typename:int	file:
emufs_unmount	dev/lamebus/emu.c	/^emufs_unmount(struct fs *fs)$/;"	f	typeref:typename:int	file:
emufs_vnode	include/emufs.h	/^struct emufs_vnode {$/;"	s
emufs_void_op_isdir	dev/lamebus/emu.c	/^emufs_void_op_isdir(struct vnode *v)$/;"	f	typeref:typename:int	file:
emufs_write	dev/lamebus/emu.c	/^emufs_write(struct vnode *v, struct uio *uio)$/;"	f	typeref:typename:int	file:
enter_forked_process	arch/mips/syscall/syscall.c	/^enter_forked_process(struct trapframe *tf)$/;"	f	typeref:typename:void
enter_new_process	arch/mips/locore/trap.c	/^enter_new_process(int argc, userptr_t argv, userptr_t env,$/;"	f	typeref:typename:void
establishguardband	vm/kmalloc.c	/^establishguardband(void *block, size_t clientsize, size_t blocksize)$/;"	f	typeref:typename:void *	file:
establishlabel	vm/kmalloc.c	/^establishlabel(void *block, vaddr_t label)$/;"	f	typeref:typename:void *	file:
ev_emu	include/emufs.h	/^	struct emu_softc *ev_emu;	\/* device *\/$/;"	m	struct:emufs_vnode	typeref:struct:emu_softc *
ev_handle	include/emufs.h	/^	uint32_t ev_handle;		\/* file handle *\/$/;"	m	struct:emufs_vnode	typeref:typename:uint32_t
ev_v	include/emufs.h	/^	struct vnode ev_v;		\/* abstract vnode structure *\/$/;"	m	struct:emufs_vnode	typeref:struct:vnode
exception_return	arch/mips/locore/exception-mips1.S	/^exception_return:$/;"	l
exitsem	test/synchtest.c	/^static struct semaphore *exitsem;$/;"	v	typeref:struct:semaphore *	file:
exorcise	thread/thread.c	/^exorcise(void)$/;"	f	typeref:typename:void	file:
fail	test/synchtest.c	/^fail(unsigned long num, const char *msg)$/;"	f	typeref:typename:void	file:
fakethread_create	test/threadlisttest.c	/^fakethread_create(const char *name)$/;"	f	typeref:struct:thread *	file:
fakethread_destroy	test/threadlisttest.c	/^fakethread_destroy(struct thread *t)$/;"	f	typeref:typename:void	file:
fakethreads	test/threadlisttest.c	/^static struct thread *fakethreads[NUMNAMES];$/;"	v	typeref:struct:thread * []	file:
false	include/types.h	/^#define false /;"	d
fill_deadbeef	vm/kmalloc.c	/^fill_deadbeef(void *vptr, size_t len)$/;"	f	typeref:typename:void	file:
findmount	vfs/vfslist.c	/^findmount(const char *devname, struct knowndev **result)$/;"	f	typeref:typename:int	file:
finish	test/tt3.c	/^finish(int howmanytotal)$/;"	f	typeref:typename:void	file:
firstfree	arch/mips/vm/ram.c	/^vaddr_t firstfree;   \/* first free virtual address; set by start.S *\/$/;"	v	typeref:typename:vaddr_t
firstpaddr	arch/mips/vm/ram.c	/^static paddr_t firstpaddr;  \/* address of first free physical page *\/$/;"	v	typeref:typename:paddr_t	file:
flock	include/kern/fcntl.h	/^struct flock {$/;"	s
flush_delay_buf	dev/generic/console.c	/^flush_delay_buf(void)$/;"	f	typeref:typename:void	file:
free_kpages	arch/mips/vm/dumbvm.c	/^free_kpages(vaddr_t addr)$/;"	f	typeref:typename:void
freelist	vm/kmalloc.c	/^struct freelist {$/;"	s	file:
freelist_offset	vm/kmalloc.c	/^	uint16_t freelist_offset;$/;"	m	struct:pageref	typeref:typename:uint16_t	file:
freepageref	vm/kmalloc.c	/^freepageref(struct pageref *p)$/;"	f	typeref:typename:void	file:
fs	include/fs.h	/^struct fs {$/;"	s
fs_data	include/fs.h	/^	void *fs_data;$/;"	m	struct:fs	typeref:typename:void *
fs_ops	include/fs.h	/^	const struct fs_ops *fs_ops;$/;"	m	struct:fs	typeref:typename:const struct fs_ops *
fs_ops	include/fs.h	/^struct fs_ops {$/;"	s
fsid_t	include/types.h	/^typedef __fsid_t fsid_t;$/;"	t	typeref:typename:__fsid_t
fsop_getroot	include/fs.h	/^	struct vnode *(*fsop_getroot)(struct fs *);$/;"	m	struct:fs_ops	typeref:struct:vnode * (*)(struct fs *)
fsop_getvolname	include/fs.h	/^	const char   *(*fsop_getvolname)(struct fs *);$/;"	m	struct:fs_ops	typeref:typename:const char * (*)(struct fs *)
fsop_sync	include/fs.h	/^	int           (*fsop_sync)(struct fs *);$/;"	m	struct:fs_ops	typeref:typename:int (*)(struct fs *)
fsop_unmount	include/fs.h	/^	int           (*fsop_unmount)(struct fs *);$/;"	m	struct:fs_ops	typeref:typename:int (*)(struct fs *)
fstest_makename	test/fstest.c	/^fstest_makename(char *buf, size_t buflen,$/;"	f	typeref:typename:void	file:
fstest_read	test/fstest.c	/^fstest_read(const char *fs, const char *namesuffix)$/;"	f	typeref:typename:int	file:
fstest_remove	test/fstest.c	/^fstest_remove(const char *fs, const char *namesuffix)$/;"	f	typeref:typename:int	file:
fstest_write	test/fstest.c	/^fstest_write(const char *fs, const char *namesuffix,$/;"	f	typeref:typename:int	file:
func	main/menu.c	/^	int (*func)(const char *device);$/;"	m	struct:__anonaecd2cbf0108	typeref:typename:int (*)(const char * device)	file:
func	main/menu.c	/^	int (*func)(int nargs, char **args);$/;"	m	struct:__anonaecd2cbf0208	typeref:typename:int (*)(int nargs,char ** args)	file:
gatesem	test/synchtest.c	/^static struct semaphore *gatesem;$/;"	v	typeref:struct:semaphore *	file:
generation	vm/kmalloc.c	/^	unsigned generation;$/;"	m	struct:malloclabel	typeref:typename:unsigned	file:
genprobe	conf/config	/^    function genprobe(dev, devunit, bus, busunit) {$/;"	f
getbase	conf/config	/^    function getbase(invalmsg, d,       base) {$/;"	f
getch	dev/generic/console.c	/^getch(void)$/;"	f	typeref:typename:int
getch_intr	dev/generic/console.c	/^getch_intr(struct con_softc *cs)$/;"	f	typeref:typename:int	file:
getdevice	vfs/vfslookup.c	/^getdevice(char *path, char **subpath, struct vnode **startvn)$/;"	f	typeref:typename:int	file:
getppages	arch/mips/vm/dumbvm.c	/^getppages(unsigned long npages)$/;"	f	typeref:typename:paddr_t	file:
gettime	dev/generic/rtclock.c	/^gettime(struct timespec *ts)$/;"	f	typeref:typename:void
getunit	conf/config	/^    function getunit(invalmsg, d,       u, tmp) {$/;"	f
gid_t	include/types.h	/^typedef __gid_t gid_t;$/;"	t	typeref:typename:__gid_t
gp	arch/mips/include/kern/regdefs.h	/^#define gp /;"	d
gp	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define gp /;"	d
gp	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define gp /;"	d
gp	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define gp /;"	d
gp	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define gp /;"	d
hardclock	thread/clock.c	/^hardclock(void)$/;"	f	typeref:typename:void
hardclock_bootstrap	thread/clock.c	/^hardclock_bootstrap(void)$/;"	f	typeref:typename:void
harvard_copyright	main/main.c	/^static const char harvard_copyright[] =$/;"	v	typeref:typename:const char[]	file:
havetimerclock	dev/lamebus/ltimer.c	/^static bool havetimerclock;$/;"	v	typeref:typename:bool	file:
in_addr_t	include/types.h	/^typedef __in_addr_t in_addr_t;$/;"	t	typeref:typename:__in_addr_t
in_port_t	include/types.h	/^typedef __in_port_t in_port_t;$/;"	t	typeref:typename:__in_port_t
init_sem	test/threadtest.c	/^init_sem(void)$/;"	f	typeref:typename:void	file:
init_threadsem	test/fstest.c	/^init_threadsem(void)$/;"	f	typeref:typename:void	file:
inititems	test/synchtest.c	/^inititems(void)$/;"	f	typeref:typename:void	file:
ino_t	include/types.h	/^typedef __ino_t ino_t;$/;"	t	typeref:typename:__ino_t
int16_t	include/types.h	/^typedef __i16 int16_t;$/;"	t	typeref:typename:__i16
int32_t	include/types.h	/^typedef __i32 int32_t;$/;"	t	typeref:typename:__i32
int64_t	include/types.h	/^typedef __i64 int64_t;$/;"	t	typeref:typename:__i64
int8_t	include/types.h	/^typedef __i8 int8_t;$/;"	t	typeref:typename:__i8
interprocessor_interrupt	thread/thread.c	/^interprocessor_interrupt(void)$/;"	f	typeref:typename:void
intptr_t	include/types.h	/^typedef __intptr_t intptr_t;$/;"	t	typeref:typename:__intptr_t
iov_kbase	include/kern/iovec.h	/^                void      *iov_kbase;	\/* kernel-supplied pointer *\/$/;"	m	union:iovec::__anona0db55a3010a	typeref:typename:void *
iov_len	include/kern/iovec.h	/^        size_t iov_len;			\/* Length of data *\/$/;"	m	struct:iovec	typeref:typename:size_t
iov_ubase	include/kern/iovec.h	/^                userptr_t  iov_ubase;	\/* user-supplied pointer *\/$/;"	m	union:iovec::__anona0db55a3010a	typeref:typename:userptr_t
iovec	include/kern/iovec.h	/^struct iovec {$/;"	s
ipi_broadcast	thread/thread.c	/^ipi_broadcast(int code)$/;"	f	typeref:typename:void
ipi_send	thread/thread.c	/^ipi_send(struct cpu *target, int code)$/;"	f	typeref:typename:void
ipi_tlbshootdown	thread/thread.c	/^ipi_tlbshootdown(struct cpu *target, const struct tlbshootdown *mapping)$/;"	f	typeref:typename:void
it_interval	include/kern/time.h	/^        struct timeval it_interval;	\/* Time to reload after expiry. *\/$/;"	m	struct:itimerval	typeref:struct:timeval
it_value	include/kern/time.h	/^	struct timeval it_value;	\/* Time to count. *\/$/;"	m	struct:itimerval	typeref:struct:timeval
itimerval	include/kern/time.h	/^struct itimerval {$/;"	s
jmp_buf	arch/mips/include/kern/setjmp.h	/^typedef uint32_t jmp_buf[__JB_REGS];$/;"	t	typeref:typename:uint32_t[__JB_REGS]
jmp_buf	compile/DUMBVM/includelinks/kern/machine/setjmp.h	/^typedef uint32_t jmp_buf[__JB_REGS];$/;"	t	typeref:typename:uint32_t[__JB_REGS]
jmp_buf	compile/DUMBVM/includelinks/kern/mips/setjmp.h	/^typedef uint32_t jmp_buf[__JB_REGS];$/;"	t	typeref:typename:uint32_t[__JB_REGS]
jmp_buf	compile/DUMBVM/includelinks/machine/kern/setjmp.h	/^typedef uint32_t jmp_buf[__JB_REGS];$/;"	t	typeref:typename:uint32_t[__JB_REGS]
jmp_buf	compile/DUMBVM/includelinks/mips/kern/setjmp.h	/^typedef uint32_t jmp_buf[__JB_REGS];$/;"	t	typeref:typename:uint32_t[__JB_REGS]
join32to64	lib/bswap.c	/^join32to64(uint32_t x1, uint32_t x2, uint64_t *y2)$/;"	f
k0	arch/mips/include/kern/regdefs.h	/^#define k0 /;"	d
k0	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define k0 /;"	d
k0	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define k0 /;"	d
k0	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define k0 /;"	d
k0	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define k0 /;"	d
k1	arch/mips/include/kern/regdefs.h	/^#define k1 /;"	d
k1	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define k1 /;"	d
k1	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define k1 /;"	d
k1	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define k1 /;"	d
k1	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define k1 /;"	d
kd_device	vfs/vfslist.c	/^	struct device *kd_device;$/;"	m	struct:knowndev	typeref:struct:device *	file:
kd_fs	vfs/vfslist.c	/^	struct fs *kd_fs;$/;"	m	struct:knowndev	typeref:struct:fs *	file:
kd_name	vfs/vfslist.c	/^	char *kd_name;$/;"	m	struct:knowndev	typeref:typename:char *	file:
kd_rawname	vfs/vfslist.c	/^	char *kd_rawname;$/;"	m	struct:knowndev	typeref:typename:char *	file:
kd_vnode	vfs/vfslist.c	/^	struct vnode *kd_vnode;$/;"	m	struct:knowndev	typeref:struct:vnode *	file:
kfree	vm/kmalloc.c	/^kfree(void *ptr)$/;"	f	typeref:typename:void
kgets	lib/kgets.c	/^kgets(char *buf, size_t maxlen)$/;"	f	typeref:typename:void
kheap_dump	vm/kmalloc.c	/^kheap_dump(void)$/;"	f	typeref:typename:void
kheap_dumpall	vm/kmalloc.c	/^kheap_dumpall(void)$/;"	f	typeref:typename:void
kheap_nextgeneration	vm/kmalloc.c	/^kheap_nextgeneration(void)$/;"	f	typeref:typename:void
kheap_printstats	vm/kmalloc.c	/^kheap_printstats(void)$/;"	f	typeref:typename:void
kheap_root	vm/kmalloc.c	/^struct kheap_root {$/;"	s	file:
kheaproots	vm/kmalloc.c	/^static struct kheap_root kheaproots[NUM_PAGEREFPAGES];$/;"	v	typeref:struct:kheap_root[]	file:
kill_curthread	arch/mips/locore/trap.c	/^kill_curthread(vaddr_t epc, unsigned code, vaddr_t vaddr)$/;"	f	typeref:typename:void	file:
kmain	main/main.c	/^kmain(char *arguments)$/;"	f	typeref:typename:void
kmalloc	vm/kmalloc.c	/^kmalloc(size_t sz)$/;"	f	typeref:typename:void *
kmalloc_spinlock	vm/kmalloc.c	/^static struct spinlock kmalloc_spinlock = SPINLOCK_INITIALIZER;$/;"	v	typeref:struct:spinlock	file:
kmallocstress	test/kmalloctest.c	/^kmallocstress(int nargs, char **args)$/;"	f	typeref:typename:int
kmalloctest	test/kmalloctest.c	/^kmalloctest(int nargs, char **args)$/;"	f	typeref:typename:int
kmalloctest3	test/kmalloctest.c	/^kmalloctest3(int nargs, char **args)$/;"	f	typeref:typename:int
kmalloctest4	test/kmalloctest.c	/^kmalloctest4(int nargs, char **args)$/;"	f	typeref:typename:int
kmalloctest4thread	test/kmalloctest.c	/^kmalloctest4thread(void *sm, unsigned long num)$/;"	f	typeref:typename:void	file:
kmallocthread	test/kmalloctest.c	/^kmallocthread(void *sm, unsigned long num)$/;"	f	typeref:typename:void	file:
knowndev	vfs/vfslist.c	/^struct knowndev {$/;"	s	file:
knowndevs	vfs/vfslist.c	/^static struct knowndevarray *knowndevs;$/;"	v	typeref:struct:knowndevarray *	file:
kprintf	lib/kprintf.c	/^kprintf(const char *fmt, ...)$/;"	f	typeref:typename:int
kprintf_bootstrap	lib/kprintf.c	/^kprintf_bootstrap(void)$/;"	f	typeref:typename:void
kprintf_lock	lib/kprintf.c	/^static struct lock *kprintf_lock;$/;"	v	typeref:struct:lock *	file:
kprintf_spinlock	lib/kprintf.c	/^static struct spinlock kprintf_spinlock;$/;"	v	typeref:struct:spinlock	file:
kproc	proc/proc.c	/^struct proc *kproc;$/;"	v	typeref:struct:proc *
kstrdup	lib/misc.c	/^kstrdup(const char *s)$/;"	f	typeref:typename:char *
l_len	include/kern/fcntl.h	/^	off_t l_len;            \/* length of locked region *\/$/;"	m	struct:flock	typeref:typename:off_t
l_pid	include/kern/fcntl.h	/^	pid_t l_pid;            \/* process that holds the lock *\/$/;"	m	struct:flock	typeref:typename:pid_t
l_start	include/kern/fcntl.h	/^	off_t l_start;          \/* place in file *\/$/;"	m	struct:flock	typeref:typename:off_t
l_type	include/kern/fcntl.h	/^	int l_type;             \/* F_RDLCK or F_WRLCK *\/$/;"	m	struct:flock	typeref:typename:int
l_whence	include/kern/fcntl.h	/^	int l_whence;           \/* SEEK_SET, SEEK_CUR, or SEEK_END *\/$/;"	m	struct:flock	typeref:typename:int
label	vm/kmalloc.c	/^	vaddr_t label;$/;"	m	struct:malloclabel	typeref:typename:vaddr_t	file:
lamebus	arch/sys161/dev/lamebus_machdep.c	/^static struct lamebus_softc *lamebus;$/;"	v	typeref:struct:lamebus_softc *	file:
lamebus_assert_ipi	dev/lamebus/lamebus.c	/^lamebus_assert_ipi(struct lamebus_softc *lamebus, struct cpu *target)$/;"	f	typeref:typename:void
lamebus_attach_interrupt	dev/lamebus/lamebus.c	/^lamebus_attach_interrupt(struct lamebus_softc *sc, int slot,$/;"	f	typeref:typename:void
lamebus_clear_ipi	dev/lamebus/lamebus.c	/^lamebus_clear_ipi(struct lamebus_softc *lamebus, struct cpu *target)$/;"	f	typeref:typename:void
lamebus_detach_interrupt	dev/lamebus/lamebus.c	/^lamebus_detach_interrupt(struct lamebus_softc *sc, int slot)$/;"	f	typeref:typename:void
lamebus_find_cpus	dev/lamebus/lamebus.c	/^lamebus_find_cpus(struct lamebus_softc *lamebus)$/;"	f	typeref:typename:void
lamebus_init	dev/lamebus/lamebus.c	/^lamebus_init(void)$/;"	f	typeref:struct:lamebus_softc *
lamebus_interrupt	dev/lamebus/lamebus.c	/^lamebus_interrupt(struct lamebus_softc *lamebus)$/;"	f	typeref:typename:void
lamebus_map_area	arch/sys161/dev/lamebus_machdep.c	/^lamebus_map_area(struct lamebus_softc *bus, int slot, uint32_t offset)$/;"	f	typeref:typename:void *
lamebus_mark	dev/lamebus/lamebus.c	/^lamebus_mark(struct lamebus_softc *sc, int slot)$/;"	f	typeref:typename:void
lamebus_mask_interrupt	dev/lamebus/lamebus.c	/^lamebus_mask_interrupt(struct lamebus_softc *lamebus, int slot)$/;"	f	typeref:typename:void
lamebus_poweroff	dev/lamebus/lamebus.c	/^lamebus_poweroff(struct lamebus_softc *lamebus)$/;"	f	typeref:typename:void
lamebus_probe	dev/lamebus/lamebus.c	/^lamebus_probe(struct lamebus_softc *sc,$/;"	f	typeref:typename:int
lamebus_ramsize	dev/lamebus/lamebus.c	/^lamebus_ramsize(void)$/;"	f	typeref:typename:uint32_t
lamebus_read_register	arch/sys161/dev/lamebus_machdep.c	/^lamebus_read_register(struct lamebus_softc *bus, int slot, uint32_t offset)$/;"	f	typeref:typename:uint32_t
lamebus_softc	dev/lamebus/lamebus.h	/^struct lamebus_softc {$/;"	s
lamebus_start_cpus	dev/lamebus/lamebus.c	/^lamebus_start_cpus(struct lamebus_softc *lamebus)$/;"	f	typeref:typename:void
lamebus_unmark	dev/lamebus/lamebus.c	/^lamebus_unmark(struct lamebus_softc *sc, int slot)$/;"	f	typeref:typename:void
lamebus_unmask_interrupt	dev/lamebus/lamebus.c	/^lamebus_unmask_interrupt(struct lamebus_softc *lamebus, int slot)$/;"	f	typeref:typename:void
lamebus_write_register	arch/sys161/dev/lamebus_machdep.c	/^lamebus_write_register(struct lamebus_softc *bus, int slot,$/;"	f	typeref:typename:void
lastpaddr	arch/mips/vm/ram.c	/^static paddr_t lastpaddr;   \/* one past end of last free physical page *\/$/;"	v	typeref:typename:paddr_t	file:
lb_irqfunc	dev/lamebus/lamebus.h	/^typedef void (*lb_irqfunc)(void *devdata);$/;"	t	typeref:typename:void (*)(void * devdata)
lbolt	thread/clock.c	/^static struct wchan *lbolt;$/;"	v	typeref:struct:wchan *	file:
lbolt_lock	thread/clock.c	/^static struct spinlock lbolt_lock;$/;"	v	typeref:struct:spinlock	file:
lh_buf	dev/lamebus/lhd.h	/^	void *lh_buf;			\/* Pointer to on-card I\/O buffer *\/$/;"	m	struct:lhd_softc	typeref:typename:void *
lh_busdata	dev/lamebus/lhd.h	/^	void *lh_busdata;		\/* The bus we're on *\/$/;"	m	struct:lhd_softc	typeref:typename:void *
lh_buspos	dev/lamebus/lhd.h	/^	uint32_t lh_buspos;		\/* Our slot on that bus *\/$/;"	m	struct:lhd_softc	typeref:typename:uint32_t
lh_clear	dev/lamebus/lhd.h	/^	struct semaphore *lh_clear;	\/* Synchronization *\/$/;"	m	struct:lhd_softc	typeref:struct:semaphore *
lh_dev	dev/lamebus/lhd.h	/^	struct device lh_dev;		\/* VFS device structure *\/$/;"	m	struct:lhd_softc	typeref:struct:device
lh_done	dev/lamebus/lhd.h	/^	struct semaphore *lh_done;$/;"	m	struct:lhd_softc	typeref:struct:semaphore *
lh_result	dev/lamebus/lhd.h	/^	int lh_result;			\/* Result from I\/O operation *\/$/;"	m	struct:lhd_softc	typeref:typename:int
lh_unit	dev/lamebus/lhd.h	/^	int lh_unit;			\/* What number lhd we are *\/$/;"	m	struct:lhd_softc	typeref:typename:int
lhd_code_to_errno	dev/lamebus/lhd.c	/^int lhd_code_to_errno(struct lhd_softc *lh, int code)$/;"	f	typeref:typename:int	file:
lhd_devops	dev/lamebus/lhd.c	/^static const struct device_ops lhd_devops = {$/;"	v	typeref:typename:const struct device_ops	file:
lhd_eachopen	dev/lamebus/lhd.c	/^lhd_eachopen(struct device *d, int openflags)$/;"	f	typeref:typename:int	file:
lhd_io	dev/lamebus/lhd.c	/^lhd_io(struct device *d, struct uio *uio)$/;"	f	typeref:typename:int	file:
lhd_ioctl	dev/lamebus/lhd.c	/^lhd_ioctl(struct device *d, int op, userptr_t data)$/;"	f	typeref:typename:int	file:
lhd_iodone	dev/lamebus/lhd.c	/^lhd_iodone(struct lhd_softc *lh, int err)$/;"	f	typeref:typename:void	file:
lhd_irq	dev/lamebus/lhd.c	/^lhd_irq(void *vlh)$/;"	f	typeref:typename:void
lhd_rdreg	dev/lamebus/lhd.c	/^uint32_t lhd_rdreg(struct lhd_softc *lh, uint32_t reg)$/;"	f	typeref:typename:uint32_t	file:
lhd_softc	dev/lamebus/lhd.h	/^struct lhd_softc {$/;"	s
lhd_wreg	dev/lamebus/lhd.c	/^void lhd_wreg(struct lhd_softc *lh, uint32_t reg, uint32_t val)$/;"	f	typeref:typename:void	file:
lk_name	include/synch.h	/^        char *lk_name;$/;"	m	struct:lock	typeref:typename:char *
load_elf	syscall/loadelf.c	/^load_elf(struct vnode *v, vaddr_t *entrypoint)$/;"	f	typeref:typename:int
load_segment	syscall/loadelf.c	/^load_segment(struct addrspace *as, struct vnode *v,$/;"	f	typeref:typename:int	file:
lock	include/synch.h	/^struct lock {$/;"	s
lock_acquire	thread/synch.c	/^lock_acquire(struct lock *lock)$/;"	f	typeref:typename:void
lock_create	thread/synch.c	/^lock_create(const char *name)$/;"	f	typeref:struct:lock *
lock_destroy	thread/synch.c	/^lock_destroy(struct lock *lock)$/;"	f	typeref:typename:void
lock_do_i_hold	thread/synch.c	/^lock_do_i_hold(struct lock *lock)$/;"	f	typeref:typename:bool
lock_release	thread/synch.c	/^lock_release(struct lock *lock)$/;"	f	typeref:typename:void
locktest	test/synchtest.c	/^locktest(int nargs, char **args)$/;"	f	typeref:typename:int
locktestthread	test/synchtest.c	/^locktestthread(void *junk, unsigned long num)$/;"	f	typeref:typename:void	file:
longstress_thread	test/fstest.c	/^longstress_thread(void *fs, unsigned long num)$/;"	f	typeref:typename:void	file:
loudthread	test/threadtest.c	/^loudthread(void *junk, unsigned long num)$/;"	f	typeref:typename:void	file:
lr_bus	dev/lamebus/lrandom.h	/^	void *lr_bus;$/;"	m	struct:lrandom_softc	typeref:typename:void *
lr_buspos	dev/lamebus/lrandom.h	/^	uint32_t lr_buspos;$/;"	m	struct:lrandom_softc	typeref:typename:uint32_t
lrandom_randmax	dev/lamebus/lrandom.c	/^lrandom_randmax(void *devdata)$/;"	f	typeref:typename:uint32_t
lrandom_random	dev/lamebus/lrandom.c	/^lrandom_random(void *devdata)$/;"	f	typeref:typename:uint32_t
lrandom_read	dev/lamebus/lrandom.c	/^lrandom_read(void *devdata, struct uio *uio)$/;"	f	typeref:typename:int
lrandom_softc	dev/lamebus/lrandom.h	/^struct lrandom_softc {$/;"	s
ls_busdata	dev/lamebus/lscreen.h	/^	void *ls_busdata;		\/\/ bus we're on$/;"	m	struct:lscreen_softc	typeref:typename:void *
ls_busdata	dev/lamebus/lser.h	/^	void *ls_busdata;$/;"	m	struct:lser_softc	typeref:typename:void *
ls_buspos	dev/lamebus/lscreen.h	/^	uint32_t ls_buspos;		\/\/ position on that bus$/;"	m	struct:lscreen_softc	typeref:typename:uint32_t
ls_buspos	dev/lamebus/lser.h	/^	uint32_t ls_buspos;$/;"	m	struct:lser_softc	typeref:typename:uint32_t
ls_cx	dev/lamebus/lscreen.h	/^	unsigned ls_cx, ls_cy;        \/\/ cursor position$/;"	m	struct:lscreen_softc	typeref:typename:unsigned
ls_cy	dev/lamebus/lscreen.h	/^	unsigned ls_cx, ls_cy;        \/\/ cursor position$/;"	m	struct:lscreen_softc	typeref:typename:unsigned
ls_devdata	dev/lamebus/lamebus.h	/^	void        *ls_devdata[LB_NSLOTS];$/;"	m	struct:lamebus_softc	typeref:typename:void * []
ls_devdata	dev/lamebus/lscreen.h	/^	void *ls_devdata;			\/\/ data and functions for$/;"	m	struct:lscreen_softc	typeref:typename:void *
ls_devdata	dev/lamebus/lser.h	/^	void *ls_devdata;$/;"	m	struct:lser_softc	typeref:typename:void *
ls_height	dev/lamebus/lscreen.h	/^	unsigned ls_width, ls_height; \/\/ screen size$/;"	m	struct:lscreen_softc	typeref:typename:unsigned
ls_input	dev/lamebus/lscreen.h	/^	void (*ls_input)(void *devdata, int ch); \/\/ console)$/;"	m	struct:lscreen_softc	typeref:typename:void (*)(void * devdata,int ch)
ls_input	dev/lamebus/lser.h	/^	void (*ls_input)(void *devdata, int ch);$/;"	m	struct:lser_softc	typeref:typename:void (*)(void * devdata,int ch)
ls_irqfuncs	dev/lamebus/lamebus.h	/^	lb_irqfunc   ls_irqfuncs[LB_NSLOTS];$/;"	m	struct:lamebus_softc	typeref:typename:lb_irqfunc[]
ls_lock	dev/lamebus/lamebus.h	/^	struct spinlock ls_lock;$/;"	m	struct:lamebus_softc	typeref:struct:spinlock
ls_lock	dev/lamebus/lscreen.h	/^	struct spinlock ls_lock;      \/\/ protects data and device regs$/;"	m	struct:lscreen_softc	typeref:struct:spinlock
ls_lock	dev/lamebus/lser.h	/^	struct spinlock ls_lock;    \/* protects ls_wbusy and device regs *\/$/;"	m	struct:lser_softc	typeref:struct:spinlock
ls_screen	dev/lamebus/lscreen.h	/^	char *ls_screen;              \/\/ memory-mapped screen buffer$/;"	m	struct:lscreen_softc	typeref:typename:char *
ls_slotsinuse	dev/lamebus/lamebus.h	/^	uint32_t     ls_slotsinuse;$/;"	m	struct:lamebus_softc	typeref:typename:uint32_t
ls_start	dev/lamebus/lscreen.h	/^	void (*ls_start)(void *devdata);	\/\/ upper device (perhaps$/;"	m	struct:lscreen_softc	typeref:typename:void (*)(void * devdata)
ls_start	dev/lamebus/lser.h	/^	void (*ls_start)(void *devdata);$/;"	m	struct:lser_softc	typeref:typename:void (*)(void * devdata)
ls_uniprocessor	dev/lamebus/lamebus.h	/^	unsigned     ls_uniprocessor;$/;"	m	struct:lamebus_softc	typeref:typename:unsigned
ls_wbusy	dev/lamebus/lser.h	/^	volatile bool ls_wbusy;     \/* true if write in progress *\/$/;"	m	struct:lser_softc	typeref:typename:volatile bool
ls_width	dev/lamebus/lscreen.h	/^	unsigned ls_width, ls_height; \/\/ screen size$/;"	m	struct:lscreen_softc	typeref:typename:unsigned
lscreen_char	dev/lamebus/lscreen.c	/^lscreen_char(struct lscreen_softc *sc, int ch)$/;"	f	typeref:typename:void	file:
lscreen_irq	dev/lamebus/lscreen.c	/^lscreen_irq(void *vsc)$/;"	f	typeref:typename:void
lscreen_newline	dev/lamebus/lscreen.c	/^lscreen_newline(struct lscreen_softc *sc)$/;"	f	typeref:typename:void	file:
lscreen_softc	dev/lamebus/lscreen.h	/^struct lscreen_softc {$/;"	s
lscreen_write	dev/lamebus/lscreen.c	/^lscreen_write(void *vsc, int ch)$/;"	f	typeref:typename:void
lser_irq	dev/lamebus/lser.c	/^lser_irq(void *vsc)$/;"	f	typeref:typename:void
lser_poll_until_write	dev/lamebus/lser.c	/^lser_poll_until_write(struct lser_softc *sc)$/;"	f	typeref:typename:void	file:
lser_softc	dev/lamebus/lser.h	/^struct lser_softc {$/;"	s
lser_write	dev/lamebus/lser.c	/^lser_write(void *vls, int ch)$/;"	f	typeref:typename:void
lser_writepolled	dev/lamebus/lser.c	/^lser_writepolled(void *vsc, int ch)$/;"	f	typeref:typename:void
lt_bus	dev/lamebus/ltimer.h	/^	void *lt_bus;		\/* bus we're on *\/$/;"	m	struct:ltimer_softc	typeref:typename:void *
lt_busdata	dev/lamebus/ltrace.h	/^	void *lt_busdata;$/;"	m	struct:ltrace_softc	typeref:typename:void *
lt_buspos	dev/lamebus/ltimer.h	/^	uint32_t lt_buspos;	\/* position (slot) on that bus *\/$/;"	m	struct:ltimer_softc	typeref:typename:uint32_t
lt_buspos	dev/lamebus/ltrace.h	/^	uint32_t lt_buspos;$/;"	m	struct:ltrace_softc	typeref:typename:uint32_t
lt_hardclock	dev/lamebus/ltimer.h	/^	int lt_hardclock;        \/* true if we should call hardclock() *\/$/;"	m	struct:ltimer_softc	typeref:typename:int
lt_timerclock	dev/lamebus/ltimer.h	/^	int lt_timerclock;        \/* true if we should call timerclock() *\/$/;"	m	struct:ltimer_softc	typeref:typename:int
ltimer_beep	dev/lamebus/ltimer.c	/^ltimer_beep(void *vlt)$/;"	f	typeref:typename:void
ltimer_gettime	dev/lamebus/ltimer.c	/^ltimer_gettime(void *vlt, struct timespec *ts)$/;"	f	typeref:typename:void
ltimer_irq	dev/lamebus/ltimer.c	/^ltimer_irq(void *vlt)$/;"	f	typeref:typename:void
ltimer_softc	dev/lamebus/ltimer.h	/^struct ltimer_softc {$/;"	s
ltrace_debug	dev/lamebus/ltrace.c	/^ltrace_debug(uint32_t code)$/;"	f	typeref:typename:void
ltrace_dump	dev/lamebus/ltrace.c	/^ltrace_dump(uint32_t code)$/;"	f	typeref:typename:void
ltrace_off	dev/lamebus/ltrace.c	/^ltrace_off(uint32_t code)$/;"	f	typeref:typename:void
ltrace_on	dev/lamebus/ltrace.c	/^ltrace_on(uint32_t code)$/;"	f	typeref:typename:void
ltrace_softc	dev/lamebus/ltrace.h	/^struct ltrace_softc {$/;"	s
m	test/tt3.c	/^		char m[DIM][DIM];$/;"	m	struct:compute_thread::matrix	typeref:typename:char[][]	file:
mainbus_bootstrap	arch/sys161/dev/lamebus_machdep.c	/^mainbus_bootstrap(void)$/;"	f	typeref:typename:void
mainbus_halt	arch/sys161/dev/lamebus_machdep.c	/^mainbus_halt(void)$/;"	f	typeref:typename:void
mainbus_interrupt	arch/sys161/dev/lamebus_machdep.c	/^mainbus_interrupt(struct trapframe *tf)$/;"	f	typeref:typename:void
mainbus_panic	arch/sys161/dev/lamebus_machdep.c	/^mainbus_panic(void)$/;"	f	typeref:typename:void
mainbus_poweroff	arch/sys161/dev/lamebus_machdep.c	/^mainbus_poweroff(void)$/;"	f	typeref:typename:void
mainbus_ramsize	arch/sys161/dev/lamebus_machdep.c	/^mainbus_ramsize(void)$/;"	f	typeref:typename:uint32_t
mainbus_reboot	arch/sys161/dev/lamebus_machdep.c	/^mainbus_reboot(void)$/;"	f	typeref:typename:void
mainbus_send_ipi	arch/sys161/dev/lamebus_machdep.c	/^mainbus_send_ipi(struct cpu *target)$/;"	f	typeref:typename:void
mainbus_start_cpus	arch/sys161/dev/lamebus_machdep.c	/^mainbus_start_cpus(void)$/;"	f	typeref:typename:void
mainmenu	main/menu.c	/^static const char *mainmenu[] = {$/;"	v	typeref:typename:const char * []	file:
make_computes	test/tt3.c	/^make_computes(int howmany)$/;"	f	typeref:typename:void	file:
make_sleepalots	test/tt3.c	/^make_sleepalots(int howmany)$/;"	f	typeref:typename:void	file:
mallocgeneration	vm/kmalloc.c	/^static unsigned mallocgeneration;$/;"	v	typeref:typename:unsigned	file:
malloclabel	vm/kmalloc.c	/^struct malloclabel {$/;"	s	file:
mallocstress	test/malloctest.c	/^mallocstress(int nargs, char **args)$/;"	f	typeref:typename:int
malloctest	test/malloctest.c	/^malloctest(int nargs, char **args)$/;"	f	typeref:typename:int
malloctest3	test/malloctest.c	/^malloctest3(int nargs, char **args)$/;"	f	typeref:typename:int
malloctest4	test/malloctest.c	/^malloctest4(int nargs, char **args)$/;"	f	typeref:typename:int
malloctest4thread	test/malloctest.c	/^malloctest4thread(void *sm, unsigned long num)$/;"	f	typeref:typename:void	file:
mallocthread	test/malloctest.c	/^mallocthread(void *sm, unsigned long num)$/;"	f	typeref:typename:void	file:
matrix	test/tt3.c	/^	struct matrix {$/;"	s	function:compute_thread	file:
max	include/array.h	/^	unsigned num, max;$/;"	m	struct:array	typeref:typename:unsigned
membar_any_any	arch/mips/include/membar.h	/^membar_any_any(void)$/;"	f	typeref:typename:MEMBAR_INLINE void
membar_any_any	compile/DUMBVM/includelinks/machine/membar.h	/^membar_any_any(void)$/;"	f	typeref:typename:MEMBAR_INLINE void
membar_any_any	compile/DUMBVM/includelinks/mips/membar.h	/^membar_any_any(void)$/;"	f	typeref:typename:MEMBAR_INLINE void
membar_any_store	arch/mips/include/membar.h	/^MEMBAR_INLINE void membar_any_store(void) { membar_any_any(); }$/;"	f	typeref:typename:MEMBAR_INLINE void
membar_any_store	compile/DUMBVM/includelinks/machine/membar.h	/^MEMBAR_INLINE void membar_any_store(void) { membar_any_any(); }$/;"	f	typeref:typename:MEMBAR_INLINE void
membar_any_store	compile/DUMBVM/includelinks/mips/membar.h	/^MEMBAR_INLINE void membar_any_store(void) { membar_any_any(); }$/;"	f	typeref:typename:MEMBAR_INLINE void
membar_load_load	arch/mips/include/membar.h	/^MEMBAR_INLINE void membar_load_load(void) { membar_any_any(); }$/;"	f	typeref:typename:MEMBAR_INLINE void
membar_load_load	compile/DUMBVM/includelinks/machine/membar.h	/^MEMBAR_INLINE void membar_load_load(void) { membar_any_any(); }$/;"	f	typeref:typename:MEMBAR_INLINE void
membar_load_load	compile/DUMBVM/includelinks/mips/membar.h	/^MEMBAR_INLINE void membar_load_load(void) { membar_any_any(); }$/;"	f	typeref:typename:MEMBAR_INLINE void
membar_store_any	arch/mips/include/membar.h	/^MEMBAR_INLINE void membar_store_any(void) { membar_any_any(); }$/;"	f	typeref:typename:MEMBAR_INLINE void
membar_store_any	compile/DUMBVM/includelinks/machine/membar.h	/^MEMBAR_INLINE void membar_store_any(void) { membar_any_any(); }$/;"	f	typeref:typename:MEMBAR_INLINE void
membar_store_any	compile/DUMBVM/includelinks/mips/membar.h	/^MEMBAR_INLINE void membar_store_any(void) { membar_any_any(); }$/;"	f	typeref:typename:MEMBAR_INLINE void
membar_store_store	arch/mips/include/membar.h	/^MEMBAR_INLINE void membar_store_store(void) { membar_any_any(); }$/;"	f	typeref:typename:MEMBAR_INLINE void
membar_store_store	compile/DUMBVM/includelinks/machine/membar.h	/^MEMBAR_INLINE void membar_store_store(void) { membar_any_any(); }$/;"	f	typeref:typename:MEMBAR_INLINE void
membar_store_store	compile/DUMBVM/includelinks/mips/membar.h	/^MEMBAR_INLINE void membar_store_store(void) { membar_any_any(); }$/;"	f	typeref:typename:MEMBAR_INLINE void
menu	main/menu.c	/^menu(char *args)$/;"	f	typeref:typename:void
menu_execute	main/menu.c	/^menu_execute(char *line, int isargs)$/;"	f	typeref:typename:void	file:
mergexy	dev/lamebus/lscreen.c	/^mergexy(unsigned x, unsigned y)$/;"	f	typeref:typename:uint32_t	file:
mips32	arch/mips/vm/tlb-mips161.S	/^   .set mips32 \/* so we can use ssnop *\/$/;"	d
mips_flushicache	arch/mips/locore/cache-mips161.S	/^mips_flushicache:$/;"	l
mips_general_end	arch/mips/locore/exception-mips1.S	/^mips_general_end:$/;"	l
mips_general_handler	arch/mips/locore/exception-mips1.S	/^mips_general_handler:$/;"	l
mips_threadstart	arch/mips/thread/threadstart.S	/^mips_threadstart:$/;"	l
mips_timer_set	arch/sys161/dev/lamebus_machdep.c	/^mips_timer_set(uint32_t count)$/;"	f	typeref:typename:void	file:
mips_trap	arch/mips/locore/trap.c	/^mips_trap(struct trapframe *tf)$/;"	f	typeref:typename:void
mips_usermode	arch/mips/locore/trap.c	/^mips_usermode(struct trapframe *tf)$/;"	f	typeref:typename:void
mips_utlb_end	arch/mips/locore/exception-mips1.S	/^mips_utlb_end:$/;"	l
mips_utlb_handler	arch/mips/locore/exception-mips1.S	/^mips_utlb_handler:$/;"	l
mkrawname	vfs/vfslist.c	/^mkrawname(const char *name)$/;"	f	typeref:typename:char *	file:
mode_t	include/types.h	/^typedef __mode_t mode_t;$/;"	t	typeref:typename:__mode_t
mounttable	main/menu.c	/^} mounttable[] = {$/;"	v	typeref:typename:const struct __anonaecd2cbf0108[]
msg_control	include/kern/socket.h	/^	void *msg_control;	\/* auxiliary data area, or null *\/$/;"	m	struct:msghdr	typeref:typename:void *
msg_controllen	include/kern/socket.h	/^	socklen_t msg_controllen; \/* size of msg_control area *\/$/;"	m	struct:msghdr	typeref:typename:socklen_t
msg_flags	include/kern/socket.h	/^	int msg_flags;		\/* flags *\/$/;"	m	struct:msghdr	typeref:typename:int
msg_iov	include/kern/socket.h	/^	struct iovec *msg_iov;	\/* I\/O buffers *\/$/;"	m	struct:msghdr	typeref:struct:iovec *
msg_iovlen	include/kern/socket.h	/^	int msg_iovlen;		\/* number of iovecs *\/$/;"	m	struct:msghdr	typeref:typename:int
msg_name	include/kern/socket.h	/^	void *msg_name;		\/* really sockaddr; address, or null *\/$/;"	m	struct:msghdr	typeref:typename:void *
msg_namelen	include/kern/socket.h	/^	socklen_t msg_namelen;	\/* size of msg_name object, or 0 *\/$/;"	m	struct:msghdr	typeref:typename:socklen_t
msghdr	include/kern/socket.h	/^struct msghdr {$/;"	s
name	main/menu.c	/^	const char *name;$/;"	m	struct:__anonaecd2cbf0108	typeref:typename:const char *	file:
name	main/menu.c	/^	const char *name;$/;"	m	struct:__anonaecd2cbf0208	typeref:typename:const char *	file:
names	test/threadlisttest.c	/^static const char *const names[NUMNAMES] = {$/;"	v	typeref:typename:const char * const[]	file:
nbits	lib/bitmap.c	/^        unsigned nbits;$/;"	m	struct:bitmap	typeref:typename:unsigned	file:
nettest	test/nettest.c	/^nettest(int nargs, char **args)$/;"	f	typeref:typename:int
next	vm/kmalloc.c	/^	struct freelist *next;$/;"	m	struct:freelist	typeref:struct:freelist *	file:
next_all	vm/kmalloc.c	/^	struct pageref *next_all;$/;"	m	struct:pageref	typeref:struct:pageref *	file:
next_samesize	vm/kmalloc.c	/^	struct pageref *next_samesize;$/;"	m	struct:pageref	typeref:struct:pageref *	file:
nextunit_beep	compile/DUMBVM/autoconf.c	/^static int nextunit_beep;$/;"	v	typeref:typename:int	file:
nextunit_con	compile/DUMBVM/autoconf.c	/^static int nextunit_con;$/;"	v	typeref:typename:int	file:
nextunit_emu	compile/DUMBVM/autoconf.c	/^static int nextunit_emu;$/;"	v	typeref:typename:int	file:
nextunit_lhd	compile/DUMBVM/autoconf.c	/^static int nextunit_lhd;$/;"	v	typeref:typename:int	file:
nextunit_lrandom	compile/DUMBVM/autoconf.c	/^static int nextunit_lrandom;$/;"	v	typeref:typename:int	file:
nextunit_lser	compile/DUMBVM/autoconf.c	/^static int nextunit_lser;$/;"	v	typeref:typename:int	file:
nextunit_ltimer	compile/DUMBVM/autoconf.c	/^static int nextunit_ltimer;$/;"	v	typeref:typename:int	file:
nextunit_ltrace	compile/DUMBVM/autoconf.c	/^static int nextunit_ltrace;$/;"	v	typeref:typename:int	file:
nextunit_random	compile/DUMBVM/autoconf.c	/^static int nextunit_random;$/;"	v	typeref:typename:int	file:
nextunit_rtclock	compile/DUMBVM/autoconf.c	/^static int nextunit_rtclock;$/;"	v	typeref:typename:int	file:
nfds_t	include/types.h	/^typedef __nfds_t nfds_t;$/;"	t	typeref:typename:__nfds_t
nfree	vm/kmalloc.c	/^	uint16_t nfree;$/;"	m	struct:pageref	typeref:typename:uint16_t	file:
nlink_t	include/types.h	/^typedef __nlink_t nlink_t;$/;"	t	typeref:typename:__nlink_t
noat	arch/mips/locore/exception-mips1.S	/^   .set noat$/;"	d
noreorder	arch/mips/locore/cache-mips161.S	/^   .set noreorder$/;"	d
noreorder	arch/mips/locore/exception-mips1.S	/^   .set noreorder$/;"	d
noreorder	arch/mips/thread/switch.S	/^   .set noreorder$/;"	d
noreorder	arch/mips/thread/threadstart.S	/^   .set noreorder$/;"	d
noreorder	arch/mips/vm/tlb-mips161.S	/^   .set noreorder$/;"	d
noreorder	arch/sys161/main/start.S	/^   .set noreorder$/;"	d
null_devops	vfs/devnull.c	/^static const struct device_ops null_devops = {$/;"	v	typeref:typename:const struct device_ops	file:
null_fsync	vfs/device.c	/^null_fsync(struct vnode *v)$/;"	f	typeref:typename:int	file:
nullio	vfs/devnull.c	/^nullio(struct device *dev, struct uio *uio)$/;"	f	typeref:typename:int	file:
nullioctl	vfs/devnull.c	/^nullioctl(struct device *dev, int op, userptr_t data)$/;"	f	typeref:typename:int	file:
nullopen	vfs/devnull.c	/^nullopen(struct device *dev, int openflags)$/;"	f	typeref:typename:int	file:
num	include/array.h	/^	unsigned num, max;$/;"	m	struct:array	typeref:typename:unsigned
numinuse	vm/kmalloc.c	/^	unsigned numinuse;$/;"	m	struct:kheap_root	typeref:typename:unsigned	file:
off_t	include/types.h	/^typedef __off_t off_t;$/;"	t	typeref:typename:__off_t
opsmenu	main/menu.c	/^static const char *opsmenu[] = {$/;"	v	typeref:typename:const char * []	file:
p_addrspace	include/proc.h	/^	struct addrspace *p_addrspace;	\/* virtual address space *\/$/;"	m	struct:proc	typeref:struct:addrspace *
p_align	include/elf.h	/^	uint32_t	p_align;     \/* Required alignment - can ignore *\/$/;"	m	struct:__anona52b83e50208	typeref:typename:uint32_t
p_cwd	include/proc.h	/^	struct vnode *p_cwd;		\/* current working directory *\/$/;"	m	struct:proc	typeref:struct:vnode *
p_filesz	include/elf.h	/^	uint32_t	p_filesz;    \/* Size of data within file *\/$/;"	m	struct:__anona52b83e50208	typeref:typename:uint32_t
p_flags	include/elf.h	/^	uint32_t	p_flags;     \/* Flags *\/$/;"	m	struct:__anona52b83e50208	typeref:typename:uint32_t
p_lock	include/proc.h	/^	struct spinlock p_lock;		\/* Lock for this structure *\/$/;"	m	struct:proc	typeref:struct:spinlock
p_memsz	include/elf.h	/^	uint32_t	p_memsz;     \/* Size of data to be loaded into memory*\/$/;"	m	struct:__anona52b83e50208	typeref:typename:uint32_t
p_name	include/proc.h	/^	char *p_name;			\/* Name of this process *\/$/;"	m	struct:proc	typeref:typename:char *
p_offset	include/elf.h	/^	uint32_t	p_offset;    \/* Location of data within file *\/$/;"	m	struct:__anona52b83e50208	typeref:typename:uint32_t
p_paddr	include/elf.h	/^	uint32_t	p_paddr;     \/* Ignore *\/$/;"	m	struct:__anona52b83e50208	typeref:typename:uint32_t
p_threads	include/proc.h	/^	struct threadarray p_threads;	\/* Threads in this process *\/$/;"	m	struct:proc	typeref:struct:threadarray
p_type	include/elf.h	/^	uint32_t	p_type;      \/* Type of segment *\/$/;"	m	struct:__anona52b83e50208	typeref:typename:uint32_t
p_vaddr	include/elf.h	/^	uint32_t	p_vaddr;     \/* Virtual address *\/$/;"	m	struct:__anona52b83e50208	typeref:typename:uint32_t
paddr_t	arch/mips/include/types.h	/^typedef __u32 paddr_t;$/;"	t	typeref:typename:__u32
paddr_t	compile/DUMBVM/includelinks/machine/types.h	/^typedef __u32 paddr_t;$/;"	t	typeref:typename:__u32
paddr_t	compile/DUMBVM/includelinks/mips/types.h	/^typedef __u32 paddr_t;$/;"	t	typeref:typename:__u32
page	vm/kmalloc.c	/^	struct pagerefpage *page;$/;"	m	struct:kheap_root	typeref:struct:pagerefpage *	file:
pageaddr_and_blocktype	vm/kmalloc.c	/^	vaddr_t pageaddr_and_blocktype;$/;"	m	struct:pageref	typeref:typename:vaddr_t	file:
pageref	vm/kmalloc.c	/^struct pageref {$/;"	s	file:
pagerefpage	vm/kmalloc.c	/^struct pagerefpage {$/;"	s	file:
pagerefs_inuse	vm/kmalloc.c	/^	uint32_t pagerefs_inuse[INUSE_WORDS];$/;"	m	struct:kheap_root	typeref:typename:uint32_t[]	file:
panic	lib/kprintf.c	/^panic(const char *fmt, ...)$/;"	f	typeref:typename:void
panicstr	arch/sys161/main/start.S	/^panicstr:$/;"	l
pid_t	include/types.h	/^typedef __pid_t pid_t;$/;"	t	typeref:typename:__pid_t
printfile	test/fstest.c	/^printfile(int nargs, char **args)$/;"	f	typeref:typename:int
proc	include/proc.h	/^struct proc {$/;"	s
proc_addthread	proc/proc.c	/^proc_addthread(struct proc *proc, struct thread *t)$/;"	f	typeref:typename:int
proc_bootstrap	proc/proc.c	/^proc_bootstrap(void)$/;"	f	typeref:typename:void
proc_create	proc/proc.c	/^proc_create(const char *name)$/;"	f	typeref:struct:proc *	file:
proc_create_runprogram	proc/proc.c	/^proc_create_runprogram(const char *name)$/;"	f	typeref:struct:proc *
proc_destroy	proc/proc.c	/^proc_destroy(struct proc *proc)$/;"	f	typeref:typename:void
proc_getas	proc/proc.c	/^proc_getas(void)$/;"	f	typeref:struct:addrspace *
proc_remthread	proc/proc.c	/^proc_remthread(struct thread *t)$/;"	f	typeref:typename:void
proc_setas	proc/proc.c	/^proc_setas(struct addrspace *newas)$/;"	f	typeref:struct:addrspace *
processline	conf/config	/^    function processline(filename, lineno) {$/;"	f
pseudoconfig	compile/DUMBVM/autoconf.c	/^pseudoconfig(void)$/;"	f	typeref:typename:void
ptrdiff_t	include/types.h	/^typedef __ptrdiff_t ptrdiff_t;$/;"	t	typeref:typename:__ptrdiff_t
putch	dev/generic/console.c	/^putch(int ch)$/;"	f	typeref:typename:void
putch_delayed	dev/generic/console.c	/^putch_delayed(int ch)$/;"	f	typeref:typename:void	file:
putch_intr	dev/generic/console.c	/^putch_intr(struct con_softc *cs, int ch)$/;"	f	typeref:typename:void	file:
putch_polled	dev/generic/console.c	/^putch_polled(struct con_softc *cs, int ch)$/;"	f	typeref:typename:void	file:
quietthread	test/threadtest.c	/^quietthread(void *junk, unsigned long num)$/;"	f	typeref:typename:void	file:
ra	arch/mips/include/kern/regdefs.h	/^#define ra /;"	d
ra	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define ra /;"	d
ra	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define ra /;"	d
ra	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define ra /;"	d
ra	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define ra /;"	d
ram_bootstrap	arch/mips/vm/ram.c	/^ram_bootstrap(void)$/;"	f	typeref:typename:void
ram_getfirstfree	arch/mips/vm/ram.c	/^ram_getfirstfree(void)$/;"	f	typeref:typename:paddr_t
ram_getsize	arch/mips/vm/ram.c	/^ram_getsize(void)$/;"	f	typeref:typename:paddr_t
ram_stealmem	arch/mips/vm/ram.c	/^ram_stealmem(unsigned long npages)$/;"	f	typeref:typename:paddr_t
randeachopen	dev/generic/random.c	/^randeachopen(struct device *dev, int openflags)$/;"	f	typeref:typename:int	file:
randio	dev/generic/random.c	/^randio(struct device *dev, struct uio *uio)$/;"	f	typeref:typename:int	file:
randioctl	dev/generic/random.c	/^randioctl(struct device *dev, int op, userptr_t data)$/;"	f	typeref:typename:int	file:
randmax	dev/generic/random.c	/^randmax(void)$/;"	f	typeref:typename:uint32_t
random	dev/generic/random.c	/^random(void)$/;"	f	typeref:typename:uint32_t
random_devops	dev/generic/random.c	/^static const struct device_ops random_devops = {$/;"	v	typeref:typename:const struct device_ops	file:
random_softc	dev/generic/random.h	/^struct random_softc {$/;"	s
read_cfg_register	dev/lamebus/lamebus.c	/^read_cfg_register(struct lamebus_softc *lb, int slot, uint32_t offset)$/;"	f	typeref:typename:uint32_t	file:
read_ctl_register	dev/lamebus/lamebus.c	/^read_ctl_register(struct lamebus_softc *lb, uint32_t offset)$/;"	f	typeref:typename:uint32_t	file:
readstress_thread	test/fstest.c	/^readstress_thread(void *fs, unsigned long num)$/;"	f	typeref:typename:void	file:
refs	vm/kmalloc.c	/^	struct pageref refs[NPAGEREFS_PER_PAGE];$/;"	m	struct:pagerefpage	typeref:struct:pageref[]	file:
remove_lists	vm/kmalloc.c	/^remove_lists(struct pageref *pr, int blktype)$/;"	f	typeref:typename:void	file:
reserved	include/kern/sfs.h	/^	uint32_t reserved[118];			\/* unused, set to 0 *\/$/;"	m	struct:sfs_superblock	typeref:typename:uint32_t[118]
rlim_cur	include/kern/resource.h	/^	__rlim_t rlim_cur;	\/* soft limit *\/$/;"	m	struct:rlimit	typeref:typename:__rlim_t
rlim_max	include/kern/resource.h	/^	__rlim_t rlim_max;	\/* hard limit *\/$/;"	m	struct:rlimit	typeref:typename:__rlim_t
rlim_t	include/types.h	/^typedef __rlim_t rlim_t;$/;"	t	typeref:typename:__rlim_t
rlimit	include/kern/resource.h	/^struct rlimit {$/;"	s
rotate	test/fstest.c	/^rotate(char *str, int amt)$/;"	f	typeref:typename:void	file:
rs_dev	dev/generic/random.h	/^	struct device rs_dev;$/;"	m	struct:random_softc	typeref:struct:device
rs_devdata	dev/generic/random.h	/^	void *rs_devdata;$/;"	m	struct:random_softc	typeref:typename:void *
rs_randmax	dev/generic/random.h	/^	uint32_t (*rs_randmax)(void *devdata);$/;"	m	struct:random_softc	typeref:typename:uint32_t (*)(void * devdata)
rs_random	dev/generic/random.h	/^	uint32_t (*rs_random)(void *devdata);$/;"	m	struct:random_softc	typeref:typename:uint32_t (*)(void * devdata)
rs_read	dev/generic/random.h	/^	int (*rs_read)(void *devdata, struct uio *uio);$/;"	m	struct:random_softc	typeref:typename:int (*)(void * devdata,struct uio * uio)
rtc_devdata	dev/generic/rtclock.h	/^	void *rtc_devdata;$/;"	m	struct:rtclock_softc	typeref:typename:void *
rtc_gettime	dev/generic/rtclock.h	/^	void (*rtc_gettime)(void *devdata, struct timespec *);$/;"	m	struct:rtclock_softc	typeref:typename:void (*)(void * devdata,struct timespec *)
rtclock_softc	dev/generic/rtclock.h	/^struct rtclock_softc {$/;"	s
ru_idrss	include/kern/resource.h	/^	__counter_t ru_idrss;		\/* data memory usage (kb-ticks) *\/$/;"	m	struct:rusage	typeref:typename:__counter_t
ru_inblock	include/kern/resource.h	/^	__counter_t ru_inblock;		\/* file blocks read (count) *\/$/;"	m	struct:rusage	typeref:typename:__counter_t
ru_isrss	include/kern/resource.h	/^	__counter_t ru_isrss;		\/* stack memory usage (kb-ticks) *\/$/;"	m	struct:rusage	typeref:typename:__counter_t
ru_ixrss	include/kern/resource.h	/^	__counter_t ru_ixrss;		\/* text memory usage (kb-ticks) *\/$/;"	m	struct:rusage	typeref:typename:__counter_t
ru_majflt	include/kern/resource.h	/^	__counter_t ru_majflt;		\/* major VM faults (count) *\/$/;"	m	struct:rusage	typeref:typename:__counter_t
ru_maxrss	include/kern/resource.h	/^	__size_t ru_maxrss;		\/* maximum RSS during lifespan (kb) *\/$/;"	m	struct:rusage	typeref:typename:__size_t
ru_minflt	include/kern/resource.h	/^	__counter_t ru_minflt;		\/* minor VM faults (count) *\/$/;"	m	struct:rusage	typeref:typename:__counter_t
ru_msgrcv	include/kern/resource.h	/^	__counter_t ru_msgrcv;		\/* socket\/pipe packets rcv'd (count) *\/$/;"	m	struct:rusage	typeref:typename:__counter_t
ru_msgsnd	include/kern/resource.h	/^	__counter_t ru_msgsnd;		\/* socket\/pipe packets sent (count) *\/$/;"	m	struct:rusage	typeref:typename:__counter_t
ru_nivcsw	include/kern/resource.h	/^	__counter_t ru_nivcsw;		\/* involuntary ditto (count) *\/$/;"	m	struct:rusage	typeref:typename:__counter_t
ru_nsignals	include/kern/resource.h	/^	__counter_t ru_nsignals;	\/* signals delivered (count) *\/$/;"	m	struct:rusage	typeref:typename:__counter_t
ru_nswap	include/kern/resource.h	/^	__counter_t ru_nswap;		\/* whole-process swaps (count) *\/$/;"	m	struct:rusage	typeref:typename:__counter_t
ru_nvcsw	include/kern/resource.h	/^	__counter_t ru_nvcsw;		\/* voluntary context switches (count)*\/$/;"	m	struct:rusage	typeref:typename:__counter_t
ru_oublock	include/kern/resource.h	/^	__counter_t ru_oublock;		\/* file blocks written (count) *\/$/;"	m	struct:rusage	typeref:typename:__counter_t
ru_stime	include/kern/resource.h	/^	struct timeval ru_stime;$/;"	m	struct:rusage	typeref:struct:timeval
ru_utime	include/kern/resource.h	/^	struct timeval ru_utime;$/;"	m	struct:rusage	typeref:struct:timeval
runprogram	syscall/runprogram.c	/^runprogram(char *progname)$/;"	f	typeref:typename:int
runtest3	test/tt3.c	/^runtest3(int nsleeps, int ncomputes)$/;"	f	typeref:typename:void	file:
runthreads	test/threadtest.c	/^runthreads(int doloud)$/;"	f	typeref:typename:void	file:
rusage	include/kern/resource.h	/^struct rusage {$/;"	s
s0	arch/mips/include/kern/regdefs.h	/^#define s0 /;"	d
s0	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define s0 /;"	d
s0	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define s0 /;"	d
s0	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define s0 /;"	d
s0	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define s0 /;"	d
s1	arch/mips/include/kern/regdefs.h	/^#define s1 /;"	d
s1	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define s1 /;"	d
s1	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define s1 /;"	d
s1	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define s1 /;"	d
s1	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define s1 /;"	d
s2	arch/mips/include/kern/regdefs.h	/^#define s2 /;"	d
s2	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define s2 /;"	d
s2	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define s2 /;"	d
s2	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define s2 /;"	d
s2	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define s2 /;"	d
s3	arch/mips/include/kern/regdefs.h	/^#define s3 /;"	d
s3	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define s3 /;"	d
s3	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define s3 /;"	d
s3	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define s3 /;"	d
s3	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define s3 /;"	d
s4	arch/mips/include/kern/regdefs.h	/^#define s4 /;"	d
s4	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define s4 /;"	d
s4	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define s4 /;"	d
s4	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define s4 /;"	d
s4	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define s4 /;"	d
s5	arch/mips/include/kern/regdefs.h	/^#define s5 /;"	d
s5	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define s5 /;"	d
s5	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define s5 /;"	d
s5	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define s5 /;"	d
s5	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define s5 /;"	d
s6	arch/mips/include/kern/regdefs.h	/^#define s6 /;"	d
s6	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define s6 /;"	d
s6	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define s6 /;"	d
s6	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define s6 /;"	d
s6	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define s6 /;"	d
s7	arch/mips/include/kern/regdefs.h	/^#define s7 /;"	d
s7	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define s7 /;"	d
s7	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define s7 /;"	d
s7	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define s7 /;"	d
s7	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define s7 /;"	d
s8	arch/mips/include/kern/regdefs.h	/^#define s8 /;"	d
s8	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define s8 /;"	d
s8	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define s8 /;"	d
s8	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define s8 /;"	d
s8	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define s8 /;"	d
sa_family	include/kern/socket.h	/^   __u8 sa_family;$/;"	m	struct:sockaddr	typeref:typename:__u8
sa_family_t	include/types.h	/^typedef __sa_family_t sa_family_t;$/;"	t	typeref:typename:__sa_family_t
sa_flags	include/kern/signal.h	/^	unsigned sa_flags;$/;"	m	struct:sigaction	typeref:typename:unsigned
sa_handler	include/kern/signal.h	/^	__sigfunc sa_handler;$/;"	m	struct:sigaction	typeref:typename:__sigfunc
sa_len	include/kern/socket.h	/^   __u8	sa_len;$/;"	m	struct:sockaddr	typeref:typename:__u8
sa_mask	include/kern/signal.h	/^	sigset_t sa_mask;$/;"	m	struct:sigaction	typeref:typename:sigset_t
samestring	vfs/vfslist.c	/^samestring(const char *a, const char *b)$/;"	f	typeref:typename:int	file:
samestring3	vfs/vfslist.c	/^samestring3(const char *a, const char *b, const char *c, const char *d)$/;"	f	typeref:typename:int	file:
sb_magic	include/kern/sfs.h	/^	uint32_t sb_magic;		\/* Magic number; should be SFS_MAGIC *\/$/;"	m	struct:sfs_superblock	typeref:typename:uint32_t
sb_nblocks	include/kern/sfs.h	/^	uint32_t sb_nblocks;			\/* Number of blocks in fs *\/$/;"	m	struct:sfs_superblock	typeref:typename:uint32_t
sb_volname	include/kern/sfs.h	/^	char sb_volname[SFS_VOLNAME_SIZE];	\/* Name of this volume *\/$/;"	m	struct:sfs_superblock	typeref:typename:char[]
schedule	thread/thread.c	/^schedule(void)$/;"	f	typeref:typename:void
sem_count	include/synch.h	/^        volatile unsigned sem_count;$/;"	m	struct:semaphore	typeref:typename:volatile unsigned
sem_create	thread/synch.c	/^sem_create(const char *name, unsigned initial_count)$/;"	f	typeref:struct:semaphore *
sem_destroy	thread/synch.c	/^sem_destroy(struct semaphore *sem)$/;"	f	typeref:typename:void
sem_lock	include/synch.h	/^	struct spinlock sem_lock;$/;"	m	struct:semaphore	typeref:struct:spinlock
sem_name	include/synch.h	/^        char *sem_name;$/;"	m	struct:semaphore	typeref:typename:char *
sem_wchan	include/synch.h	/^	struct wchan *sem_wchan;$/;"	m	struct:semaphore	typeref:struct:wchan *
semaphore	include/synch.h	/^struct semaphore {$/;"	s
semd_name	fs/semfs/semfs.h	/^	char *semd_name;			\/* Name *\/$/;"	m	struct:semfs_direntry	typeref:typename:char *
semd_semnum	fs/semfs/semfs.h	/^	unsigned semd_semnum;			\/* Which semaphore *\/$/;"	m	struct:semfs_direntry	typeref:typename:unsigned
semfs	fs/semfs/semfs.h	/^struct semfs {$/;"	s
semfs_absfs	fs/semfs/semfs.h	/^	struct fs semfs_absfs;			\/* Abstract fs object *\/$/;"	m	struct:semfs	typeref:struct:fs
semfs_bootstrap	fs/semfs/semfs_fsops.c	/^semfs_bootstrap(void)$/;"	f	typeref:typename:void
semfs_creat	fs/semfs/semfs_vnops.c	/^semfs_creat(struct vnode *dirvn, const char *name, bool excl, mode_t mode,$/;"	f	typeref:typename:int	file:
semfs_create	fs/semfs/semfs_fsops.c	/^semfs_create(void)$/;"	f	typeref:struct:semfs *	file:
semfs_dents	fs/semfs/semfs.h	/^	struct semfs_direntryarray *semfs_dents; \/* The root directory *\/$/;"	m	struct:semfs	typeref:struct:semfs_direntryarray *
semfs_destroy	fs/semfs/semfs_fsops.c	/^semfs_destroy(struct semfs *semfs)$/;"	f	typeref:typename:void	file:
semfs_direntry	fs/semfs/semfs.h	/^struct semfs_direntry {$/;"	s
semfs_direntry_create	fs/semfs/semfs_obj.c	/^semfs_direntry_create(const char *name, unsigned semnum)$/;"	f	typeref:struct:semfs_direntry *
semfs_direntry_destroy	fs/semfs/semfs_obj.c	/^semfs_direntry_destroy(struct semfs_direntry *dent)$/;"	f	typeref:typename:void
semfs_dirlock	fs/semfs/semfs.h	/^	struct lock *semfs_dirlock;		\/* Lock for following *\/$/;"	m	struct:semfs	typeref:struct:lock *
semfs_dirops	fs/semfs/semfs_vnops.c	/^static const struct vnode_ops semfs_dirops = {$/;"	v	typeref:typename:const struct vnode_ops	file:
semfs_dirstat	fs/semfs/semfs_vnops.c	/^semfs_dirstat(struct vnode *vn, struct stat *buf)$/;"	f	typeref:typename:int	file:
semfs_eachopen	fs/semfs/semfs_vnops.c	/^semfs_eachopen(struct vnode *vn, int openflags)$/;"	f	typeref:typename:int	file:
semfs_fsops	fs/semfs/semfs_fsops.c	/^static const struct fs_ops semfs_fsops = {$/;"	v	typeref:typename:const struct fs_ops	file:
semfs_fsync	fs/semfs/semfs_vnops.c	/^semfs_fsync(struct vnode *vn)$/;"	f	typeref:typename:int	file:
semfs_getdirentry	fs/semfs/semfs_vnops.c	/^semfs_getdirentry(struct vnode *dirvn, struct uio *uio)$/;"	f	typeref:typename:int	file:
semfs_getroot	fs/semfs/semfs_fsops.c	/^semfs_getroot(struct fs *fs)$/;"	f	typeref:struct:vnode *	file:
semfs_getsem	fs/semfs/semfs_vnops.c	/^semfs_getsem(struct semfs_vnode *semv)$/;"	f	typeref:struct:semfs_sem *	file:
semfs_getsembynum	fs/semfs/semfs_vnops.c	/^semfs_getsembynum(struct semfs *semfs, unsigned semnum)$/;"	f	typeref:struct:semfs_sem *	file:
semfs_gettype	fs/semfs/semfs_vnops.c	/^semfs_gettype(struct vnode *vn, mode_t *ret)$/;"	f	typeref:typename:int	file:
semfs_getvnode	fs/semfs/semfs_vnops.c	/^semfs_getvnode(struct semfs *semfs, unsigned semnum, struct vnode **ret)$/;"	f	typeref:typename:int
semfs_getvolname	fs/semfs/semfs_fsops.c	/^semfs_getvolname(struct fs *fs)$/;"	f	typeref:typename:const char *	file:
semfs_ioctl	fs/semfs/semfs_vnops.c	/^semfs_ioctl(struct vnode *vn, int op, userptr_t data)$/;"	f	typeref:typename:int	file:
semfs_isseekable	fs/semfs/semfs_vnops.c	/^semfs_isseekable(struct vnode *vn)$/;"	f	typeref:typename:bool	file:
semfs_lookparent	fs/semfs/semfs_vnops.c	/^semfs_lookparent(struct vnode *dirvn, char *path,$/;"	f	typeref:typename:int	file:
semfs_lookup	fs/semfs/semfs_vnops.c	/^semfs_lookup(struct vnode *dirvn, char *path, struct vnode **resultvn)$/;"	f	typeref:typename:int	file:
semfs_namefile	fs/semfs/semfs_vnops.c	/^semfs_namefile(struct vnode *vn, struct uio *uio)$/;"	f	typeref:typename:int	file:
semfs_read	fs/semfs/semfs_vnops.c	/^semfs_read(struct vnode *vn, struct uio *uio)$/;"	f	typeref:typename:int	file:
semfs_reclaim	fs/semfs/semfs_vnops.c	/^semfs_reclaim(struct vnode *vn)$/;"	f	typeref:typename:int	file:
semfs_remove	fs/semfs/semfs_vnops.c	/^semfs_remove(struct vnode *dirvn, const char *name)$/;"	f	typeref:typename:int	file:
semfs_sem	fs/semfs/semfs.h	/^struct semfs_sem {$/;"	s
semfs_sem_create	fs/semfs/semfs_obj.c	/^semfs_sem_create(const char *name)$/;"	f	typeref:struct:semfs_sem *
semfs_sem_destroy	fs/semfs/semfs_obj.c	/^semfs_sem_destroy(struct semfs_sem *sem)$/;"	f	typeref:typename:void
semfs_sem_insert	fs/semfs/semfs_obj.c	/^semfs_sem_insert(struct semfs *semfs, struct semfs_sem *sem, unsigned *ret)$/;"	f	typeref:typename:int
semfs_semops	fs/semfs/semfs_vnops.c	/^static const struct vnode_ops semfs_semops = {$/;"	v	typeref:typename:const struct vnode_ops	file:
semfs_sems	fs/semfs/semfs.h	/^	struct semfs_semarray *semfs_sems;	\/* Semaphores *\/$/;"	m	struct:semfs	typeref:struct:semfs_semarray *
semfs_semstat	fs/semfs/semfs_vnops.c	/^semfs_semstat(struct vnode *vn, struct stat *buf)$/;"	f	typeref:typename:int	file:
semfs_sync	fs/semfs/semfs_fsops.c	/^semfs_sync(struct fs *fs)$/;"	f	typeref:typename:int	file:
semfs_tablelock	fs/semfs/semfs.h	/^	struct lock *semfs_tablelock;		\/* Lock for following *\/$/;"	m	struct:semfs	typeref:struct:lock *
semfs_truncate	fs/semfs/semfs_vnops.c	/^semfs_truncate(struct vnode *vn, off_t len)$/;"	f	typeref:typename:int	file:
semfs_unmount	fs/semfs/semfs_fsops.c	/^semfs_unmount(struct fs *fs)$/;"	f	typeref:typename:int	file:
semfs_vnode	fs/semfs/semfs.h	/^struct semfs_vnode {$/;"	s
semfs_vnode_create	fs/semfs/semfs_vnops.c	/^semfs_vnode_create(struct semfs *semfs, unsigned semnum)$/;"	f	typeref:struct:semfs_vnode *	file:
semfs_vnode_destroy	fs/semfs/semfs_vnops.c	/^semfs_vnode_destroy(struct semfs_vnode *semv)$/;"	f	typeref:typename:void	file:
semfs_vnodes	fs/semfs/semfs.h	/^	struct vnodearray *semfs_vnodes;	\/* Currently extant vnodes *\/$/;"	m	struct:semfs	typeref:struct:vnodearray *
semfs_wakeup	fs/semfs/semfs_vnops.c	/^semfs_wakeup(struct semfs_sem *sem, unsigned newcount)$/;"	f	typeref:typename:void	file:
semfs_write	fs/semfs/semfs_vnops.c	/^semfs_write(struct vnode *vn, struct uio *uio)$/;"	f	typeref:typename:int	file:
sems_count	fs/semfs/semfs.h	/^	unsigned sems_count;			\/* Semaphore count *\/$/;"	m	struct:semfs_sem	typeref:typename:unsigned
sems_cv	fs/semfs/semfs.h	/^	struct cv *sems_cv;			\/* CV to wait *\/$/;"	m	struct:semfs_sem	typeref:struct:cv *
sems_hasvnode	fs/semfs/semfs.h	/^	bool sems_hasvnode;			\/* The vnode exists *\/$/;"	m	struct:semfs_sem	typeref:typename:bool
sems_linked	fs/semfs/semfs.h	/^	bool sems_linked;			\/* In the directory *\/$/;"	m	struct:semfs_sem	typeref:typename:bool
sems_lock	fs/semfs/semfs.h	/^	struct lock *sems_lock;			\/* Lock to protect count *\/$/;"	m	struct:semfs_sem	typeref:struct:lock *
semtest	test/synchtest.c	/^semtest(int nargs, char **args)$/;"	f	typeref:typename:int
semtestthread	test/synchtest.c	/^semtestthread(void *junk, unsigned long num)$/;"	f	typeref:typename:void	file:
semv_absvn	fs/semfs/semfs.h	/^	struct vnode semv_absvn;		\/* Abstract vnode *\/$/;"	m	struct:semfs_vnode	typeref:struct:vnode
semv_semfs	fs/semfs/semfs.h	/^	struct semfs *semv_semfs;		\/* Back-pointer to fs *\/$/;"	m	struct:semfs_vnode	typeref:struct:semfs *
semv_semnum	fs/semfs/semfs.h	/^	unsigned semv_semnum;			\/* Which semaphore *\/$/;"	m	struct:semfs_vnode	typeref:typename:unsigned
setup	test/tt3.c	/^setup(void)$/;"	f	typeref:typename:void	file:
sf_gp	arch/mips/thread/switchframe.h	/^        uint32_t sf_gp;$/;"	m	struct:switchframe	typeref:typename:uint32_t
sf_ra	arch/mips/thread/switchframe.h	/^        uint32_t sf_ra;$/;"	m	struct:switchframe	typeref:typename:uint32_t
sf_s0	arch/mips/thread/switchframe.h	/^        uint32_t sf_s0;$/;"	m	struct:switchframe	typeref:typename:uint32_t
sf_s1	arch/mips/thread/switchframe.h	/^        uint32_t sf_s1;$/;"	m	struct:switchframe	typeref:typename:uint32_t
sf_s2	arch/mips/thread/switchframe.h	/^        uint32_t sf_s2;$/;"	m	struct:switchframe	typeref:typename:uint32_t
sf_s3	arch/mips/thread/switchframe.h	/^        uint32_t sf_s3;$/;"	m	struct:switchframe	typeref:typename:uint32_t
sf_s4	arch/mips/thread/switchframe.h	/^        uint32_t sf_s4;$/;"	m	struct:switchframe	typeref:typename:uint32_t
sf_s5	arch/mips/thread/switchframe.h	/^        uint32_t sf_s5;$/;"	m	struct:switchframe	typeref:typename:uint32_t
sf_s6	arch/mips/thread/switchframe.h	/^        uint32_t sf_s6;$/;"	m	struct:switchframe	typeref:typename:uint32_t
sf_s8	arch/mips/thread/switchframe.h	/^        uint32_t sf_s8;$/;"	m	struct:switchframe	typeref:typename:uint32_t
sfd_ino	include/kern/sfs.h	/^	uint32_t sfd_ino;			\/* Inode number *\/$/;"	m	struct:sfs_direntry	typeref:typename:uint32_t
sfd_name	include/kern/sfs.h	/^	char sfd_name[SFS_NAMELEN];		\/* Filename *\/$/;"	m	struct:sfs_direntry	typeref:typename:char[]
sfi_direct	include/kern/sfs.h	/^	uint32_t sfi_direct[SFS_NDIRECT];	\/* Direct blocks *\/$/;"	m	struct:sfs_dinode	typeref:typename:uint32_t[]
sfi_indirect	include/kern/sfs.h	/^	uint32_t sfi_indirect;			\/* Indirect block *\/$/;"	m	struct:sfs_dinode	typeref:typename:uint32_t
sfi_linkcount	include/kern/sfs.h	/^	uint16_t sfi_linkcount;			\/* # hard links to this file *\/$/;"	m	struct:sfs_dinode	typeref:typename:uint16_t
sfi_size	include/kern/sfs.h	/^	uint32_t sfi_size;			\/* Size of this file (bytes) *\/$/;"	m	struct:sfs_dinode	typeref:typename:uint32_t
sfi_type	include/kern/sfs.h	/^	uint16_t sfi_type;			\/* One of SFS_TYPE_* above *\/$/;"	m	struct:sfs_dinode	typeref:typename:uint16_t
sfi_waste	include/kern/sfs.h	/^	uint32_t sfi_waste[128-3-SFS_NDIRECT];	\/* unused space, set to 0 *\/$/;"	m	struct:sfs_dinode	typeref:typename:uint32_t[]
sfs_absfs	include/sfs.h	/^	struct fs sfs_absfs;            \/* abstract filesystem structure *\/$/;"	m	struct:sfs_fs	typeref:struct:fs
sfs_balloc	fs/sfs/sfs_balloc.c	/^sfs_balloc(struct sfs_fs *sfs, daddr_t *diskblock)$/;"	f	typeref:typename:int
sfs_bfree	fs/sfs/sfs_balloc.c	/^sfs_bfree(struct sfs_fs *sfs, daddr_t diskblock)$/;"	f	typeref:typename:void
sfs_blockio	fs/sfs/sfs_io.c	/^sfs_blockio(struct sfs_vnode *sv, struct uio *uio)$/;"	f	typeref:typename:int	file:
sfs_bmap	fs/sfs/sfs_bmap.c	/^sfs_bmap(struct sfs_vnode *sv, uint32_t fileblock, bool doalloc,$/;"	f	typeref:typename:int
sfs_bused	fs/sfs/sfs_balloc.c	/^sfs_bused(struct sfs_fs *sfs, daddr_t diskblock)$/;"	f	typeref:typename:int
sfs_clearblock	fs/sfs/sfs_balloc.c	/^sfs_clearblock(struct sfs_fs *sfs, daddr_t block)$/;"	f	typeref:typename:int	file:
sfs_creat	fs/sfs/sfs_vnops.c	/^sfs_creat(struct vnode *v, const char *name, bool excl, mode_t mode,$/;"	f	typeref:typename:int	file:
sfs_device	include/sfs.h	/^	struct device *sfs_device;      \/* device mounted on *\/$/;"	m	struct:sfs_fs	typeref:struct:device *
sfs_dinode	include/kern/sfs.h	/^struct sfs_dinode {$/;"	s
sfs_dir_findname	fs/sfs/sfs_dir.c	/^sfs_dir_findname(struct sfs_vnode *sv, const char *name,$/;"	f	typeref:typename:int
sfs_dir_link	fs/sfs/sfs_dir.c	/^sfs_dir_link(struct sfs_vnode *sv, const char *name, uint32_t ino, int *slot)$/;"	f	typeref:typename:int
sfs_dir_nentries	fs/sfs/sfs_dir.c	/^sfs_dir_nentries(struct sfs_vnode *sv)$/;"	f	typeref:typename:int	file:
sfs_dir_unlink	fs/sfs/sfs_dir.c	/^sfs_dir_unlink(struct sfs_vnode *sv, int slot)$/;"	f	typeref:typename:int
sfs_direntry	include/kern/sfs.h	/^struct sfs_direntry {$/;"	s
sfs_dirops	fs/sfs/sfs_vnops.c	/^const struct vnode_ops sfs_dirops = {$/;"	v	typeref:typename:const struct vnode_ops
sfs_domount	fs/sfs/sfs_fsops.c	/^sfs_domount(void *options, struct device *dev, struct fs **ret)$/;"	f	typeref:typename:int	file:
sfs_eachopen	fs/sfs/sfs_vnops.c	/^sfs_eachopen(struct vnode *v, int openflags)$/;"	f	typeref:typename:int	file:
sfs_eachopendir	fs/sfs/sfs_vnops.c	/^sfs_eachopendir(struct vnode *v, int openflags)$/;"	f	typeref:typename:int	file:
sfs_fileops	fs/sfs/sfs_vnops.c	/^const struct vnode_ops sfs_fileops = {$/;"	v	typeref:typename:const struct vnode_ops
sfs_freemap	include/sfs.h	/^	struct bitmap *sfs_freemap;     \/* blocks in use are marked 1 *\/$/;"	m	struct:sfs_fs	typeref:struct:bitmap *
sfs_freemapdirty	include/sfs.h	/^	bool sfs_freemapdirty;          \/* true if freemap modified *\/$/;"	m	struct:sfs_fs	typeref:typename:bool
sfs_freemapio	fs/sfs/sfs_fsops.c	/^sfs_freemapio(struct sfs_fs *sfs, enum uio_rw rw)$/;"	f	typeref:typename:int	file:
sfs_fs	include/sfs.h	/^struct sfs_fs {$/;"	s
sfs_fs_create	fs/sfs/sfs_fsops.c	/^sfs_fs_create(void)$/;"	f	typeref:struct:sfs_fs *	file:
sfs_fs_destroy	fs/sfs/sfs_fsops.c	/^sfs_fs_destroy(struct sfs_fs *sfs)$/;"	f	typeref:typename:void	file:
sfs_fsops	fs/sfs/sfs_fsops.c	/^static const struct fs_ops sfs_fsops = {$/;"	v	typeref:typename:const struct fs_ops	file:
sfs_fsync	fs/sfs/sfs_vnops.c	/^sfs_fsync(struct vnode *v)$/;"	f	typeref:typename:int	file:
sfs_getroot	fs/sfs/sfs_inode.c	/^sfs_getroot(struct fs *fs)$/;"	f	typeref:struct:vnode *
sfs_gettype	fs/sfs/sfs_vnops.c	/^sfs_gettype(struct vnode *v, uint32_t *ret)$/;"	f	typeref:typename:int	file:
sfs_getvolname	fs/sfs/sfs_fsops.c	/^sfs_getvolname(struct fs *fs)$/;"	f	typeref:typename:const char *	file:
sfs_io	fs/sfs/sfs_io.c	/^sfs_io(struct sfs_vnode *sv, struct uio *uio)$/;"	f	typeref:typename:int
sfs_ioctl	fs/sfs/sfs_vnops.c	/^sfs_ioctl(struct vnode *v, int op, userptr_t data)$/;"	f	typeref:typename:int	file:
sfs_isseekable	fs/sfs/sfs_vnops.c	/^sfs_isseekable(struct vnode *v)$/;"	f	typeref:typename:bool	file:
sfs_itrunc	fs/sfs/sfs_bmap.c	/^sfs_itrunc(struct sfs_vnode *sv, off_t len)$/;"	f	typeref:typename:int
sfs_link	fs/sfs/sfs_vnops.c	/^sfs_link(struct vnode *dir, const char *name, struct vnode *file)$/;"	f	typeref:typename:int	file:
sfs_loadvnode	fs/sfs/sfs_inode.c	/^sfs_loadvnode(struct sfs_fs *sfs, uint32_t ino, int forcetype,$/;"	f	typeref:typename:int
sfs_lookonce	fs/sfs/sfs_dir.c	/^sfs_lookonce(struct sfs_vnode *sv, const char *name,$/;"	f	typeref:typename:int
sfs_lookparent	fs/sfs/sfs_vnops.c	/^sfs_lookparent(struct vnode *v, char *path, struct vnode **ret,$/;"	f	typeref:typename:int	file:
sfs_lookup	fs/sfs/sfs_vnops.c	/^sfs_lookup(struct vnode *v, char *path, struct vnode **ret)$/;"	f	typeref:typename:int	file:
sfs_makeobj	fs/sfs/sfs_inode.c	/^sfs_makeobj(struct sfs_fs *sfs, int type, struct sfs_vnode **ret)$/;"	f	typeref:typename:int
sfs_metaio	fs/sfs/sfs_io.c	/^sfs_metaio(struct sfs_vnode *sv, off_t actualpos, void *data, size_t len,$/;"	f	typeref:typename:int
sfs_mmap	fs/sfs/sfs_vnops.c	/^sfs_mmap(struct vnode *v   \/* add stuff as needed *\/)$/;"	f	typeref:typename:int	file:
sfs_mount	fs/sfs/sfs_fsops.c	/^sfs_mount(const char *device)$/;"	f	typeref:typename:int
sfs_namefile	fs/sfs/sfs_vnops.c	/^sfs_namefile(struct vnode *vv, struct uio *uio)$/;"	f	typeref:typename:int	file:
sfs_partialio	fs/sfs/sfs_io.c	/^sfs_partialio(struct sfs_vnode *sv, struct uio *uio,$/;"	f	typeref:typename:int	file:
sfs_read	fs/sfs/sfs_vnops.c	/^sfs_read(struct vnode *v, struct uio *uio)$/;"	f	typeref:typename:int	file:
sfs_readblock	fs/sfs/sfs_io.c	/^sfs_readblock(struct sfs_fs *sfs, daddr_t block, void *data, size_t len)$/;"	f	typeref:typename:int
sfs_readdir	fs/sfs/sfs_dir.c	/^sfs_readdir(struct sfs_vnode *sv, int slot, struct sfs_direntry *sd)$/;"	f	typeref:typename:int	file:
sfs_reclaim	fs/sfs/sfs_inode.c	/^sfs_reclaim(struct vnode *v)$/;"	f	typeref:typename:int
sfs_remove	fs/sfs/sfs_vnops.c	/^sfs_remove(struct vnode *dir, const char *name)$/;"	f	typeref:typename:int	file:
sfs_rename	fs/sfs/sfs_vnops.c	/^sfs_rename(struct vnode *d1, const char *n1,$/;"	f	typeref:typename:int	file:
sfs_rwblock	fs/sfs/sfs_io.c	/^sfs_rwblock(struct sfs_fs *sfs, struct uio *uio)$/;"	f	typeref:typename:int	file:
sfs_sb	include/sfs.h	/^	struct sfs_superblock sfs_sb;	\/* copy of on-disk superblock *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_superblock
sfs_stat	fs/sfs/sfs_vnops.c	/^sfs_stat(struct vnode *v, struct stat *statbuf)$/;"	f	typeref:typename:int	file:
sfs_superblock	include/kern/sfs.h	/^struct sfs_superblock {$/;"	s
sfs_superdirty	include/sfs.h	/^	bool sfs_superdirty;            \/* true if superblock modified *\/$/;"	m	struct:sfs_fs	typeref:typename:bool
sfs_sync	fs/sfs/sfs_fsops.c	/^sfs_sync(struct fs *fs)$/;"	f	typeref:typename:int	file:
sfs_sync_inode	fs/sfs/sfs_inode.c	/^sfs_sync_inode(struct sfs_vnode *sv)$/;"	f	typeref:typename:int
sfs_truncate	fs/sfs/sfs_vnops.c	/^sfs_truncate(struct vnode *v, off_t len)$/;"	f	typeref:typename:int	file:
sfs_unmount	fs/sfs/sfs_fsops.c	/^sfs_unmount(struct fs *fs)$/;"	f	typeref:typename:int	file:
sfs_vnode	include/sfs.h	/^struct sfs_vnode {$/;"	s
sfs_vnodes	include/sfs.h	/^	struct vnodearray *sfs_vnodes;  \/* vnodes loaded into memory *\/$/;"	m	struct:sfs_fs	typeref:struct:vnodearray *
sfs_write	fs/sfs/sfs_vnops.c	/^sfs_write(struct vnode *v, struct uio *uio)$/;"	f	typeref:typename:int	file:
sfs_writeblock	fs/sfs/sfs_io.c	/^sfs_writeblock(struct sfs_fs *sfs, daddr_t block, void *data, size_t len)$/;"	f	typeref:typename:int
sfs_writedir	fs/sfs/sfs_dir.c	/^sfs_writedir(struct sfs_vnode *sv, int slot, struct sfs_direntry *sd)$/;"	f	typeref:typename:int	file:
showmenu	main/menu.c	/^showmenu(const char *name, const char *x[])$/;"	f	typeref:typename:void	file:
shutdown	main/main.c	/^shutdown(void)$/;"	f	typeref:typename:void	file:
sigaction	include/kern/signal.h	/^struct sigaction {$/;"	s
sigaltstack	include/kern/signal.h	/^struct sigaltstack {$/;"	s
sigcontext	arch/mips/include/kern/signal.h	/^struct sigcontext {$/;"	s
sigcontext	compile/DUMBVM/includelinks/kern/machine/signal.h	/^struct sigcontext {$/;"	s
sigcontext	compile/DUMBVM/includelinks/kern/mips/signal.h	/^struct sigcontext {$/;"	s
sigcontext	compile/DUMBVM/includelinks/machine/kern/signal.h	/^struct sigcontext {$/;"	s
sigcontext	compile/DUMBVM/includelinks/mips/kern/signal.h	/^struct sigcontext {$/;"	s
sigset_t	include/kern/signal.h	/^typedef __u32 sigset_t;$/;"	t	typeref:typename:__u32
size_t	include/types.h	/^typedef __size_t size_t;$/;"	t	typeref:typename:__size_t
sizebases	vm/kmalloc.c	/^static struct pageref *sizebases[NSIZES];$/;"	v	typeref:struct:pageref * []	file:
sizes	vm/kmalloc.c	/^static const size_t sizes[NSIZES] = { 16, 32, 64, 128, 256, 512, 1024, 2048 };$/;"	v	typeref:typename:const size_t[]	file:
sleepalot_thread	test/tt3.c	/^sleepalot_thread(void *junk, unsigned long num)$/;"	f	typeref:typename:void	file:
sleepthread	test/synchtest.c	/^sleepthread(void *junk1, unsigned long junk2)$/;"	f	typeref:typename:void	file:
sockaddr	include/kern/socket.h	/^struct sockaddr {$/;"	s
sockaddr_storage	include/kern/socket.h	/^struct sockaddr_storage {$/;"	s
socklen_t	include/types.h	/^typedef __socklen_t socklen_t;$/;"	t	typeref:typename:__socklen_t
sp	arch/mips/include/kern/regdefs.h	/^#define sp /;"	d
sp	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define sp /;"	d
sp	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define sp /;"	d
sp	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define sp /;"	d
sp	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define sp /;"	d
spinlock	include/spinlock.h	/^struct spinlock {$/;"	s
spinlock_acquire	thread/spinlock.c	/^spinlock_acquire(struct spinlock *splk)$/;"	f	typeref:typename:void
spinlock_cleanup	thread/spinlock.c	/^spinlock_cleanup(struct spinlock *splk)$/;"	f	typeref:typename:void
spinlock_data_get	arch/mips/include/spinlock.h	/^spinlock_data_get(volatile spinlock_data_t *sd)$/;"	f	typeref:typename:SPINLOCK_INLINE spinlock_data_t
spinlock_data_get	compile/DUMBVM/includelinks/machine/spinlock.h	/^spinlock_data_get(volatile spinlock_data_t *sd)$/;"	f	typeref:typename:SPINLOCK_INLINE spinlock_data_t
spinlock_data_get	compile/DUMBVM/includelinks/mips/spinlock.h	/^spinlock_data_get(volatile spinlock_data_t *sd)$/;"	f	typeref:typename:SPINLOCK_INLINE spinlock_data_t
spinlock_data_set	arch/mips/include/spinlock.h	/^spinlock_data_set(volatile spinlock_data_t *sd, unsigned val)$/;"	f	typeref:typename:SPINLOCK_INLINE void
spinlock_data_set	compile/DUMBVM/includelinks/machine/spinlock.h	/^spinlock_data_set(volatile spinlock_data_t *sd, unsigned val)$/;"	f	typeref:typename:SPINLOCK_INLINE void
spinlock_data_set	compile/DUMBVM/includelinks/mips/spinlock.h	/^spinlock_data_set(volatile spinlock_data_t *sd, unsigned val)$/;"	f	typeref:typename:SPINLOCK_INLINE void
spinlock_data_t	arch/mips/include/spinlock.h	/^typedef unsigned spinlock_data_t;$/;"	t	typeref:typename:unsigned
spinlock_data_t	compile/DUMBVM/includelinks/machine/spinlock.h	/^typedef unsigned spinlock_data_t;$/;"	t	typeref:typename:unsigned
spinlock_data_t	compile/DUMBVM/includelinks/mips/spinlock.h	/^typedef unsigned spinlock_data_t;$/;"	t	typeref:typename:unsigned
spinlock_data_testandset	arch/mips/include/spinlock.h	/^spinlock_data_testandset(volatile spinlock_data_t *sd)$/;"	f	typeref:typename:SPINLOCK_INLINE spinlock_data_t
spinlock_data_testandset	compile/DUMBVM/includelinks/machine/spinlock.h	/^spinlock_data_testandset(volatile spinlock_data_t *sd)$/;"	f	typeref:typename:SPINLOCK_INLINE spinlock_data_t
spinlock_data_testandset	compile/DUMBVM/includelinks/mips/spinlock.h	/^spinlock_data_testandset(volatile spinlock_data_t *sd)$/;"	f	typeref:typename:SPINLOCK_INLINE spinlock_data_t
spinlock_do_i_hold	thread/spinlock.c	/^spinlock_do_i_hold(struct spinlock *splk)$/;"	f	typeref:typename:bool
spinlock_init	thread/spinlock.c	/^spinlock_init(struct spinlock *splk)$/;"	f	typeref:typename:void
spinlock_release	thread/spinlock.c	/^spinlock_release(struct spinlock *splk)$/;"	f	typeref:typename:void
spinlocks	test/tt3.c	/^static struct spinlock spinlocks[NWAITCHANS];$/;"	v	typeref:struct:spinlock[]	file:
spl0	include/spl.h	/^spl0(void)$/;"	f	typeref:typename:SPL_INLINE int
splhigh	include/spl.h	/^splhigh(void)$/;"	f	typeref:typename:SPL_INLINE int
split64to32	lib/bswap.c	/^split64to32(uint64_t x, uint32_t *y1, uint32_t *y2)$/;"	f	typeref:typename:void
splitxy	dev/lamebus/lscreen.c	/^splitxy(uint32_t xy, unsigned *x, unsigned *y)$/;"	f	typeref:typename:void	file:
splk_holder	include/spinlock.h	/^	struct cpu *splk_holder;	    \/* CPU holding this lock. *\/$/;"	m	struct:spinlock	typeref:struct:cpu *
splk_lock	include/spinlock.h	/^	volatile spinlock_data_t splk_lock; \/* Memory word where we spin. *\/$/;"	m	struct:spinlock	typeref:typename:volatile spinlock_data_t
spllower	thread/spl.c	/^spllower(int oldspl, int newspl)$/;"	f	typeref:typename:void
splraise	thread/spl.c	/^splraise(int oldspl, int newspl)$/;"	f	typeref:typename:void
splx	thread/spl.c	/^splx(int spl)$/;"	f	typeref:typename:int
ss_family	include/kern/socket.h	/^   __u8 ss_family;$/;"	m	struct:sockaddr_storage	typeref:typename:__u8
ss_flags	include/kern/signal.h	/^	unsigned ss_flags;$/;"	m	struct:sigaltstack	typeref:typename:unsigned
ss_len	include/kern/socket.h	/^   __u8 ss_len;$/;"	m	struct:sockaddr_storage	typeref:typename:__u8
ss_size	include/kern/signal.h	/^	size_t ss_size;$/;"	m	struct:sigaltstack	typeref:typename:size_t
ss_sp	include/kern/signal.h	/^	void *ss_sp;$/;"	m	struct:sigaltstack	typeref:typename:void *
ssize_t	include/types.h	/^typedef __ssize_t ssize_t;$/;"	t	typeref:typename:__ssize_t
st_atime	include/kern/stat.h	/^	time_t st_atime;        \/* last access time: seconds *\/$/;"	m	struct:stat	typeref:typename:time_t
st_atimensec	include/kern/stat.h	/^	__u32 st_atimensec;     \/* last access time: nanoseconds *\/$/;"	m	struct:stat	typeref:typename:__u32
st_blksize	include/kern/stat.h	/^	blksize_t st_blksize;   \/* recommended I\/O block size *\/$/;"	m	struct:stat	typeref:typename:blksize_t
st_blocks	include/kern/stat.h	/^	blkcnt_t st_blocks;	\/* number of blocks file is using *\/$/;"	m	struct:stat	typeref:typename:blkcnt_t
st_ctime	include/kern/stat.h	/^	time_t st_ctime;        \/* inode change time: seconds *\/$/;"	m	struct:stat	typeref:typename:time_t
st_ctimensec	include/kern/stat.h	/^	__u32 st_ctimensec;     \/* inode change time: nanoseconds *\/$/;"	m	struct:stat	typeref:typename:__u32
st_dev	include/kern/stat.h	/^	dev_t st_dev;           \/* device object lives on *\/$/;"	m	struct:stat	typeref:typename:dev_t
st_gen	include/kern/stat.h	/^	__u32 st_gen;           \/* file generation number (root only) *\/$/;"	m	struct:stat	typeref:typename:__u32
st_gid	include/kern/stat.h	/^	gid_t st_gid;           \/* group *\/$/;"	m	struct:stat	typeref:typename:gid_t
st_ino	include/kern/stat.h	/^	ino_t st_ino;           \/* inode number (serial number) of object *\/$/;"	m	struct:stat	typeref:typename:ino_t
st_mode	include/kern/stat.h	/^	mode_t st_mode;		\/* file type and protection mode *\/$/;"	m	struct:stat	typeref:typename:mode_t
st_mtime	include/kern/stat.h	/^	time_t st_mtime;        \/* modification time: seconds *\/$/;"	m	struct:stat	typeref:typename:time_t
st_mtimensec	include/kern/stat.h	/^	__u32 st_mtimensec;     \/* modification time: nanoseconds *\/$/;"	m	struct:stat	typeref:typename:__u32
st_nlink	include/kern/stat.h	/^	nlink_t st_nlink;	\/* number of hard links *\/$/;"	m	struct:stat	typeref:typename:nlink_t
st_rdev	include/kern/stat.h	/^	dev_t st_rdev;          \/* device object is (if a device) *\/$/;"	m	struct:stat	typeref:typename:dev_t
st_size	include/kern/stat.h	/^	off_t st_size;		\/* file size in bytes *\/$/;"	m	struct:stat	typeref:typename:off_t
st_uid	include/kern/stat.h	/^	uid_t st_uid;           \/* owner *\/$/;"	m	struct:stat	typeref:typename:uid_t
stat	include/kern/stat.h	/^struct stat {$/;"	s
stealmem_lock	arch/mips/vm/dumbvm.c	/^static struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;$/;"	v	typeref:struct:spinlock	file:
strerror	lib/misc.c	/^strerror(int errcode)$/;"	f	typeref:typename:const char *
subpage_kfree	vm/kmalloc.c	/^subpage_kfree(void *ptr)$/;"	f	typeref:typename:int	file:
subpage_kmalloc	vm/kmalloc.c	/^subpage_kmalloc(size_t sz$/;"	f	typeref:typename:void *	file:
subpage_stats	vm/kmalloc.c	/^subpage_stats(struct pageref *pr)$/;"	f	typeref:typename:void	file:
sv_absvn	include/sfs.h	/^	struct vnode sv_absvn;          \/* abstract vnode structure *\/$/;"	m	struct:sfs_vnode	typeref:struct:vnode
sv_dirty	include/sfs.h	/^	bool sv_dirty;                  \/* true if sv_i modified *\/$/;"	m	struct:sfs_vnode	typeref:typename:bool
sv_i	include/sfs.h	/^	struct sfs_dinode sv_i;		\/* copy of on-disk inode *\/$/;"	m	struct:sfs_vnode	typeref:struct:sfs_dinode
sv_ino	include/sfs.h	/^	uint32_t sv_ino;                \/* inode number *\/$/;"	m	struct:sfs_vnode	typeref:typename:uint32_t
switchframe	arch/mips/thread/switchframe.h	/^struct switchframe {$/;"	s
switchframe_init	arch/mips/thread/switchframe.c	/^switchframe_init(struct thread *thread,$/;"	f	typeref:typename:void
switchframe_switch	arch/mips/thread/switch.S	/^switchframe_switch:$/;"	l
sys___time	syscall/time_syscalls.c	/^sys___time(userptr_t user_seconds_ptr, userptr_t user_nanoseconds_ptr)$/;"	f	typeref:typename:int
sys_errlist	include/kern/errmsg.h	/^const char *const sys_errlist[] = {$/;"	v	typeref:typename:const char * const[]
sys_nerr	include/kern/errmsg.h	/^const int sys_nerr = sizeof(sys_errlist)\/sizeof(const char *);$/;"	v	typeref:typename:const int
sys_reboot	main/main.c	/^sys_reboot(int code)$/;"	f	typeref:typename:int
syscall	arch/mips/syscall/syscall.c	/^syscall(struct trapframe *tf)$/;"	f	typeref:typename:void
t0	arch/mips/include/kern/regdefs.h	/^#define t0 /;"	d
t0	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define t0 /;"	d
t0	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define t0 /;"	d
t0	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define t0 /;"	d
t0	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define t0 /;"	d
t1	arch/mips/include/kern/regdefs.h	/^#define t1 /;"	d
t1	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define t1 /;"	d
t1	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define t1 /;"	d
t1	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define t1 /;"	d
t1	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define t1 /;"	d
t2	arch/mips/include/kern/regdefs.h	/^#define t2 /;"	d
t2	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define t2 /;"	d
t2	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define t2 /;"	d
t2	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define t2 /;"	d
t2	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define t2 /;"	d
t3	arch/mips/include/kern/regdefs.h	/^#define t3 /;"	d
t3	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define t3 /;"	d
t3	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define t3 /;"	d
t3	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define t3 /;"	d
t3	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define t3 /;"	d
t4	arch/mips/include/kern/regdefs.h	/^#define t4 /;"	d
t4	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define t4 /;"	d
t4	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define t4 /;"	d
t4	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define t4 /;"	d
t4	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define t4 /;"	d
t5	arch/mips/include/kern/regdefs.h	/^#define t5 /;"	d
t5	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define t5 /;"	d
t5	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define t5 /;"	d
t5	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define t5 /;"	d
t5	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define t5 /;"	d
t6	arch/mips/include/kern/regdefs.h	/^#define t6 /;"	d
t6	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define t6 /;"	d
t6	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define t6 /;"	d
t6	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define t6 /;"	d
t6	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define t6 /;"	d
t7	arch/mips/include/kern/regdefs.h	/^#define t7 /;"	d
t7	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define t7 /;"	d
t7	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define t7 /;"	d
t7	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define t7 /;"	d
t7	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define t7 /;"	d
t8	arch/mips/include/kern/regdefs.h	/^#define t8 /;"	d
t8	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define t8 /;"	d
t8	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define t8 /;"	d
t8	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define t8 /;"	d
t8	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define t8 /;"	d
t9	arch/mips/include/kern/regdefs.h	/^#define t9 /;"	d
t9	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define t9 /;"	d
t9	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define t9 /;"	d
t9	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define t9 /;"	d
t9	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define t9 /;"	d
t_context	include/thread.h	/^	struct switchframe *t_context;	\/* Saved register context (on stack) *\/$/;"	m	struct:thread	typeref:struct:switchframe *
t_cpu	include/thread.h	/^	struct cpu *t_cpu;		\/* CPU thread runs on *\/$/;"	m	struct:thread	typeref:struct:cpu *
t_curspl	include/thread.h	/^	int t_curspl;			\/* Current spl*() state *\/$/;"	m	struct:thread	typeref:typename:int
t_in_interrupt	include/thread.h	/^	bool t_in_interrupt;		\/* Are we in an interrupt? *\/$/;"	m	struct:thread	typeref:typename:bool
t_iplhigh_count	include/thread.h	/^	int t_iplhigh_count;		\/* # of times IPL has been raised *\/$/;"	m	struct:thread	typeref:typename:int
t_listnode	include/thread.h	/^	struct threadlistnode t_listnode; \/* Link for run\/sleep\/zombie lists *\/$/;"	m	struct:thread	typeref:struct:threadlistnode
t_machdep	include/thread.h	/^	struct thread_machdep t_machdep; \/* Any machine-dependent goo *\/$/;"	m	struct:thread	typeref:struct:thread_machdep
t_name	include/thread.h	/^	char *t_name;			\/* Name of this thread *\/$/;"	m	struct:thread	typeref:typename:char *
t_proc	include/thread.h	/^	struct proc *t_proc;		\/* Process thread belongs to *\/$/;"	m	struct:thread	typeref:struct:proc *
t_stack	include/thread.h	/^	void *t_stack;			\/* Kernel-level stack *\/$/;"	m	struct:thread	typeref:typename:void *
t_state	include/thread.h	/^	threadstate_t t_state;		\/* State this thread is in *\/$/;"	m	struct:thread	typeref:typename:threadstate_t
t_wchan_name	include/thread.h	/^	const char *t_wchan_name;	\/* Name of wait channel, if sleeping *\/$/;"	m	struct:thread	typeref:typename:const char *
testa	test/arraytest.c	/^testa(struct array *a)$/;"	f	typeref:typename:void	file:
testcv	test/synchtest.c	/^static struct cv *testcv;$/;"	v	typeref:struct:cv *	file:
testcvs	test/synchtest.c	/^static struct cv *testcvs[NCVS];$/;"	v	typeref:struct:cv * []	file:
testlock	test/synchtest.c	/^static struct lock *testlock;$/;"	v	typeref:struct:lock *	file:
testlocks	test/synchtest.c	/^static struct lock *testlocks[NCVS];$/;"	v	typeref:struct:lock * []	file:
testmenu	main/menu.c	/^static const char *testmenu[] = {$/;"	v	typeref:typename:const char * []	file:
testsem	test/synchtest.c	/^static struct semaphore *testsem;$/;"	v	typeref:struct:semaphore *	file:
testval1	test/synchtest.c	/^static volatile unsigned long testval1;$/;"	v	typeref:typename:volatile unsigned long	file:
testval2	test/synchtest.c	/^static volatile unsigned long testval2;$/;"	v	typeref:typename:volatile unsigned long	file:
testval3	test/synchtest.c	/^static volatile unsigned long testval3;$/;"	v	typeref:typename:volatile unsigned long	file:
tf_a0	arch/mips/include/trapframe.h	/^	uint32_t tf_a0;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_a0	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_a0;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_a0	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_a0;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_a1	arch/mips/include/trapframe.h	/^	uint32_t tf_a1;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_a1	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_a1;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_a1	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_a1;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_a2	arch/mips/include/trapframe.h	/^	uint32_t tf_a2;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_a2	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_a2;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_a2	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_a2;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_a3	arch/mips/include/trapframe.h	/^	uint32_t tf_a3;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_a3	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_a3;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_a3	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_a3;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_at	arch/mips/include/trapframe.h	/^	uint32_t tf_at;		\/* Saved register 1 (AT) *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_at	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_at;		\/* Saved register 1 (AT) *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_at	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_at;		\/* Saved register 1 (AT) *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_cause	arch/mips/include/trapframe.h	/^	uint32_t tf_cause;	\/* coprocessor 0 cause register *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_cause	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_cause;	\/* coprocessor 0 cause register *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_cause	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_cause;	\/* coprocessor 0 cause register *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_epc	arch/mips/include/trapframe.h	/^	uint32_t tf_epc;	\/* coprocessor 0 epc register *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_epc	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_epc;	\/* coprocessor 0 epc register *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_epc	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_epc;	\/* coprocessor 0 epc register *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_gp	arch/mips/include/trapframe.h	/^	uint32_t tf_gp;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_gp	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_gp;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_gp	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_gp;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_hi	arch/mips/include/trapframe.h	/^	uint32_t tf_hi;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_hi	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_hi;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_hi	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_hi;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_k0	arch/mips/include/trapframe.h	/^	uint32_t tf_k0;		\/* dummy (see exception-mips1.S comments) *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_k0	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_k0;		\/* dummy (see exception-mips1.S comments) *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_k0	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_k0;		\/* dummy (see exception-mips1.S comments) *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_k1	arch/mips/include/trapframe.h	/^	uint32_t tf_k1;		\/* dummy *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_k1	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_k1;		\/* dummy *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_k1	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_k1;		\/* dummy *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_lo	arch/mips/include/trapframe.h	/^	uint32_t tf_lo;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_lo	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_lo;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_lo	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_lo;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_ra	arch/mips/include/trapframe.h	/^	uint32_t tf_ra;		\/* Saved register 31 *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_ra	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_ra;		\/* Saved register 31 *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_ra	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_ra;		\/* Saved register 31 *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s0	arch/mips/include/trapframe.h	/^	uint32_t tf_s0;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s0	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_s0;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s0	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_s0;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s1	arch/mips/include/trapframe.h	/^	uint32_t tf_s1;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s1	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_s1;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s1	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_s1;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s2	arch/mips/include/trapframe.h	/^	uint32_t tf_s2;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s2	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_s2;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s2	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_s2;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s3	arch/mips/include/trapframe.h	/^	uint32_t tf_s3;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s3	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_s3;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s3	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_s3;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s4	arch/mips/include/trapframe.h	/^	uint32_t tf_s4;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s4	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_s4;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s4	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_s4;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s5	arch/mips/include/trapframe.h	/^	uint32_t tf_s5;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s5	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_s5;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s5	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_s5;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s6	arch/mips/include/trapframe.h	/^	uint32_t tf_s6;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s6	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_s6;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s6	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_s6;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s7	arch/mips/include/trapframe.h	/^	uint32_t tf_s7;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s7	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_s7;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s7	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_s7;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s8	arch/mips/include/trapframe.h	/^	uint32_t tf_s8;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s8	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_s8;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_s8	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_s8;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_sp	arch/mips/include/trapframe.h	/^	uint32_t tf_sp;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_sp	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_sp;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_sp	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_sp;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_status	arch/mips/include/trapframe.h	/^	uint32_t tf_status;	\/* coprocessor 0 status register *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_status	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_status;	\/* coprocessor 0 status register *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_status	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_status;	\/* coprocessor 0 status register *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t0	arch/mips/include/trapframe.h	/^	uint32_t tf_t0;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t0	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_t0;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t0	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_t0;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t1	arch/mips/include/trapframe.h	/^	uint32_t tf_t1;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t1	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_t1;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t1	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_t1;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t2	arch/mips/include/trapframe.h	/^	uint32_t tf_t2;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t2	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_t2;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t2	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_t2;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t3	arch/mips/include/trapframe.h	/^	uint32_t tf_t3;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t3	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_t3;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t3	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_t3;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t4	arch/mips/include/trapframe.h	/^	uint32_t tf_t4;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t4	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_t4;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t4	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_t4;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t5	arch/mips/include/trapframe.h	/^	uint32_t tf_t5;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t5	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_t5;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t5	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_t5;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t6	arch/mips/include/trapframe.h	/^	uint32_t tf_t6;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t6	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_t6;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t6	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_t6;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t7	arch/mips/include/trapframe.h	/^	uint32_t tf_t7;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t7	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_t7;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t7	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_t7;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t8	arch/mips/include/trapframe.h	/^	uint32_t tf_t8;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t8	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_t8;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t8	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_t8;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t9	arch/mips/include/trapframe.h	/^	uint32_t tf_t9;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t9	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_t9;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_t9	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_t9;$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_v0	arch/mips/include/trapframe.h	/^	uint32_t tf_v0;		\/* Saved register 2 (v0) *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_v0	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_v0;		\/* Saved register 2 (v0) *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_v0	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_v0;		\/* Saved register 2 (v0) *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_v1	arch/mips/include/trapframe.h	/^	uint32_t tf_v1;		\/* etc. *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_v1	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_v1;		\/* etc. *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_v1	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_v1;		\/* etc. *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_vaddr	arch/mips/include/trapframe.h	/^	uint32_t tf_vaddr;	\/* coprocessor 0 vaddr register *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_vaddr	compile/DUMBVM/includelinks/machine/trapframe.h	/^	uint32_t tf_vaddr;	\/* coprocessor 0 vaddr register *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
tf_vaddr	compile/DUMBVM/includelinks/mips/trapframe.h	/^	uint32_t tf_vaddr;	\/* coprocessor 0 vaddr register *\/$/;"	m	struct:trapframe	typeref:typename:uint32_t
the_beep	dev/generic/beep.c	/^static struct beep_softc *the_beep = NULL;$/;"	v	typeref:struct:beep_softc *	file:
the_clock	dev/generic/rtclock.c	/^static struct rtclock_softc *the_clock = NULL;$/;"	v	typeref:struct:rtclock_softc *	file:
the_console	dev/generic/console.c	/^static struct con_softc *the_console = NULL;$/;"	v	typeref:struct:con_softc *	file:
the_random	dev/generic/random.c	/^static struct random_softc *the_random = NULL;$/;"	v	typeref:struct:random_softc *	file:
the_trace	dev/lamebus/ltrace.c	/^static struct ltrace_softc *the_trace;$/;"	v	typeref:struct:ltrace_softc *	file:
thread	include/thread.h	/^struct thread {$/;"	s
thread_bootstrap	thread/thread.c	/^thread_bootstrap(void)$/;"	f	typeref:typename:void
thread_checkstack	thread/thread.c	/^thread_checkstack(struct thread *thread)$/;"	f	typeref:typename:void	file:
thread_checkstack_init	thread/thread.c	/^thread_checkstack_init(struct thread *thread)$/;"	f	typeref:typename:void	file:
thread_consider_migration	thread/thread.c	/^thread_consider_migration(void)$/;"	f	typeref:typename:void
thread_create	thread/thread.c	/^thread_create(const char *name)$/;"	f	typeref:struct:thread *	file:
thread_destroy	thread/thread.c	/^thread_destroy(struct thread *thread)$/;"	f	typeref:typename:void	file:
thread_exit	thread/thread.c	/^thread_exit(void)$/;"	f	typeref:typename:void
thread_fork	thread/thread.c	/^thread_fork(const char *name,$/;"	f	typeref:typename:int
thread_machdep	arch/mips/include/thread.h	/^struct thread_machdep {$/;"	s
thread_machdep	compile/DUMBVM/includelinks/machine/thread.h	/^struct thread_machdep {$/;"	s
thread_machdep	compile/DUMBVM/includelinks/mips/thread.h	/^struct thread_machdep {$/;"	s
thread_machdep_cleanup	arch/mips/thread/thread_machdep.c	/^thread_machdep_cleanup(struct thread_machdep *tm)$/;"	f	typeref:typename:void
thread_machdep_init	arch/mips/thread/thread_machdep.c	/^thread_machdep_init(struct thread_machdep *tm)$/;"	f	typeref:typename:void
thread_make_runnable	thread/thread.c	/^thread_make_runnable(struct thread *target, bool already_have_lock)$/;"	f	typeref:typename:void	file:
thread_panic	thread/thread.c	/^thread_panic(void)$/;"	f	typeref:typename:void
thread_shutdown	thread/thread.c	/^thread_shutdown(void)$/;"	f	typeref:typename:void
thread_start_cpus	thread/thread.c	/^thread_start_cpus(void)$/;"	f	typeref:typename:void
thread_startup	thread/thread.c	/^thread_startup(void (*entrypoint)(void *data1, unsigned long data2),$/;"	f	typeref:typename:void
thread_switch	thread/thread.c	/^thread_switch(threadstate_t newstate, struct wchan *wc, struct spinlock *lk)$/;"	f	typeref:typename:void	file:
thread_yield	thread/thread.c	/^thread_yield(void)$/;"	f	typeref:typename:void
threadlist	include/threadlist.h	/^struct threadlist {$/;"	s
threadlist_addhead	thread/threadlist.c	/^threadlist_addhead(struct threadlist *tl, struct thread *t)$/;"	f	typeref:typename:void
threadlist_addtail	thread/threadlist.c	/^threadlist_addtail(struct threadlist *tl, struct thread *t)$/;"	f	typeref:typename:void
threadlist_cleanup	thread/threadlist.c	/^threadlist_cleanup(struct threadlist *tl)$/;"	f	typeref:typename:void
threadlist_init	thread/threadlist.c	/^threadlist_init(struct threadlist *tl)$/;"	f	typeref:typename:void
threadlist_insertafter	thread/threadlist.c	/^threadlist_insertafter(struct threadlist *tl,$/;"	f	typeref:typename:void
threadlist_insertafternode	thread/threadlist.c	/^threadlist_insertafternode(struct threadlistnode *onlist, struct thread *t)$/;"	f	typeref:typename:void	file:
threadlist_insertbefore	thread/threadlist.c	/^threadlist_insertbefore(struct threadlist *tl,$/;"	f	typeref:typename:void
threadlist_insertbeforenode	thread/threadlist.c	/^threadlist_insertbeforenode(struct thread *t, struct threadlistnode *onlist)$/;"	f	typeref:typename:void	file:
threadlist_isempty	thread/threadlist.c	/^threadlist_isempty(struct threadlist *tl)$/;"	f	typeref:typename:bool
threadlist_remhead	thread/threadlist.c	/^threadlist_remhead(struct threadlist *tl)$/;"	f	typeref:struct:thread *
threadlist_remove	thread/threadlist.c	/^threadlist_remove(struct threadlist *tl, struct thread *t)$/;"	f	typeref:typename:void
threadlist_removenode	thread/threadlist.c	/^threadlist_removenode(struct threadlistnode *tln)$/;"	f	typeref:typename:void	file:
threadlist_remtail	thread/threadlist.c	/^threadlist_remtail(struct threadlist *tl)$/;"	f	typeref:struct:thread *
threadlistnode	include/threadlist.h	/^struct threadlistnode {$/;"	s
threadlistnode_cleanup	thread/threadlist.c	/^threadlistnode_cleanup(struct threadlistnode *tln)$/;"	f	typeref:typename:void
threadlistnode_init	thread/threadlist.c	/^threadlistnode_init(struct threadlistnode *tln, struct thread *t)$/;"	f	typeref:typename:void
threadlisttest	test/threadlisttest.c	/^threadlisttest(int nargs, char **args)$/;"	f	typeref:typename:int
threadlisttest_a	test/threadlisttest.c	/^threadlisttest_a(void)$/;"	f	typeref:typename:void	file:
threadlisttest_b	test/threadlisttest.c	/^threadlisttest_b(void)$/;"	f	typeref:typename:void	file:
threadlisttest_c	test/threadlisttest.c	/^threadlisttest_c(void)$/;"	f	typeref:typename:void	file:
threadlisttest_d	test/threadlisttest.c	/^threadlisttest_d(void)$/;"	f	typeref:typename:void	file:
threadlisttest_e	test/threadlisttest.c	/^threadlisttest_e(void)$/;"	f	typeref:typename:void	file:
threadlisttest_f	test/threadlisttest.c	/^threadlisttest_f(void)$/;"	f	typeref:typename:void	file:
threadsem	test/fstest.c	/^static struct semaphore *threadsem = NULL;$/;"	v	typeref:struct:semaphore *	file:
threadstate_t	include/thread.h	/^} threadstate_t;$/;"	t	typeref:enum:__anon256fc0460103
threadtest	test/threadtest.c	/^threadtest(int nargs, char **args)$/;"	f	typeref:typename:int
threadtest2	test/threadtest.c	/^threadtest2(int nargs, char **args)$/;"	f	typeref:typename:int
threadtest3	test/tt3.c	/^threadtest3(int nargs, char **args)$/;"	f	typeref:typename:int
time_t	include/types.h	/^typedef __time_t time_t;$/;"	t	typeref:typename:__time_t
timerclock	thread/clock.c	/^timerclock(void)$/;"	f	typeref:typename:void
timespec	include/kern/time.h	/^struct timespec {$/;"	s
timespec_add	lib/time.c	/^timespec_add(const struct timespec *ts1,$/;"	f	typeref:typename:void
timespec_sub	lib/time.c	/^timespec_sub(const struct timespec *ts1,$/;"	f	typeref:typename:void
timeval	include/kern/time.h	/^struct timeval {$/;"	s
tl_count	include/threadlist.h	/^	unsigned tl_count;$/;"	m	struct:threadlist	typeref:typename:unsigned
tl_head	include/threadlist.h	/^	struct threadlistnode tl_head;$/;"	m	struct:threadlist	typeref:struct:threadlistnode
tl_tail	include/threadlist.h	/^	struct threadlistnode tl_tail;$/;"	m	struct:threadlist	typeref:struct:threadlistnode
tlb_probe	arch/mips/vm/tlb-mips161.S	/^tlb_probe:$/;"	l
tlb_random	arch/mips/vm/tlb-mips161.S	/^tlb_random:$/;"	l
tlb_read	arch/mips/vm/tlb-mips161.S	/^tlb_read:$/;"	l
tlb_reset	arch/mips/vm/tlb-mips161.S	/^tlb_reset:$/;"	l
tlb_write	arch/mips/vm/tlb-mips161.S	/^tlb_write:$/;"	l
tlbshootdown	arch/mips/include/vm.h	/^struct tlbshootdown {$/;"	s
tlbshootdown	compile/DUMBVM/includelinks/machine/vm.h	/^struct tlbshootdown {$/;"	s
tlbshootdown	compile/DUMBVM/includelinks/mips/vm.h	/^struct tlbshootdown {$/;"	s
tln_next	include/threadlist.h	/^	struct threadlistnode *tln_next;$/;"	m	struct:threadlistnode	typeref:struct:threadlistnode *
tln_prev	include/threadlist.h	/^	struct threadlistnode *tln_prev;$/;"	m	struct:threadlistnode	typeref:struct:threadlistnode *
tln_self	include/threadlist.h	/^	struct thread *tln_self;$/;"	m	struct:threadlistnode	typeref:struct:thread *
tm_badfaultfunc	arch/mips/include/thread.h	/^	badfaultfunc_t tm_badfaultfunc;	\/* fault hook used by copyin\/out *\/$/;"	m	struct:thread_machdep	typeref:typename:badfaultfunc_t
tm_badfaultfunc	compile/DUMBVM/includelinks/machine/thread.h	/^	badfaultfunc_t tm_badfaultfunc;	\/* fault hook used by copyin\/out *\/$/;"	m	struct:thread_machdep	typeref:typename:badfaultfunc_t
tm_badfaultfunc	compile/DUMBVM/includelinks/mips/thread.h	/^	badfaultfunc_t tm_badfaultfunc;	\/* fault hook used by copyin\/out *\/$/;"	m	struct:thread_machdep	typeref:typename:badfaultfunc_t
tm_copyjmp	arch/mips/include/thread.h	/^	jmp_buf tm_copyjmp;		\/* longjmp area used by copyin\/out *\/$/;"	m	struct:thread_machdep	typeref:typename:jmp_buf
tm_copyjmp	compile/DUMBVM/includelinks/machine/thread.h	/^	jmp_buf tm_copyjmp;		\/* longjmp area used by copyin\/out *\/$/;"	m	struct:thread_machdep	typeref:typename:jmp_buf
tm_copyjmp	compile/DUMBVM/includelinks/mips/thread.h	/^	jmp_buf tm_copyjmp;		\/* longjmp area used by copyin\/out *\/$/;"	m	struct:thread_machdep	typeref:typename:jmp_buf
translate_err	dev/lamebus/emu.c	/^translate_err(struct emu_softc *sc, uint32_t code)$/;"	f	typeref:typename:uint32_t	file:
trapcodenames	arch/mips/locore/trap.c	/^static const char *const trapcodenames[NTRAPCODES] = {$/;"	v	typeref:typename:const char * const[]	file:
trapframe	arch/mips/include/trapframe.h	/^struct trapframe {$/;"	s
trapframe	compile/DUMBVM/includelinks/machine/trapframe.h	/^struct trapframe {$/;"	s
trapframe	compile/DUMBVM/includelinks/mips/trapframe.h	/^struct trapframe {$/;"	s
true	include/types.h	/^#define true /;"	d
tryattach	conf/config	/^    function tryattach(combo) {$/;"	f
tryattach_beep_to_ltimer	compile/DUMBVM/autoconf.c	/^tryattach_beep_to_ltimer(int devunit, struct ltimer_softc *bus, int busunit)$/;"	f	typeref:typename:int	file:
tryattach_con_to_lser	compile/DUMBVM/autoconf.c	/^tryattach_con_to_lser(int devunit, struct lser_softc *bus, int busunit)$/;"	f	typeref:typename:int	file:
tryattach_emu_to_lamebus	compile/DUMBVM/autoconf.c	/^tryattach_emu_to_lamebus(int devunit, struct lamebus_softc *bus, int busunit)$/;"	f	typeref:typename:int	file:
tryattach_lhd_to_lamebus	compile/DUMBVM/autoconf.c	/^tryattach_lhd_to_lamebus(int devunit, struct lamebus_softc *bus, int busunit)$/;"	f	typeref:typename:int	file:
tryattach_lrandom_to_lamebus	compile/DUMBVM/autoconf.c	/^tryattach_lrandom_to_lamebus(int devunit, struct lamebus_softc *bus, int busunit)$/;"	f	typeref:typename:int	file:
tryattach_lser_to_lamebus	compile/DUMBVM/autoconf.c	/^tryattach_lser_to_lamebus(int devunit, struct lamebus_softc *bus, int busunit)$/;"	f	typeref:typename:int	file:
tryattach_ltimer_to_lamebus	compile/DUMBVM/autoconf.c	/^tryattach_ltimer_to_lamebus(int devunit, struct lamebus_softc *bus, int busunit)$/;"	f	typeref:typename:int	file:
tryattach_ltrace_to_lamebus	compile/DUMBVM/autoconf.c	/^tryattach_ltrace_to_lamebus(int devunit, struct lamebus_softc *bus, int busunit)$/;"	f	typeref:typename:int	file:
tryattach_random_to_lrandom	compile/DUMBVM/autoconf.c	/^tryattach_random_to_lrandom(int devunit, struct lrandom_softc *bus, int busunit)$/;"	f	typeref:typename:int	file:
tryattach_rtclock_to_ltimer	compile/DUMBVM/autoconf.c	/^tryattach_rtclock_to_ltimer(int devunit, struct ltimer_softc *bus, int busunit)$/;"	f	typeref:typename:int	file:
ts_placeholder	arch/mips/include/vm.h	/^	int ts_placeholder;$/;"	m	struct:tlbshootdown	typeref:typename:int
ts_placeholder	compile/DUMBVM/includelinks/machine/vm.h	/^	int ts_placeholder;$/;"	m	struct:tlbshootdown	typeref:typename:int
ts_placeholder	compile/DUMBVM/includelinks/mips/vm.h	/^	int ts_placeholder;$/;"	m	struct:tlbshootdown	typeref:typename:int
tsem	test/threadtest.c	/^static struct semaphore *tsem = NULL;$/;"	v	typeref:struct:semaphore *	file:
tv_nsec	include/kern/time.h	/^        __i32 tv_nsec;          \/* nanoseconds *\/$/;"	m	struct:timespec	typeref:typename:__i32
tv_sec	include/kern/time.h	/^        __time_t tv_sec;        \/* seconds *\/$/;"	m	struct:timespec	typeref:typename:__time_t
tv_sec	include/kern/time.h	/^        __time_t tv_sec;        \/* seconds *\/$/;"	m	struct:timeval	typeref:typename:__time_t
tv_usec	include/kern/time.h	/^        __i32 tv_usec;          \/* microseconds *\/$/;"	m	struct:timeval	typeref:typename:__i32
uid_t	include/types.h	/^typedef __uid_t uid_t;$/;"	t	typeref:typename:__uid_t
uint16_t	include/types.h	/^typedef __u16 uint16_t;$/;"	t	typeref:typename:__u16
uint32_t	include/types.h	/^typedef __u32 uint32_t;$/;"	t	typeref:typename:__u32
uint64_t	include/types.h	/^typedef __u64 uint64_t;$/;"	t	typeref:typename:__u64
uint8_t	include/types.h	/^typedef __u8 uint8_t;$/;"	t	typeref:typename:__u8
uintptr_t	include/types.h	/^typedef __uintptr_t uintptr_t;$/;"	t	typeref:typename:__uintptr_t
uio	include/uio.h	/^struct uio {$/;"	s
uio_iov	include/uio.h	/^	struct iovec     *uio_iov;	\/* Data blocks *\/$/;"	m	struct:uio	typeref:struct:iovec *
uio_iovcnt	include/uio.h	/^	unsigned          uio_iovcnt;	\/* Number of iovecs *\/$/;"	m	struct:uio	typeref:typename:unsigned
uio_kinit	lib/uio.c	/^uio_kinit(struct iovec *iov, struct uio *u,$/;"	f	typeref:typename:void
uio_offset	include/uio.h	/^	off_t             uio_offset;	\/* Desired offset into object *\/$/;"	m	struct:uio	typeref:typename:off_t
uio_resid	include/uio.h	/^	size_t            uio_resid;	\/* Remaining amt of data to xfer *\/$/;"	m	struct:uio	typeref:typename:size_t
uio_rw	include/uio.h	/^	enum uio_rw       uio_rw;	\/* Whether op is a read or write *\/$/;"	m	struct:uio	typeref:enum:uio_rw
uio_rw	include/uio.h	/^enum uio_rw {$/;"	g
uio_seg	include/uio.h	/^enum uio_seg {$/;"	g
uio_segflg	include/uio.h	/^	enum uio_seg      uio_segflg;	\/* What kind of pointer we have *\/$/;"	m	struct:uio	typeref:enum:uio_seg
uio_space	include/uio.h	/^	struct addrspace *uio_space;	\/* Address space for user pointer *\/$/;"	m	struct:uio	typeref:struct:addrspace *
uiomove	lib/uio.c	/^uiomove(void *ptr, size_t n, struct uio *uio)$/;"	f	typeref:typename:int
uiomovezeros	lib/uio.c	/^uiomovezeros(size_t n, struct uio *uio)$/;"	f	typeref:typename:int
userptr_t	include/types.h	/^typedef struct __userptr *userptr_t;$/;"	t	typeref:struct:__userptr *
v	include/array.h	/^	void **v;$/;"	m	struct:array	typeref:typename:void **
v	lib/bitmap.c	/^        WORD_TYPE *v;$/;"	m	struct:bitmap	typeref:typename:WORD_TYPE *	file:
v0	arch/mips/include/kern/regdefs.h	/^#define v0 /;"	d
v0	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define v0 /;"	d
v0	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define v0 /;"	d
v0	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define v0 /;"	d
v0	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define v0 /;"	d
v1	arch/mips/include/kern/regdefs.h	/^#define v1 /;"	d
v1	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define v1 /;"	d
v1	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define v1 /;"	d
v1	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define v1 /;"	d
v1	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define v1 /;"	d
va_arg	include/stdarg.h	/^#define va_arg(/;"	d
va_copy	include/stdarg.h	/^#define va_copy(/;"	d
va_end	include/stdarg.h	/^#define va_end(/;"	d
va_list	include/stdarg.h	/^typedef __va_list va_list;$/;"	t	typeref:typename:__va_list
va_start	include/stdarg.h	/^#define va_start(/;"	d
vaddr_t	arch/mips/include/types.h	/^typedef __u32 vaddr_t;$/;"	t	typeref:typename:__u32
vaddr_t	compile/DUMBVM/includelinks/machine/types.h	/^typedef __u32 vaddr_t;$/;"	t	typeref:typename:__u32
vaddr_t	compile/DUMBVM/includelinks/mips/types.h	/^typedef __u32 vaddr_t;$/;"	t	typeref:typename:__u32
vfs_adddev	vfs/vfslist.c	/^vfs_adddev(const char *devname, struct device *dev, int mountable)$/;"	f	typeref:typename:int
vfs_addfs	vfs/vfslist.c	/^vfs_addfs(const char *devname, struct fs *fs)$/;"	f	typeref:typename:int
vfs_biglock	vfs/vfslist.c	/^static struct lock *vfs_biglock;$/;"	v	typeref:struct:lock *	file:
vfs_biglock_acquire	vfs/vfslist.c	/^vfs_biglock_acquire(void)$/;"	f	typeref:typename:void
vfs_biglock_depth	vfs/vfslist.c	/^static unsigned vfs_biglock_depth;$/;"	v	typeref:typename:unsigned	file:
vfs_biglock_do_i_hold	vfs/vfslist.c	/^vfs_biglock_do_i_hold(void)$/;"	f	typeref:typename:bool
vfs_biglock_release	vfs/vfslist.c	/^vfs_biglock_release(void)$/;"	f	typeref:typename:void
vfs_bootstrap	vfs/vfslist.c	/^vfs_bootstrap(void)$/;"	f	typeref:typename:void
vfs_chdir	vfs/vfscwd.c	/^vfs_chdir(char *path)$/;"	f	typeref:typename:int
vfs_clearbootfs	vfs/vfslookup.c	/^vfs_clearbootfs(void)$/;"	f	typeref:typename:void
vfs_clearcurdir	vfs/vfscwd.c	/^vfs_clearcurdir(void)$/;"	f	typeref:typename:int
vfs_close	vfs/vfspath.c	/^vfs_close(struct vnode *vn)$/;"	f	typeref:typename:void
vfs_doadd	vfs/vfslist.c	/^vfs_doadd(const char *dname, int mountable, struct device *dev, struct fs *fs)$/;"	f	typeref:typename:int	file:
vfs_getcurdir	vfs/vfscwd.c	/^vfs_getcurdir(struct vnode **ret)$/;"	f	typeref:typename:int
vfs_getcwd	vfs/vfscwd.c	/^vfs_getcwd(struct uio *uio)$/;"	f	typeref:typename:int
vfs_getdevname	vfs/vfslist.c	/^vfs_getdevname(struct fs *fs)$/;"	f	typeref:typename:const char *
vfs_getroot	vfs/vfslist.c	/^vfs_getroot(const char *devname, struct vnode **result)$/;"	f	typeref:typename:int
vfs_link	vfs/vfspath.c	/^vfs_link(char *oldpath, char *newpath)$/;"	f	typeref:typename:int
vfs_lookparent	vfs/vfslookup.c	/^vfs_lookparent(char *path, struct vnode **retval,$/;"	f	typeref:typename:int
vfs_lookup	vfs/vfslookup.c	/^vfs_lookup(char *path, struct vnode **retval)$/;"	f	typeref:typename:int
vfs_mkdir	vfs/vfspath.c	/^vfs_mkdir(char *path, mode_t mode)$/;"	f	typeref:typename:int
vfs_mount	vfs/vfslist.c	/^vfs_mount(const char *devname, void *data,$/;"	f	typeref:typename:int
vfs_open	vfs/vfspath.c	/^vfs_open(char *path, int openflags, mode_t mode, struct vnode **ret)$/;"	f	typeref:typename:int
vfs_readlink	vfs/vfspath.c	/^vfs_readlink(char *path, struct uio *uio)$/;"	f	typeref:typename:int
vfs_remove	vfs/vfspath.c	/^vfs_remove(char *path)$/;"	f	typeref:typename:int
vfs_rename	vfs/vfspath.c	/^vfs_rename(char *oldpath, char *newpath)$/;"	f	typeref:typename:int
vfs_rmdir	vfs/vfspath.c	/^vfs_rmdir(char *path)$/;"	f	typeref:typename:int
vfs_setbootfs	vfs/vfslookup.c	/^vfs_setbootfs(const char *fsname)$/;"	f	typeref:typename:int
vfs_setcurdir	vfs/vfscwd.c	/^vfs_setcurdir(struct vnode *dir)$/;"	f	typeref:typename:int
vfs_symlink	vfs/vfspath.c	/^vfs_symlink(const char *contents, char *path)$/;"	f	typeref:typename:int
vfs_sync	vfs/vfslist.c	/^vfs_sync(void)$/;"	f	typeref:typename:int
vfs_unmount	vfs/vfslist.c	/^vfs_unmount(const char *devname)$/;"	f	typeref:typename:int
vfs_unmountall	vfs/vfslist.c	/^vfs_unmountall(void)$/;"	f	typeref:typename:int
vm_bootstrap	arch/mips/vm/dumbvm.c	/^vm_bootstrap(void)$/;"	f	typeref:typename:void
vm_fault	arch/mips/vm/dumbvm.c	/^vm_fault(int faulttype, vaddr_t faultaddress)$/;"	f	typeref:typename:int
vm_tlbshootdown	arch/mips/vm/dumbvm.c	/^vm_tlbshootdown(const struct tlbshootdown *ts)$/;"	f	typeref:typename:void
vm_tlbshootdown_all	arch/mips/vm/dumbvm.c	/^vm_tlbshootdown_all(void)$/;"	f	typeref:typename:void
vn_countlock	include/vnode.h	/^	struct spinlock vn_countlock;   \/* Lock for vn_refcount *\/$/;"	m	struct:vnode	typeref:struct:spinlock
vn_data	include/vnode.h	/^	void *vn_data;                  \/* Filesystem-specific data *\/$/;"	m	struct:vnode	typeref:typename:void *
vn_fs	include/vnode.h	/^	struct fs *vn_fs;               \/* Filesystem vnode belongs to *\/$/;"	m	struct:vnode	typeref:struct:fs *
vn_ops	include/vnode.h	/^	const struct vnode_ops *vn_ops; \/* Functions on this vnode *\/$/;"	m	struct:vnode	typeref:typename:const struct vnode_ops *
vn_refcount	include/vnode.h	/^	int vn_refcount;                \/* Reference count *\/$/;"	m	struct:vnode	typeref:typename:int
vnode	include/vnode.h	/^struct vnode {$/;"	s
vnode_check	vfs/vnode.c	/^vnode_check(struct vnode *v, const char *opstr)$/;"	f	typeref:typename:void
vnode_cleanup	vfs/vnode.c	/^vnode_cleanup(struct vnode *vn)$/;"	f	typeref:typename:void
vnode_decref	vfs/vnode.c	/^vnode_decref(struct vnode *vn)$/;"	f	typeref:typename:void
vnode_incref	vfs/vnode.c	/^vnode_incref(struct vnode *vn)$/;"	f	typeref:typename:void
vnode_init	vfs/vnode.c	/^vnode_init(struct vnode *vn, const struct vnode_ops *ops,$/;"	f	typeref:typename:int
vnode_ops	include/vnode.h	/^struct vnode_ops {$/;"	s
vop_creat	include/vnode.h	/^	int (*vop_creat)(struct vnode *dir,$/;"	m	struct:vnode_ops	typeref:typename:int (*)(struct vnode * dir,const char * name,bool excl,mode_t mode,struct vnode ** result)
vop_eachopen	include/vnode.h	/^	int (*vop_eachopen)(struct vnode *object, int flags_from_open);$/;"	m	struct:vnode_ops	typeref:typename:int (*)(struct vnode * object,int flags_from_open)
vop_fsync	include/vnode.h	/^	int (*vop_fsync)(struct vnode *object);$/;"	m	struct:vnode_ops	typeref:typename:int (*)(struct vnode * object)
vop_getdirentry	include/vnode.h	/^	int (*vop_getdirentry)(struct vnode *dir, struct uio *uio);$/;"	m	struct:vnode_ops	typeref:typename:int (*)(struct vnode * dir,struct uio * uio)
vop_gettype	include/vnode.h	/^	int (*vop_gettype)(struct vnode *object, mode_t *result);$/;"	m	struct:vnode_ops	typeref:typename:int (*)(struct vnode * object,mode_t * result)
vop_ioctl	include/vnode.h	/^	int (*vop_ioctl)(struct vnode *object, int op, userptr_t data);$/;"	m	struct:vnode_ops	typeref:typename:int (*)(struct vnode * object,int op,userptr_t data)
vop_isseekable	include/vnode.h	/^	bool (*vop_isseekable)(struct vnode *object);$/;"	m	struct:vnode_ops	typeref:typename:bool (*)(struct vnode * object)
vop_link	include/vnode.h	/^	int (*vop_link)(struct vnode *dir,$/;"	m	struct:vnode_ops	typeref:typename:int (*)(struct vnode * dir,const char * name,struct vnode * file)
vop_lookparent	include/vnode.h	/^	int (*vop_lookparent)(struct vnode *dir,$/;"	m	struct:vnode_ops	typeref:typename:int (*)(struct vnode * dir,char * pathname,struct vnode ** result,char * buf,size_t len)
vop_lookup	include/vnode.h	/^	int (*vop_lookup)(struct vnode *dir,$/;"	m	struct:vnode_ops	typeref:typename:int (*)(struct vnode * dir,char * pathname,struct vnode ** result)
vop_magic	include/vnode.h	/^	unsigned long vop_magic;	\/* should always be VOP_MAGIC *\/$/;"	m	struct:vnode_ops	typeref:typename:unsigned long
vop_mkdir	include/vnode.h	/^	int (*vop_mkdir)(struct vnode *parentdir,$/;"	m	struct:vnode_ops	typeref:typename:int (*)(struct vnode * parentdir,const char * name,mode_t mode)
vop_mmap	include/vnode.h	/^	int (*vop_mmap)(struct vnode *file \/* add stuff *\/);$/;"	m	struct:vnode_ops	typeref:typename:int (*)(struct vnode * file)
vop_namefile	include/vnode.h	/^	int (*vop_namefile)(struct vnode *file, struct uio *uio);$/;"	m	struct:vnode_ops	typeref:typename:int (*)(struct vnode * file,struct uio * uio)
vop_read	include/vnode.h	/^	int (*vop_read)(struct vnode *file, struct uio *uio);$/;"	m	struct:vnode_ops	typeref:typename:int (*)(struct vnode * file,struct uio * uio)
vop_readlink	include/vnode.h	/^	int (*vop_readlink)(struct vnode *link, struct uio *uio);$/;"	m	struct:vnode_ops	typeref:typename:int (*)(struct vnode * link,struct uio * uio)
vop_reclaim	include/vnode.h	/^	int (*vop_reclaim)(struct vnode *vnode);$/;"	m	struct:vnode_ops	typeref:typename:int (*)(struct vnode * vnode)
vop_remove	include/vnode.h	/^	int (*vop_remove)(struct vnode *dir,$/;"	m	struct:vnode_ops	typeref:typename:int (*)(struct vnode * dir,const char * name)
vop_rename	include/vnode.h	/^	int (*vop_rename)(struct vnode *vn1, const char *name1,$/;"	m	struct:vnode_ops	typeref:typename:int (*)(struct vnode * vn1,const char * name1,struct vnode * vn2,const char * name2)
vop_rmdir	include/vnode.h	/^	int (*vop_rmdir)(struct vnode *dir,$/;"	m	struct:vnode_ops	typeref:typename:int (*)(struct vnode * dir,const char * name)
vop_stat	include/vnode.h	/^	int (*vop_stat)(struct vnode *object, struct stat *statbuf);$/;"	m	struct:vnode_ops	typeref:typename:int (*)(struct vnode * object,struct stat * statbuf)
vop_symlink	include/vnode.h	/^	int (*vop_symlink)(struct vnode *dir,$/;"	m	struct:vnode_ops	typeref:typename:int (*)(struct vnode * dir,const char * contents,const char * name)
vop_truncate	include/vnode.h	/^	int (*vop_truncate)(struct vnode *file, off_t len);$/;"	m	struct:vnode_ops	typeref:typename:int (*)(struct vnode * file,off_t len)
vop_write	include/vnode.h	/^	int (*vop_write)(struct vnode *file, struct uio *uio);$/;"	m	struct:vnode_ops	typeref:typename:int (*)(struct vnode * file,struct uio * uio)
vopfail_creat_notdir	vfs/vfsfail.c	/^vopfail_creat_notdir(struct vnode *vn, const char *name, bool excl,$/;"	f	typeref:typename:int
vopfail_link_nosys	vfs/vfsfail.c	/^vopfail_link_nosys(struct vnode *dir, const char *name, struct vnode *file)$/;"	f	typeref:typename:int
vopfail_link_notdir	vfs/vfsfail.c	/^vopfail_link_notdir(struct vnode *dir, const char *name, struct vnode *file)$/;"	f	typeref:typename:int
vopfail_lookparent_notdir	vfs/vfsfail.c	/^vopfail_lookparent_notdir(struct vnode *vn, char *path, struct vnode **result,$/;"	f	typeref:typename:int
vopfail_lookup_notdir	vfs/vfsfail.c	/^vopfail_lookup_notdir(struct vnode *vn, char *path, struct vnode **result)$/;"	f	typeref:typename:int
vopfail_mkdir_nosys	vfs/vfsfail.c	/^vopfail_mkdir_nosys(struct vnode *vn, const char *name, mode_t mode)$/;"	f	typeref:typename:int
vopfail_mkdir_notdir	vfs/vfsfail.c	/^vopfail_mkdir_notdir(struct vnode *vn, const char *name, mode_t mode)$/;"	f	typeref:typename:int
vopfail_mmap_isdir	vfs/vfsfail.c	/^vopfail_mmap_isdir(struct vnode *vn \/*add stuff *\/)$/;"	f	typeref:typename:int
vopfail_mmap_nosys	vfs/vfsfail.c	/^vopfail_mmap_nosys(struct vnode *vn \/*add stuff *\/)$/;"	f	typeref:typename:int
vopfail_mmap_perm	vfs/vfsfail.c	/^vopfail_mmap_perm(struct vnode *vn \/*add stuff *\/)$/;"	f	typeref:typename:int
vopfail_rename_nosys	vfs/vfsfail.c	/^vopfail_rename_nosys(struct vnode *fromdir, const char *fromname,$/;"	f	typeref:typename:int
vopfail_rename_notdir	vfs/vfsfail.c	/^vopfail_rename_notdir(struct vnode *fromdir, const char *fromname,$/;"	f	typeref:typename:int
vopfail_string_nosys	vfs/vfsfail.c	/^vopfail_string_nosys(struct vnode *vn, const char *name)$/;"	f	typeref:typename:int
vopfail_string_notdir	vfs/vfsfail.c	/^vopfail_string_notdir(struct vnode *vn, const char *name)$/;"	f	typeref:typename:int
vopfail_symlink_nosys	vfs/vfsfail.c	/^vopfail_symlink_nosys(struct vnode *vn, const char *contents,$/;"	f	typeref:typename:int
vopfail_symlink_notdir	vfs/vfsfail.c	/^vopfail_symlink_notdir(struct vnode *vn, const char *contents,$/;"	f	typeref:typename:int
vopfail_truncate_isdir	vfs/vfsfail.c	/^vopfail_truncate_isdir(struct vnode *vn, off_t pos)$/;"	f	typeref:typename:int
vopfail_uio_inval	vfs/vfsfail.c	/^vopfail_uio_inval(struct vnode *vn, struct uio *uio)$/;"	f	typeref:typename:int
vopfail_uio_isdir	vfs/vfsfail.c	/^vopfail_uio_isdir(struct vnode *vn, struct uio *uio)$/;"	f	typeref:typename:int
vopfail_uio_nosys	vfs/vfsfail.c	/^vopfail_uio_nosys(struct vnode *vn, struct uio *uio)$/;"	f	typeref:typename:int
vopfail_uio_notdir	vfs/vfsfail.c	/^vopfail_uio_notdir(struct vnode *vn, struct uio *uio)$/;"	f	typeref:typename:int
wait	arch/mips/thread/cpu.c	/^wait(void)$/;"	f	typeref:typename:void	file:
waitchans	test/tt3.c	/^static struct wchan *waitchans[NWAITCHANS];$/;"	v	typeref:struct:wchan * []	file:
waker_thread	test/tt3.c	/^waker_thread(void *junk1, unsigned long junk2)$/;"	f	typeref:typename:void	file:
wakerdone	test/tt3.c	/^static volatile int wakerdone;$/;"	v	typeref:typename:volatile int	file:
wakersem	test/tt3.c	/^static struct semaphore *wakersem;$/;"	v	typeref:struct:semaphore *	file:
wakethread	test/synchtest.c	/^wakethread(void *junk1, unsigned long junk2)$/;"	f	typeref:typename:void	file:
wc_index	thread/thread.c	/^	unsigned wc_index;		\/* index into allwchans[] *\/$/;"	m	struct:wchan	typeref:typename:unsigned	file:
wc_name	thread/thread.c	/^	const char *wc_name;		\/* name for this channel *\/$/;"	m	struct:wchan	typeref:typename:const char *	file:
wc_threads	thread/thread.c	/^	struct threadlist wc_threads;	\/* list of waiting threads *\/$/;"	m	struct:wchan	typeref:struct:threadlist	file:
wchan	thread/thread.c	/^struct wchan {$/;"	s	file:
wchan_create	thread/thread.c	/^wchan_create(const char *name)$/;"	f	typeref:struct:wchan *
wchan_destroy	thread/thread.c	/^wchan_destroy(struct wchan *wc)$/;"	f	typeref:typename:void
wchan_isempty	thread/thread.c	/^wchan_isempty(struct wchan *wc, struct spinlock *lk)$/;"	f	typeref:typename:bool
wchan_sleep	thread/thread.c	/^wchan_sleep(struct wchan *wc, struct spinlock *lk)$/;"	f	typeref:typename:void
wchan_wakeall	thread/thread.c	/^wchan_wakeall(struct wchan *wc, struct spinlock *lk)$/;"	f	typeref:typename:void
wchan_wakeone	thread/thread.c	/^wchan_wakeone(struct wchan *wc, struct spinlock *lk)$/;"	f	typeref:typename:void
write_cfg_register	dev/lamebus/lamebus.c	/^write_cfg_register(struct lamebus_softc *lb, int slot, uint32_t offset,$/;"	f	typeref:typename:void	file:
write_ctl_register	dev/lamebus/lamebus.c	/^write_ctl_register(struct lamebus_softc *lb, uint32_t offset, uint32_t val)$/;"	f	typeref:typename:void	file:
write_ctlcpu_register	dev/lamebus/lamebus.c	/^write_ctlcpu_register(struct lamebus_softc *lb, unsigned hw_cpunum,$/;"	f	typeref:typename:void	file:
writestress2_thread	test/fstest.c	/^writestress2_thread(void *fs, unsigned long num)$/;"	f	typeref:typename:void	file:
writestress_thread	test/fstest.c	/^writestress_thread(void *fs, unsigned long num)$/;"	f	typeref:typename:void	file:
z0	arch/mips/include/kern/regdefs.h	/^#define z0 /;"	d
z0	compile/DUMBVM/includelinks/kern/machine/regdefs.h	/^#define z0 /;"	d
z0	compile/DUMBVM/includelinks/kern/mips/regdefs.h	/^#define z0 /;"	d
z0	compile/DUMBVM/includelinks/machine/kern/regdefs.h	/^#define z0 /;"	d
z0	compile/DUMBVM/includelinks/mips/kern/regdefs.h	/^#define z0 /;"	d
